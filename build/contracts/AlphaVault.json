{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToVault0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToVault1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToProtocol0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feesToProtocol1",
          "type": "uint256"
        }
      ],
      "name": "CollectFees",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "Snapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accruedProtocolFees0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accruedProtocolFees1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseLower",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUpper",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "collectProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0Desired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Desired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0Min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Min",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        },
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        }
      ],
      "name": "emergencyBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "name": "getPositionAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalAmounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "total1",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitLower",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitUpper",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "swapAmount",
          "type": "int256"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceLimitX96",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "_baseLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_baseUpper",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_bidLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_bidUpper",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_askLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_askUpper",
          "type": "int24"
        }
      ],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxTotalSupply",
          "type": "uint256"
        }
      ],
      "name": "setMaxTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_protocolFee",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "setStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3MintCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount0Min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Min",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
    "1": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "10": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
    "11": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
    "12": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
    "13": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
    "14": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "15": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "16": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
    "17": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FixedPoint96.sol",
    "18": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FullMath.sol",
    "19": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
    "2": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "20": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
    "21": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
    "23": "contracts/AlphaVault.sol",
    "28": "interfaces/IVault.sol",
    "3": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "6": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "7": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "8": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
    "9": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/AlphaVault.sol",
    "exportedSymbols": {
      "Address": [
        6135
      ],
      "AlphaVault": [
        2303
      ],
      "Context": [
        5839
      ],
      "ERC20": [
        4617
      ],
      "FixedPoint96": [
        6145
      ],
      "FullMath": [
        6318
      ],
      "IERC20": [
        4695
      ],
      "IUniswapV3MintCallback": [
        4962
      ],
      "IUniswapV3Pool": [
        3151
      ],
      "IUniswapV3PoolActions": [
        5492
      ],
      "IUniswapV3PoolDerivedState": [
        5523
      ],
      "IUniswapV3PoolEvents": [
        5642
      ],
      "IUniswapV3PoolImmutables": [
        5682
      ],
      "IUniswapV3PoolOwnerActions": [
        5708
      ],
      "IUniswapV3PoolState": [
        5816
      ],
      "IUniswapV3SwapCallback": [
        4976
      ],
      "IVault": [
        5385
      ],
      "LiquidityAmounts": [
        5316
      ],
      "Math": [
        3759
      ],
      "PositionKey": [
        5341
      ],
      "ReentrancyGuard": [
        4948
      ],
      "SafeERC20": [
        4908
      ],
      "SafeMath": [
        4114
      ],
      "TickMath": [
        3686
      ]
    },
    "id": 2304,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 485,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:23"
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
        "file": "@openzeppelin/contracts/math/Math.sol",
        "id": 486,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 3760,
        "src": "63:47:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 487,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4115,
        "src": "111:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 488,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4618,
        "src": "163:55:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 489,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4696,
        "src": "219:56:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 490,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4909,
        "src": "276:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 491,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4949,
        "src": "336:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol",
        "id": 492,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4963,
        "src": "396:83:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
        "id": 493,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 4977,
        "src": "480:83:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "id": 494,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 3152,
        "src": "564:66:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "id": 495,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 3687,
        "src": "631:59:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/LiquidityAmounts.sol",
        "id": 496,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 5317,
        "src": "691:72:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/PositionKey.sol",
        "id": 497,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 5342,
        "src": "764:67:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 498,
        "nodeType": "ImportDirective",
        "scope": 2304,
        "sourceUnit": 5386,
        "src": "833:34:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 500,
              "name": "IVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5385,
              "src": "987:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$5385",
                "typeString": "contract IVault"
              }
            },
            "id": 501,
            "nodeType": "InheritanceSpecifier",
            "src": "987:6:23"
          },
          {
            "baseName": {
              "id": 502,
              "name": "IUniswapV3MintCallback",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4962,
              "src": "999:22:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3MintCallback_$4962",
                "typeString": "contract IUniswapV3MintCallback"
              }
            },
            "id": 503,
            "nodeType": "InheritanceSpecifier",
            "src": "999:22:23"
          },
          {
            "baseName": {
              "id": 504,
              "name": "IUniswapV3SwapCallback",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4976,
              "src": "1027:22:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$4976",
                "typeString": "contract IUniswapV3SwapCallback"
              }
            },
            "id": 505,
            "nodeType": "InheritanceSpecifier",
            "src": "1027:22:23"
          },
          {
            "baseName": {
              "id": 506,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4617,
              "src": "1055:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4617",
                "typeString": "contract ERC20"
              }
            },
            "id": 507,
            "nodeType": "InheritanceSpecifier",
            "src": "1055:5:23"
          },
          {
            "baseName": {
              "id": 508,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4948,
              "src": "1066:15:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$4948",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 509,
            "nodeType": "InheritanceSpecifier",
            "src": "1066:15:23"
          }
        ],
        "contractDependencies": [
          4617,
          4695,
          4948,
          4962,
          4976,
          5385,
          5839
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 499,
          "nodeType": "StructuredDocumentation",
          "src": "869:90:23",
          "text": " @title   Alpha Vault\n @notice  A vault that provides liquidity on Uniswap V3."
        },
        "fullyImplemented": true,
        "id": 2303,
        "linearizedBaseContracts": [
          2303,
          4948,
          4617,
          4695,
          5839,
          4976,
          4962,
          5385
        ],
        "name": "AlphaVault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 512,
            "libraryName": {
              "id": 510,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4908,
              "src": "1094:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4908",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1088:27:23",
            "typeName": {
              "id": 511,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4695,
              "src": "1108:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4695",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 515,
            "libraryName": {
              "id": 513,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4114,
              "src": "1126:8:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$4114",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1120:27:23",
            "typeName": {
              "id": 514,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1139:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 527,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "1176:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "1208:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "1236:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 523,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "1260:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 525,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "1285:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1285:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:140:23"
            },
            "src": "1153:154:23"
          },
          {
            "anonymous": false,
            "id": 539,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1337:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1337:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1369:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1397:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 535,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1421:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 539,
                  "src": "1446:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 536,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:140:23"
            },
            "src": "1313:155:23"
          },
          {
            "anonymous": false,
            "id": 549,
            "name": "CollectFees",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 541,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesToVault0",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1501:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 543,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesToVault1",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1531:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 545,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesToProtocol0",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1561:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 544,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feesToProtocol1",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1594:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:132:23"
            },
            "src": "1474:150:23"
          },
          {
            "anonymous": false,
            "id": 559,
            "name": "Snapshot",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1645:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 553,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1657:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 555,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalAmount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1679:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 559,
                  "src": "1701:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1644:77:23"
            },
            "src": "1630:92:23"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 561,
            "mutability": "immutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1728:36:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 560,
              "name": "IUniswapV3Pool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3151,
              "src": "1728:14:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0dfe1681",
            "id": 563,
            "mutability": "immutable",
            "name": "token0",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1770:30:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4695",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 562,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4695,
              "src": "1770:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4695",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d21220a7",
            "id": 565,
            "mutability": "immutable",
            "name": "token1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1806:30:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4695",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 564,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4695,
              "src": "1806:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4695",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0c93a7c",
            "id": 567,
            "mutability": "immutable",
            "name": "tickSpacing",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1842:34:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 566,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1842:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b0e21e8a",
            "id": 569,
            "mutability": "mutable",
            "name": "protocolFee",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1883:26:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 568,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1883:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ab4d052",
            "id": 571,
            "mutability": "mutable",
            "name": "maxTotalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1915:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 570,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1915:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8c62e76",
            "id": 573,
            "mutability": "mutable",
            "name": "strategy",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1950:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 572,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1950:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5aa6e675",
            "id": 575,
            "mutability": "mutable",
            "name": "governance",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "1979:25:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 574,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1979:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f39c38a0",
            "id": 577,
            "mutability": "mutable",
            "name": "pendingGovernance",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2010:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 576,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2010:7:23",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fa082743",
            "id": 579,
            "mutability": "mutable",
            "name": "baseLower",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2049:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 578,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "2049:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "888a9134",
            "id": 581,
            "mutability": "mutable",
            "name": "baseUpper",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2077:22:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 580,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "2077:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "51e87af7",
            "id": 583,
            "mutability": "mutable",
            "name": "limitLower",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2105:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 582,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "2105:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0f35bcac",
            "id": 585,
            "mutability": "mutable",
            "name": "limitUpper",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2134:23:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 584,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "2134:5:23",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eae989a2",
            "id": 587,
            "mutability": "mutable",
            "name": "accruedProtocolFees0",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2163:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 586,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2163:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a00fa77f",
            "id": 589,
            "mutability": "mutable",
            "name": "accruedProtocolFees1",
            "nodeType": "VariableDeclaration",
            "scope": 2303,
            "src": "2204:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 588,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2204:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "2634:383:23",
              "statements": [
                {
                  "expression": {
                    "id": 607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 603,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "2644:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 605,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "2666:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 604,
                        "name": "IUniswapV3Pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3151,
                        "src": "2651:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$3151_$",
                          "typeString": "type(contract IUniswapV3Pool)"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2651:21:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "2644:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 608,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:28:23"
                },
                {
                  "expression": {
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 609,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "2682:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4695",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 612,
                                  "name": "_pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "2713:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 611,
                                "name": "IUniswapV3Pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3151,
                                "src": "2698:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$3151_$",
                                  "typeString": "type(contract IUniswapV3Pool)"
                                }
                              },
                              "id": 613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2698:21:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5657,
                            "src": "2698:28:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2698:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 610,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "2691:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4695_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2691:38:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4695",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2682:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4695",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 618,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:47:23"
                },
                {
                  "expression": {
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 619,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "2739:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4695",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 622,
                                  "name": "_pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "2770:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 621,
                                "name": "IUniswapV3Pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3151,
                                "src": "2755:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$3151_$",
                                  "typeString": "type(contract IUniswapV3Pool)"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2755:21:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token1",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5663,
                            "src": "2755:28:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2755:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 620,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "2748:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4695_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2748:38:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4695",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2739:47:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4695",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 628,
                  "nodeType": "ExpressionStatement",
                  "src": "2739:47:23"
                },
                {
                  "expression": {
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 629,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 567,
                      "src": "2796:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 631,
                              "name": "_pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "2825:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 630,
                            "name": "IUniswapV3Pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3151,
                            "src": "2810:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$3151_$",
                              "typeString": "type(contract IUniswapV3Pool)"
                            }
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2810:21:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tickSpacing",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5675,
                        "src": "2810:33:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                          "typeString": "function () view external returns (int24)"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2810:35:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2796:49:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "2796:49:23"
                },
                {
                  "expression": {
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 637,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "2856:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 638,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "2870:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2856:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:26:23"
                },
                {
                  "expression": {
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 641,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "2892:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 642,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "2909:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2892:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "2892:32:23"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 645,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "2934:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 646,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2947:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2947:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2934:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "2934:23:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 651,
                          "name": "_protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "2976:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2991:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "2976:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f746f636f6c466565",
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2996:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        },
                        "value": "protocolFee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        }
                      ],
                      "id": 650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2968:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2968:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "2968:42:23"
                }
              ]
            },
            "documentation": {
              "id": 590,
              "nodeType": "StructuredDocumentation",
              "src": "2246:252:23",
              "text": " @dev After deploying, strategy needs to be set via `setStrategy()`\n @param _pool Underlying Uniswap V3 pool\n @param _protocolFee Protocol fee expressed as multiple of 1e-6\n @param _maxTotalSupply Cap on total supply"
            },
            "id": 658,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "416c706861205661756c74",
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2613:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_107b03ce1beb9ea726be4672a1aa693051b9a617ee312b00af5e036797741d86",
                      "typeString": "literal_string \"Alpha Vault\""
                    },
                    "value": "Alpha Vault"
                  },
                  {
                    "hexValue": "4156",
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2628:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4ab1115903bb64bbbf0a0f611087a6321ff0c48d2c6b3b89cc55536163ccb7b1",
                      "typeString": "literal_string \"AV\""
                    },
                    "value": "AV"
                  }
                ],
                "id": 601,
                "modifierName": {
                  "id": 598,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4617,
                  "src": "2607:5:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$4617_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2607:26:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "2524:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2524:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "_protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "2547:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2547:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "2577:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2514:92:23"
            },
            "returnParameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:0:23"
            },
            "scope": 2303,
            "src": "2503:514:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5362
            ],
            "body": {
              "id": 804,
              "nodeType": "Block",
              "src": "4179:1021:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 682,
                            "name": "amount0Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 661,
                            "src": "4197:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4214:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4197:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 685,
                            "name": "amount1Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "4219:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4236:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4219:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4197:40:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e743044657369726564206f7220616d6f756e743144657369726564",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4239:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71d3c6311517a09fc5373cdb0e09405ca4ad5deb8d1023014ac31914a4906b20",
                          "typeString": "literal_string \"amount0Desired or amount1Desired\""
                        },
                        "value": "amount0Desired or amount1Desired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71d3c6311517a09fc5373cdb0e09405ca4ad5deb8d1023014ac31914a4906b20",
                          "typeString": "literal_string \"amount0Desired or amount1Desired\""
                        }
                      ],
                      "id": 681,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4189:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4189:85:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "4189:85:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 693,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "4292:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 696,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4306:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4298:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 694,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4298:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4298:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4292:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 699,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "4312:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 702,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4326:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4318:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 700,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4318:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4318:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4312:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4292:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f",
                        "id": 706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4333:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        },
                        "value": "to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        }
                      ],
                      "id": 692,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4284:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4284:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "4284:54:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "4424:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 711,
                        "name": "baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "4435:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 709,
                      "name": "_poke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 834,
                      "src": "4418:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4418:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "4418:27:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 715,
                        "name": "limitLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "4461:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 716,
                        "name": "limitUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "4473:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 714,
                      "name": "_poke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 834,
                      "src": "4455:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24)"
                      }
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4455:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "4455:29:23"
                },
                {
                  "expression": {
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 719,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "4558:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 720,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "4566:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 721,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "4575:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 722,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4557:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 724,
                          "name": "amount0Desired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 661,
                          "src": "4608:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 725,
                          "name": "amount1Desired",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "4624:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 723,
                        "name": "_calcSharesAndAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 995,
                        "src": "4586:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4586:53:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256)"
                      }
                    },
                    "src": "4557:82:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "4557:82:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 730,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "4657:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4666:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4657:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736861726573",
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4669:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        },
                        "value": "shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        }
                      ],
                      "id": 729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4649:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "4649:29:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 737,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "4696:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 738,
                          "name": "amount0Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "4707:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4696:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74304d696e",
                        "id": 740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        },
                        "value": "amount0Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4688:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4688:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "4688:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 744,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "4750:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 745,
                          "name": "amount1Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "4761:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4750:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74314d696e",
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4773:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        },
                        "value": "amount1Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        }
                      ],
                      "id": 743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4742:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4742:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "4742:44:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 750,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "4839:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4849:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4839:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 765,
                  "nodeType": "IfStatement",
                  "src": "4835:76:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4876:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4876:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 760,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4896:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                "typeString": "contract AlphaVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                "typeString": "contract AlphaVault"
                              }
                            ],
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4888:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 758,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4888:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4888:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 762,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "4903:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 753,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "4852:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4754,
                        "src": "4852:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4852:59:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 764,
                    "nodeType": "ExpressionStatement",
                    "src": "4852:59:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 766,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "4925:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4935:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4925:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 781,
                  "nodeType": "IfStatement",
                  "src": "4921:76:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4962:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4962:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 776,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4982:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                "typeString": "contract AlphaVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                "typeString": "contract AlphaVault"
                              }
                            ],
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4974:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4974:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4974:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 778,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 679,
                          "src": "4989:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 769,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "4938:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4754,
                        "src": "4938:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4938:59:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 780,
                    "nodeType": "ExpressionStatement",
                    "src": "4938:59:23"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 783,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "5050:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 784,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "5054:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 782,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4493,
                      "src": "5044:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "5044:17:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 788,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5084:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5084:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 790,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "5096:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 791,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "5100:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 792,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 677,
                        "src": "5108:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 793,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "5117:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 787,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 527,
                      "src": "5076:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5076:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "EmitStatement",
                  "src": "5071:54:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 797,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4203,
                            "src": "5143:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5143:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 799,
                          "name": "maxTotalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 571,
                          "src": "5160:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5143:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d6178546f74616c537570706c79",
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5176:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1d326ab919e08f08d226da9d9bb7a4aae45db082594b3c99f595a5eec6dbed",
                          "typeString": "literal_string \"maxTotalSupply\""
                        },
                        "value": "maxTotalSupply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1d326ab919e08f08d226da9d9bb7a4aae45db082594b3c99f595a5eec6dbed",
                          "typeString": "literal_string \"maxTotalSupply\""
                        }
                      ],
                      "id": 796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5135:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5135:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 803,
                  "nodeType": "ExpressionStatement",
                  "src": "5135:58:23"
                }
              ]
            },
            "documentation": {
              "id": 659,
              "nodeType": "StructuredDocumentation",
              "src": "3023:816:23",
              "text": " @notice Deposits tokens in proportion to the vault's current holdings.\n @dev These tokens sit in the vault and are not used for liquidity on\n Uniswap until the next rebalance. Also note it's not necessary to check\n if user manipulated price to deposit cheaper, as the value of range\n orders can only by manipulated higher.\n @param amount0Desired Max amount of token0 to deposit\n @param amount1Desired Max amount of token1 to deposit\n @param amount0Min Revert if resulting `amount0` is less than this\n @param amount1Min Revert if resulting `amount1` is less than this\n @param to Recipient of shares\n @return shares Number of shares minted\n @return amount0 Amount of token0 deposited\n @return amount1 Amount of token1 deposited"
            },
            "functionSelector": "365d0ed7",
            "id": 805,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 673,
                "modifierName": {
                  "id": 672,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4947,
                  "src": "4049:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4049:12:23"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4032:8:23"
            },
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "amount0Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "3870:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "amount1Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "3902:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3902:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "amount0Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "3934:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3934:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "amount1Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "3962:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3962:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "3990:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3860:146:23"
            },
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "4092:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4092:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "4120:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4120:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 805,
                  "src": "4149:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4149:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4078:96:23"
            },
            "scope": 2303,
            "src": "3844:1356:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 833,
              "nodeType": "Block",
              "src": "5433:165:23",
              "statements": [
                {
                  "assignments": [
                    814,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 814,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 833,
                      "src": "5444:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 813,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5444:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 819,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 816,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 808,
                        "src": "5483:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 817,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "5494:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 815,
                      "name": "_position",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1898,
                      "src": "5473:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5473:31:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5443:61:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 820,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 814,
                      "src": "5518:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5530:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5518:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 832,
                  "nodeType": "IfStatement",
                  "src": "5514:78:23",
                  "trueBody": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "5533:59:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 826,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "5557:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 827,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "5568:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5579:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 823,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "5547:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5455,
                            "src": "5547:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5547:34:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 830,
                        "nodeType": "ExpressionStatement",
                        "src": "5547:34:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 806,
              "nodeType": "StructuredDocumentation",
              "src": "5206:164:23",
              "text": "@dev Do zero-burns to poke a position on Uniswap so earned fees are\n updated. Should be called if total amounts needs to include up-to-date\n fees."
            },
            "id": 834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_poke",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 808,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "5390:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 807,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5390:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 810,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 834,
                  "src": "5407:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 809,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5407:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5389:34:23"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5433:0:23"
            },
            "scope": 2303,
            "src": "5375:223:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "6047:1087:23",
              "statements": [
                {
                  "assignments": [
                    849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 849,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "6057:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 848,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6057:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 852,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 850,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4203,
                      "src": "6079:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6079:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6057:35:23"
                },
                {
                  "assignments": [
                    854,
                    856
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "total0",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "6103:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6103:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 856,
                      "mutability": "mutable",
                      "name": "total1",
                      "nodeType": "VariableDeclaration",
                      "scope": 994,
                      "src": "6119:14:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6119:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 859,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 857,
                      "name": "getTotalAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "6137:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view returns (uint256,uint256)"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6137:17:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6102:52:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 861,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "6225:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6240:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6225:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 864,
                              "name": "total0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 854,
                              "src": "6245:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6254:1:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6245:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6225:30:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 868,
                            "name": "total1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 856,
                            "src": "6259:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6268:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6259:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6225:44:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 860,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "6218:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6218:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 873,
                  "nodeType": "ExpressionStatement",
                  "src": "6218:52:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 874,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "6285:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6300:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6285:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 894,
                        "name": "total0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "6512:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6522:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6512:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 912,
                          "name": "total1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 856,
                          "src": "6643:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6653:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6643:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 990,
                        "nodeType": "Block",
                        "src": "6770:358:23",
                        "statements": [
                          {
                            "assignments": [
                              931
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 931,
                                "mutability": "mutable",
                                "name": "cross",
                                "nodeType": "VariableDeclaration",
                                "scope": 990,
                                "src": "6784:13:23",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 930,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6784:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 943,
                            "initialValue": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 936,
                                      "name": "total1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 856,
                                      "src": "6828:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 934,
                                      "name": "amount0Desired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 837,
                                      "src": "6809:14:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 935,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3997,
                                    "src": "6809:18:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 937,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6809:26:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 940,
                                      "name": "total0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 854,
                                      "src": "6856:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 938,
                                      "name": "amount1Desired",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 839,
                                      "src": "6837:14:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 939,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3997,
                                    "src": "6837:18:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6837:26:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 932,
                                  "name": "Math",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3759,
                                  "src": "6800:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Math_$3759_$",
                                    "typeString": "type(library Math)"
                                  }
                                },
                                "id": 933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "min",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3725,
                                "src": "6800:8:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6800:64:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "6784:80:23"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 947,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 945,
                                    "name": "cross",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 931,
                                    "src": "6886:5:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 946,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6894:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6886:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "63726f7373",
                                  "id": 948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6897:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b7b16ad9ab1bdad53bb85b6df7f84773941bf7861c37b33336b827a1a37db175",
                                    "typeString": "literal_string \"cross\""
                                  },
                                  "value": "cross"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b7b16ad9ab1bdad53bb85b6df7f84773941bf7861c37b33336b827a1a37db175",
                                    "typeString": "literal_string \"cross\""
                                  }
                                ],
                                "id": 944,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6878:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6878:27:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 950,
                            "nodeType": "ExpressionStatement",
                            "src": "6878:27:23"
                          },
                          {
                            "expression": {
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 951,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "6952:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 960,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6991:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 957,
                                        "name": "total1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 856,
                                        "src": "6979:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "31",
                                            "id": 954,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "6972:1:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "id": 952,
                                            "name": "cross",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 931,
                                            "src": "6962:5:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 953,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3963,
                                          "src": "6962:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6962:12:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4019,
                                      "src": "6962:16:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6962:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3941,
                                  "src": "6962:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6962:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6952:41:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 963,
                            "nodeType": "ExpressionStatement",
                            "src": "6952:41:23"
                          },
                          {
                            "expression": {
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 964,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "7007:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 973,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7046:1:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 970,
                                        "name": "total0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 854,
                                        "src": "7034:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "31",
                                            "id": 967,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7027:1:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            }
                                          ],
                                          "expression": {
                                            "id": 965,
                                            "name": "cross",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 931,
                                            "src": "7017:5:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 966,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sub",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3963,
                                          "src": "7017:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 968,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7017:12:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 969,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4019,
                                      "src": "7017:16:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 971,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7017:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "add",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3941,
                                  "src": "7017:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7017:31:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7007:41:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 976,
                            "nodeType": "ExpressionStatement",
                            "src": "7007:41:23"
                          },
                          {
                            "expression": {
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 977,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 842,
                                "src": "7062:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 986,
                                    "name": "total1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 856,
                                    "src": "7110:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 983,
                                        "name": "total0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 854,
                                        "src": "7098:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 980,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 849,
                                            "src": "7081:11:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 978,
                                            "name": "cross",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 931,
                                            "src": "7071:5:23",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 979,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mul",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3997,
                                          "src": "7071:9:23",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 981,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7071:22:23",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 982,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4019,
                                      "src": "7071:26:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7071:34:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4019,
                                  "src": "7071:38:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7071:46:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7062:55:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 989,
                            "nodeType": "ExpressionStatement",
                            "src": "7062:55:23"
                          }
                        ]
                      },
                      "id": 991,
                      "nodeType": "IfStatement",
                      "src": "6639:489:23",
                      "trueBody": {
                        "id": 929,
                        "nodeType": "Block",
                        "src": "6656:108:23",
                        "statements": [
                          {
                            "expression": {
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 915,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "6670:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 916,
                                "name": "amount0Desired",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 837,
                                "src": "6680:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6670:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 918,
                            "nodeType": "ExpressionStatement",
                            "src": "6670:24:23"
                          },
                          {
                            "expression": {
                              "id": 927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 919,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 842,
                                "src": "6708:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "id": 925,
                                    "name": "total0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 854,
                                    "src": "6746:6:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 922,
                                        "name": "totalSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 849,
                                        "src": "6729:11:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 920,
                                        "name": "amount0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 844,
                                        "src": "6717:7:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 921,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3997,
                                      "src": "6717:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6717:24:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 924,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4019,
                                  "src": "6717:28:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6717:36:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6708:45:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 928,
                            "nodeType": "ExpressionStatement",
                            "src": "6708:45:23"
                          }
                        ]
                      }
                    },
                    "id": 992,
                    "nodeType": "IfStatement",
                    "src": "6508:620:23",
                    "trueBody": {
                      "id": 911,
                      "nodeType": "Block",
                      "src": "6525:108:23",
                      "statements": [
                        {
                          "expression": {
                            "id": 899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 897,
                              "name": "amount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 846,
                              "src": "6539:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 898,
                              "name": "amount1Desired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 839,
                              "src": "6549:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6539:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 900,
                          "nodeType": "ExpressionStatement",
                          "src": "6539:24:23"
                        },
                        {
                          "expression": {
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 901,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "6577:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "id": 907,
                                  "name": "total1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 856,
                                  "src": "6615:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 904,
                                      "name": "totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 849,
                                      "src": "6598:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 902,
                                      "name": "amount1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 846,
                                      "src": "6586:7:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 903,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 3997,
                                    "src": "6586:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6586:24:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4019,
                                "src": "6586:28:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6586:36:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6577:45:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 910,
                          "nodeType": "ExpressionStatement",
                          "src": "6577:45:23"
                        }
                      ]
                    }
                  },
                  "id": 993,
                  "nodeType": "IfStatement",
                  "src": "6281:847:23",
                  "trueBody": {
                    "id": 893,
                    "nodeType": "Block",
                    "src": "6303:199:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 877,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "6380:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 878,
                            "name": "amount0Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "6390:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6380:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "6380:24:23"
                      },
                      {
                        "expression": {
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 881,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 846,
                            "src": "6418:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 882,
                            "name": "amount1Desired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 839,
                            "src": "6428:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6418:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 884,
                        "nodeType": "ExpressionStatement",
                        "src": "6418:24:23"
                      },
                      {
                        "expression": {
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 885,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 842,
                            "src": "6456:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 888,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 844,
                                "src": "6474:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 889,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 846,
                                "src": "6483:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 886,
                                "name": "Math",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3759,
                                "src": "6465:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Math_$3759_$",
                                  "typeString": "type(library Math)"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3707,
                              "src": "6465:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6465:26:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6456:35:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "6456:35:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 835,
              "nodeType": "StructuredDocumentation",
              "src": "5604:212:23",
              "text": "@dev Calculates the largest possible `amount0` and `amount1` such that\n they're in the same proportion as total amounts, but not greater than\n `amount0Desired` and `amount1Desired` respectively."
            },
            "id": 995,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calcSharesAndAmounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "amount0Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "5852:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5852:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "amount1Desired",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "5876:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5851:48:23"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "5960:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5960:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "5988:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5988:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 995,
                  "src": "6017:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6017:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5946:96:23"
            },
            "scope": 2303,
            "src": "5821:1313:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5377
            ],
            "body": {
              "id": 1158,
              "nodeType": "Block",
              "src": "7775:1275:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1015,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "7793:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7802:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7793:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736861726573",
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7805:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        },
                        "value": "shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aef6ebad2f600419c51031e5e45e58af020ed5fb8de0ee3168d4cf0dcbb16783",
                          "typeString": "literal_string \"shares\""
                        }
                      ],
                      "id": 1014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7785:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7785:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "7785:29:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1022,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7832:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7846:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7838:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1023,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7838:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7838:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "7832:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1028,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "7852:2:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1031,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7866:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7858:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1029,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7858:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7858:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7852:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7832:39:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f",
                        "id": 1035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7873:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        },
                        "value": "to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b56e27094b67facb247d55c7c05912fc4cbffd28f63f412fcdd194991f8db48",
                          "typeString": "literal_string \"to\""
                        }
                      ],
                      "id": 1021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7824:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7824:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "7824:54:23"
                },
                {
                  "assignments": [
                    1039
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1039,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "7888:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1038,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7888:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1042,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1040,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4203,
                      "src": "7910:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7888:35:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1044,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7963:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7963:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1046,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "7975:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1043,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4549,
                      "src": "7957:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7957:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "7957:25:23"
                },
                {
                  "assignments": [
                    1050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1050,
                      "mutability": "mutable",
                      "name": "unusedAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "8060:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1049,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8060:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1059,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1057,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "8114:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1054,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "8102:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1051,
                              "name": "getBalance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1844,
                              "src": "8084:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8084:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3997,
                          "src": "8084:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8084:25:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4019,
                      "src": "8084:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8084:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8060:66:23"
                },
                {
                  "assignments": [
                    1061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1061,
                      "mutability": "mutable",
                      "name": "unusedAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "8136:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1060,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8136:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1070,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1068,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "8190:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1065,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "8178:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1062,
                              "name": "getBalance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "8160:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8160:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3997,
                          "src": "8160:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8160:25:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4019,
                      "src": "8160:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8160:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8136:66:23"
                },
                {
                  "assignments": [
                    1072,
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "baseAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "8276:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1071,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8276:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "baseAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "8297:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1073,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8297:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1081,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1076,
                        "name": "baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "8352:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "8363:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1078,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "8374:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1079,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "8382:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1075,
                      "name": "_burnLiquidityShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "8332:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24,uint256,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8332:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8275:119:23"
                },
                {
                  "assignments": [
                    1083,
                    1085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "limitAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "8405:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8405:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1085,
                      "mutability": "mutable",
                      "name": "limitAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1158,
                      "src": "8427:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8427:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1092,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1087,
                        "name": "limitLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "8483:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1088,
                        "name": "limitUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "8495:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1089,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "8507:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1090,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1039,
                        "src": "8515:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1086,
                      "name": "_burnLiquidityShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "8463:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24,uint256,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8463:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8404:123:23"
                },
                {
                  "expression": {
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1093,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1010,
                      "src": "8588:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1099,
                          "name": "limitAmount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1083,
                          "src": "8633:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1096,
                              "name": "baseAmount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "8616:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1094,
                              "name": "unusedAmount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1050,
                              "src": "8598:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3941,
                            "src": "8598:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8598:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3941,
                        "src": "8598:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8598:48:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8588:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "8588:58:23"
                },
                {
                  "expression": {
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1103,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "8656:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1109,
                          "name": "limitAmount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "8701:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1106,
                              "name": "baseAmount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "8684:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1104,
                              "name": "unusedAmount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1061,
                              "src": "8666:13:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3941,
                            "src": "8666:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8666:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3941,
                        "src": "8666:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8666:48:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8656:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "8656:58:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1114,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "8732:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1115,
                          "name": "amount0Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "8743:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8732:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74304d696e",
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8755:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        },
                        "value": "amount0Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e443947080d11f16d186ab8eb39c43734eb78ea58993228550c11f73ac9bc33",
                          "typeString": "literal_string \"amount0Min\""
                        }
                      ],
                      "id": 1113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8724:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "8724:44:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1121,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1012,
                          "src": "8786:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1122,
                          "name": "amount1Min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1002,
                          "src": "8797:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8786:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74314d696e",
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8809:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        },
                        "value": "amount1Min"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbddfe9ab43ea57b60a3cf40bd26598e982e5a86511bdbca9e26b1095ed1148b",
                          "typeString": "literal_string \"amount1Min\""
                        }
                      ],
                      "id": 1120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8778:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8778:44:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "8778:44:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1127,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1010,
                      "src": "8873:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8883:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8873:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1137,
                  "nodeType": "IfStatement",
                  "src": "8869:49:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1133,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "8906:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1134,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "8910:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1130,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "8886:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "8886:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8886:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1136,
                    "nodeType": "ExpressionStatement",
                    "src": "8886:32:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1138,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "8932:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8942:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8932:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1148,
                  "nodeType": "IfStatement",
                  "src": "8928:49:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1144,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "8965:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1145,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1012,
                          "src": "8969:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1141,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "8945:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "8945:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8945:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1147,
                    "nodeType": "ExpressionStatement",
                    "src": "8945:32:23"
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9002:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9002:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1152,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1004,
                        "src": "9014:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1153,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "9018:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1154,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "9026:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1155,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "9035:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1149,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 539,
                      "src": "8993:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8993:50:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1157,
                  "nodeType": "EmitStatement",
                  "src": "8988:55:23"
                }
              ]
            },
            "documentation": {
              "id": 996,
              "nodeType": "StructuredDocumentation",
              "src": "7140:432:23",
              "text": " @notice Withdraws tokens in proportion to the vault's holdings.\n @param shares Shares burned by sender\n @param amount0Min Revert if resulting `amount0` is smaller than this\n @param amount1Min Revert if resulting `amount1` is smaller than this\n @param to Recipient of tokens\n @return amount0 Amount of token0 sent to recipient\n @return amount1 Amount of token1 sent to recipient"
            },
            "functionSelector": "d331bef7",
            "id": 1159,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1008,
                "modifierName": {
                  "id": 1007,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4947,
                  "src": "7719:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7719:12:23"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1006,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7710:8:23"
            },
            "parameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "7604:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7604:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "amount0Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "7628:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7628:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "amount1Min",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "7656:18:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7656:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "7684:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7684:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7594:106:23"
            },
            "returnParameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "7741:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7741:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1159,
                  "src": "7758:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7740:34:23"
            },
            "scope": 2303,
            "src": "7577:1473:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1242,
              "nodeType": "Block",
              "src": "9318:538:23",
              "statements": [
                {
                  "assignments": [
                    1176,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "totalLiquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1242,
                      "src": "9329:22:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9329:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1181,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1178,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1162,
                        "src": "9373:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1179,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1164,
                        "src": "9384:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1177,
                      "name": "_position",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1898,
                      "src": "9363:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9363:31:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9328:66:23"
                },
                {
                  "assignments": [
                    1183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1242,
                      "src": "9404:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9404:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1194,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1192,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1168,
                        "src": "9464:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1189,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1166,
                            "src": "9452:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1186,
                                "name": "totalLiquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1176,
                                "src": "9432:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "id": 1185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9424:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1184,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9424:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9424:23:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3997,
                          "src": "9424:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9424:35:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4019,
                      "src": "9424:39:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9424:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9404:72:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1195,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "9491:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9503:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9491:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1241,
                  "nodeType": "IfStatement",
                  "src": "9487:363:23",
                  "trueBody": {
                    "id": 1240,
                    "nodeType": "Block",
                    "src": "9506:344:23",
                    "statements": [
                      {
                        "assignments": [
                          1199,
                          1201,
                          1203,
                          1205
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1199,
                            "mutability": "mutable",
                            "name": "burned0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1240,
                            "src": "9521:15:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1198,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9521:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1201,
                            "mutability": "mutable",
                            "name": "burned1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1240,
                            "src": "9538:15:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9538:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1203,
                            "mutability": "mutable",
                            "name": "fees0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1240,
                            "src": "9555:13:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1202,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9555:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1205,
                            "mutability": "mutable",
                            "name": "fees1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1240,
                            "src": "9570:13:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1204,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9570:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1213,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1207,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1162,
                              "src": "9619:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1208,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1164,
                              "src": "9630:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1210,
                                  "name": "liquidity",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1183,
                                  "src": "9652:9:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1209,
                                "name": "_toUint128",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1993,
                                "src": "9641:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
                                  "typeString": "function (uint256) pure returns (uint128)"
                                }
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9641:21:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1206,
                            "name": "_burnAndCollect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1671,
                            "src": "9603:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (int24,int24,uint128) returns (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9603:60:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9520:143:23"
                      },
                      {
                        "expression": {
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1214,
                            "name": "amount0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1171,
                            "src": "9711:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1222,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1168,
                                    "src": "9755:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1219,
                                        "name": "shares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1166,
                                        "src": "9743:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1217,
                                        "name": "fees0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1203,
                                        "src": "9733:5:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1218,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3997,
                                      "src": "9733:9:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9733:17:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4019,
                                  "src": "9733:21:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9733:34:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1215,
                                "name": "burned0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1199,
                                "src": "9721:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3941,
                              "src": "9721:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9721:47:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9711:57:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1226,
                        "nodeType": "ExpressionStatement",
                        "src": "9711:57:23"
                      },
                      {
                        "expression": {
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1227,
                            "name": "amount1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1173,
                            "src": "9782:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1235,
                                    "name": "totalSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1168,
                                    "src": "9826:11:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1232,
                                        "name": "shares",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1166,
                                        "src": "9814:6:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1230,
                                        "name": "fees1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1205,
                                        "src": "9804:5:23",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1231,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3997,
                                      "src": "9804:9:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9804:17:23",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1234,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4019,
                                  "src": "9804:21:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9804:34:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1228,
                                "name": "burned1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "9792:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3941,
                              "src": "9792:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9792:47:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9782:57:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1239,
                        "nodeType": "ExpressionStatement",
                        "src": "9782:57:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1160,
              "nodeType": "StructuredDocumentation",
              "src": "9056:67:23",
              "text": "@dev Withdraws share of liquidity in a range from Uniswap pool."
            },
            "id": 1243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnLiquidityShare",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "9166:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "9166:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "9191:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "9191:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "9216:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9216:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "9240:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9240:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9156:109:23"
            },
            "returnParameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1171,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "9284:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9284:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1243,
                  "src": "9301:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9301:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9283:34:23"
            },
            "scope": 2303,
            "src": "9128:728:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1474,
              "nodeType": "Block",
              "src": "10514:2211:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1266,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10532:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10532:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1268,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "10546:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10532:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374726174656779",
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10556:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16920893711b985df3893d85b39127b3a481e91c3c57640cd8970c06e9e6007",
                          "typeString": "literal_string \"strategy\""
                        },
                        "value": "strategy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16920893711b985df3893d85b39127b3a481e91c3c57640cd8970c06e9e6007",
                          "typeString": "literal_string \"strategy\""
                        }
                      ],
                      "id": 1265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10524:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10524:43:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "ExpressionStatement",
                  "src": "10524:43:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1274,
                        "name": "_baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "10589:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1275,
                        "name": "_baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "10601:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1273,
                      "name": "_checkRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1528,
                      "src": "10577:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) view"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10577:35:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "10577:35:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "_bidLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "10634:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1280,
                        "name": "_bidUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "10645:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1278,
                      "name": "_checkRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1528,
                      "src": "10622:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) view"
                      }
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10622:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1282,
                  "nodeType": "ExpressionStatement",
                  "src": "10622:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1284,
                        "name": "_askLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "10677:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1285,
                        "name": "_askUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "10688:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1283,
                      "name": "_checkRange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1528,
                      "src": "10665:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) view"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10665:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "10665:33:23"
                },
                {
                  "assignments": [
                    null,
                    1289,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "tick",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "10712:10:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1288,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "10712:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1293,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1290,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "10736:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5729,
                      "src": "10736:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10736:12:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10709:39:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1295,
                          "name": "_bidUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "10766:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1296,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "10779:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "10766:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6269645570706572",
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10785:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47d6159d9ec3ed75f3ee90e5219273c430980de7e46ca022e6a5f3d48f0639d5",
                          "typeString": "literal_string \"bidUpper\""
                        },
                        "value": "bidUpper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47d6159d9ec3ed75f3ee90e5219273c430980de7e46ca022e6a5f3d48f0639d5",
                          "typeString": "literal_string \"bidUpper\""
                        }
                      ],
                      "id": 1294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10758:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10758:38:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1300,
                  "nodeType": "ExpressionStatement",
                  "src": "10758:38:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1302,
                          "name": "_askLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1258,
                          "src": "10814:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1303,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "10826:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "10814:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "61736b4c6f776572",
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10832:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf382eb48ee7682ce64ea5965ffc123c796d68167a98fff969bdabfb56765e53",
                          "typeString": "literal_string \"askLower\""
                        },
                        "value": "askLower"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf382eb48ee7682ce64ea5965ffc123c796d68167a98fff969bdabfb56765e53",
                          "typeString": "literal_string \"askLower\""
                        }
                      ],
                      "id": 1301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10806:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10806:37:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "10806:37:23"
                },
                {
                  "id": 1334,
                  "nodeType": "Block",
                  "src": "10962:307:23",
                  "statements": [
                    {
                      "assignments": [
                        1309,
                        null,
                        null,
                        null,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1309,
                          "mutability": "mutable",
                          "name": "baseLiquidity",
                          "nodeType": "VariableDeclaration",
                          "scope": 1334,
                          "src": "10977:21:23",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "typeName": {
                            "id": 1308,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "10977:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "visibility": "internal"
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 1314,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1311,
                            "name": "baseLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "11020:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 1312,
                            "name": "baseUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "11031:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "id": 1310,
                          "name": "_position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "11010:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11010:31:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10976:65:23"
                    },
                    {
                      "assignments": [
                        1316,
                        null,
                        null,
                        null,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1316,
                          "mutability": "mutable",
                          "name": "limitLiquidity",
                          "nodeType": "VariableDeclaration",
                          "scope": 1334,
                          "src": "11056:22:23",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "typeName": {
                            "id": 1315,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "11056:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "visibility": "internal"
                        },
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 1321,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1318,
                            "name": "limitLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "11100:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 1319,
                            "name": "limitUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "11112:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "id": 1317,
                          "name": "_position",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "11090:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11090:33:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                          "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "11055:68:23"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1323,
                            "name": "baseLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 579,
                            "src": "11153:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 1324,
                            "name": "baseUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "11164:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 1325,
                            "name": "baseLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1309,
                            "src": "11175:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 1322,
                          "name": "_burnAndCollect",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "11137:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (int24,int24,uint128) returns (uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11137:52:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 1327,
                      "nodeType": "ExpressionStatement",
                      "src": "11137:52:23"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1329,
                            "name": "limitLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "11219:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 1330,
                            "name": "limitUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "11231:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          {
                            "id": 1331,
                            "name": "limitLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "11243:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 1328,
                          "name": "_burnAndCollect",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "11203:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "function (int24,int24,uint128) returns (uint256,uint256,uint256,uint256)"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11203:55:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 1333,
                      "nodeType": "ExpressionStatement",
                      "src": "11203:55:23"
                    }
                  ]
                },
                {
                  "assignments": [
                    1336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1336,
                      "mutability": "mutable",
                      "name": "balance0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "11334:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1335,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11334:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1339,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1337,
                      "name": "getBalance0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1844,
                      "src": "11353:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11353:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11334:32:23"
                },
                {
                  "assignments": [
                    1341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1341,
                      "mutability": "mutable",
                      "name": "balance1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "11376:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11376:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1344,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1342,
                      "name": "getBalance1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "11395:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11395:13:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11376:32:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1346,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "11432:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1347,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "11438:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1348,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "11448:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1349,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4203,
                          "src": "11458:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11458:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1345,
                      "name": "Snapshot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "11423:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_int24_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (int24,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11423:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1352,
                  "nodeType": "EmitStatement",
                  "src": "11418:54:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1353,
                      "name": "swapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1246,
                      "src": "11487:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11501:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11487:15:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1388,
                  "nodeType": "IfStatement",
                  "src": "11483:322:23",
                  "trueBody": {
                    "id": 1387,
                    "nodeType": "Block",
                    "src": "11504:301:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1361,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11553:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                    "typeString": "contract AlphaVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                    "typeString": "contract AlphaVault"
                                  }
                                ],
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11545:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1359,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11545:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11545:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 1365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1363,
                                "name": "swapAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1246,
                                "src": "11576:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11589:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "11576:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1366,
                                  "name": "swapAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1246,
                                  "src": "11608:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11621:1:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "11608:14:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "11638:11:23",
                                "subExpression": {
                                  "id": 1370,
                                  "name": "swapAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1246,
                                  "src": "11639:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 1372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "11608:41:23",
                              "trueExpression": {
                                "id": 1369,
                                "name": "swapAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1246,
                                "src": "11625:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            {
                              "id": 1373,
                              "name": "sqrtPriceLimitX96",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1248,
                              "src": "11667:17:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11702:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 1356,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "11518:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5473,
                            "src": "11518:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                              "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                            }
                          },
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11518:200:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                            "typeString": "tuple(int256,int256)"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "11518:200:23"
                      },
                      {
                        "expression": {
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1377,
                            "name": "balance0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1336,
                            "src": "11732:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1378,
                              "name": "getBalance0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1844,
                              "src": "11743:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11743:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11732:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1381,
                        "nodeType": "ExpressionStatement",
                        "src": "11732:24:23"
                      },
                      {
                        "expression": {
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1382,
                            "name": "balance1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1341,
                            "src": "11770:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1383,
                              "name": "getBalance1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "11781:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11781:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11770:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1386,
                        "nodeType": "ExpressionStatement",
                        "src": "11770:24:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1390,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "11854:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1389,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11854:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1397,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1392,
                        "name": "_baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "11895:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1393,
                        "name": "_baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "11907:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1394,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "11919:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1395,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "11929:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1391,
                      "name": "_liquidityForAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "11874:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11874:64:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11854:84:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1399,
                        "name": "_baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "11963:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1400,
                        "name": "_baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1252,
                        "src": "11975:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1401,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1390,
                        "src": "11987:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 1398,
                      "name": "_mintLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1700,
                      "src": "11948:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                        "typeString": "function (int24,int24,uint128)"
                      }
                    },
                    "id": 1402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11948:49:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1403,
                  "nodeType": "ExpressionStatement",
                  "src": "11948:49:23"
                },
                {
                  "expression": {
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1404,
                          "name": "baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 579,
                          "src": "12008:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1405,
                          "name": "baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 581,
                          "src": "12019:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "id": 1406,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12007:22:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                        "typeString": "tuple(int24,int24)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "id": 1407,
                          "name": "_baseLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "12033:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1408,
                          "name": "_baseUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1252,
                          "src": "12045:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        }
                      ],
                      "id": 1409,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12032:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                        "typeString": "tuple(int24,int24)"
                      }
                    },
                    "src": "12007:49:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "12007:49:23"
                },
                {
                  "expression": {
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1412,
                      "name": "balance0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "12067:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1413,
                        "name": "getBalance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1844,
                        "src": "12078:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12078:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12067:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1416,
                  "nodeType": "ExpressionStatement",
                  "src": "12067:24:23"
                },
                {
                  "expression": {
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1417,
                      "name": "balance1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1341,
                      "src": "12101:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1418,
                        "name": "getBalance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "12112:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12112:13:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12101:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "12101:24:23"
                },
                {
                  "assignments": [
                    1423
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1423,
                      "mutability": "mutable",
                      "name": "bidLiquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "12214:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1422,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12214:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1425,
                        "name": "_bidLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1254,
                        "src": "12258:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1426,
                        "name": "_bidUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "12269:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1427,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "12280:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1428,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "12290:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1424,
                      "name": "_liquidityForAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "12237:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12237:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12214:85:23"
                },
                {
                  "assignments": [
                    1432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1432,
                      "mutability": "mutable",
                      "name": "askLiquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "12309:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1431,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12309:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1439,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1434,
                        "name": "_askLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1258,
                        "src": "12353:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1435,
                        "name": "_askUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "12364:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1436,
                        "name": "balance0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1336,
                        "src": "12375:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1437,
                        "name": "balance1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1341,
                        "src": "12385:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1433,
                      "name": "_liquidityForAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "12332:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (int24,int24,uint256,uint256) view returns (uint128)"
                      }
                    },
                    "id": 1438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12332:62:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12309:85:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1440,
                      "name": "bidLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1423,
                      "src": "12408:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1441,
                      "name": "askLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1432,
                      "src": "12423:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "12408:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1472,
                    "nodeType": "Block",
                    "src": "12581:138:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1459,
                              "name": "_askLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "12610:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1460,
                              "name": "_askUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "12621:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1461,
                              "name": "askLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1432,
                              "src": "12632:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1458,
                            "name": "_mintLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1700,
                            "src": "12595:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                              "typeString": "function (int24,int24,uint128)"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12595:50:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "12595:50:23"
                      },
                      {
                        "expression": {
                          "id": 1470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1464,
                                "name": "limitLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 583,
                                "src": "12660:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1465,
                                "name": "limitUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "12672:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1466,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "12659:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 1467,
                                "name": "_askLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1258,
                                "src": "12687:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1468,
                                "name": "_askUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1260,
                                "src": "12698:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1469,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12686:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "src": "12659:49:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1471,
                        "nodeType": "ExpressionStatement",
                        "src": "12659:49:23"
                      }
                    ]
                  },
                  "id": 1473,
                  "nodeType": "IfStatement",
                  "src": "12404:315:23",
                  "trueBody": {
                    "id": 1457,
                    "nodeType": "Block",
                    "src": "12437:138:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1444,
                              "name": "_bidLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "12466:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1445,
                              "name": "_bidUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "12477:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1446,
                              "name": "bidLiquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "12488:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 1443,
                            "name": "_mintLiquidity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1700,
                            "src": "12451:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$__$",
                              "typeString": "function (int24,int24,uint128)"
                            }
                          },
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12451:50:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1448,
                        "nodeType": "ExpressionStatement",
                        "src": "12451:50:23"
                      },
                      {
                        "expression": {
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1449,
                                "name": "limitLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 583,
                                "src": "12516:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1450,
                                "name": "limitUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 585,
                                "src": "12528:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1451,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "12515:24:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "id": 1452,
                                "name": "_bidLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1254,
                                "src": "12543:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1453,
                                "name": "_bidUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1256,
                                "src": "12554:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              }
                            ],
                            "id": 1454,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12542:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_int24_$_t_int24_$",
                              "typeString": "tuple(int24,int24)"
                            }
                          },
                          "src": "12515:49:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1456,
                        "nodeType": "ExpressionStatement",
                        "src": "12515:49:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1244,
              "nodeType": "StructuredDocumentation",
              "src": "9862:386:23",
              "text": " @notice Updates vault's positions. Can only be called by the strategy.\n @dev Two orders are placed - a base order and a limit order. The base\n order is placed first with as much liquidity as possible. This order\n should use up all of one token, leaving only the other one. This excess\n amount is then placed as a single-sided bid or ask order."
            },
            "functionSelector": "87e5e083",
            "id": 1475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1263,
                "modifierName": {
                  "id": 1262,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4947,
                  "src": "10501:12:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10501:12:23"
              }
            ],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1246,
                  "mutability": "mutable",
                  "name": "swapAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10281:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1245,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10281:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10308:25:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "10308:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_baseLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10343:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10343:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "_baseUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10369:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10369:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1254,
                  "mutability": "mutable",
                  "name": "_bidLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10395:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1253,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10395:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "_bidUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10420:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10420:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "_askLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10445:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10445:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "_askUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1475,
                  "src": "10470:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10470:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10271:220:23"
            },
            "returnParameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10514:0:23"
            },
            "scope": 2303,
            "src": "10253:2472:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1527,
              "nodeType": "Block",
              "src": "12800:405:23",
              "statements": [
                {
                  "assignments": [
                    1483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1483,
                      "mutability": "mutable",
                      "name": "_tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 1527,
                      "src": "12810:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 1482,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "12810:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1485,
                  "initialValue": {
                    "id": 1484,
                    "name": "tickSpacing",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 567,
                    "src": "12831:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12810:32:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1487,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1477,
                          "src": "12860:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1488,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "12872:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "12860:21:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f776572203c207469636b5570706572",
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12883:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ee6ba4bc9dfde00a40d7971b955705720d4769a2c20ed3685538ff5c699cc81",
                          "typeString": "literal_string \"tickLower < tickUpper\""
                        },
                        "value": "tickLower < tickUpper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ee6ba4bc9dfde00a40d7971b955705720d4769a2c20ed3685538ff5c699cc81",
                          "typeString": "literal_string \"tickLower < tickUpper\""
                        }
                      ],
                      "id": 1486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12852:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12852:55:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "12852:55:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1494,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1477,
                          "src": "12925:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1495,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "12938:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MIN_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3159,
                          "src": "12938:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "12925:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f77657220746f6f206c6f77",
                        "id": 1498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12957:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7e5215e9236c248c269a1e30abc87607c099c2533f496f35f675ac994361979",
                          "typeString": "literal_string \"tickLower too low\""
                        },
                        "value": "tickLower too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7e5215e9236c248c269a1e30abc87607c099c2533f496f35f675ac994361979",
                          "typeString": "literal_string \"tickLower too low\""
                        }
                      ],
                      "id": 1493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12917:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12917:60:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "12917:60:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1502,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1479,
                          "src": "12995:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1503,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "13008:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3164,
                          "src": "13008:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "12995:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b557070657220746f6f2068696768",
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13027:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbf41dddac27bd038006364d94c710a987ab101b411ac3380bf559fe4bee9692",
                          "typeString": "literal_string \"tickUpper too high\""
                        },
                        "value": "tickUpper too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbf41dddac27bd038006364d94c710a987ab101b411ac3380bf559fe4bee9692",
                          "typeString": "literal_string \"tickUpper too high\""
                        }
                      ],
                      "id": 1501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12987:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12987:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "12987:61:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 1512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1510,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1477,
                            "src": "13066:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1511,
                            "name": "_tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1483,
                            "src": "13078:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "13066:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13094:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13066:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b4c6f7765722025207469636b53706163696e67",
                        "id": 1515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13097:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_340d48e5d6212412e670fd49421bae23c293aaa4e22a7ce9a56dc801a3390fc8",
                          "typeString": "literal_string \"tickLower % tickSpacing\""
                        },
                        "value": "tickLower % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_340d48e5d6212412e670fd49421bae23c293aaa4e22a7ce9a56dc801a3390fc8",
                          "typeString": "literal_string \"tickLower % tickSpacing\""
                        }
                      ],
                      "id": 1509,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13058:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13058:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1517,
                  "nodeType": "ExpressionStatement",
                  "src": "13058:65:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 1523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1519,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1479,
                            "src": "13141:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 1520,
                            "name": "_tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1483,
                            "src": "13153:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "13141:24:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13169:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13141:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b55707065722025207469636b53706163696e67",
                        "id": 1524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13172:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c6ca85372617d539740da5304d313adf563e1119a44b290a3d8dcbe5d416a01",
                          "typeString": "literal_string \"tickUpper % tickSpacing\""
                        },
                        "value": "tickUpper % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c6ca85372617d539740da5304d313adf563e1119a44b290a3d8dcbe5d416a01",
                          "typeString": "literal_string \"tickUpper % tickSpacing\""
                        }
                      ],
                      "id": 1518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13133:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13133:65:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "ExpressionStatement",
                  "src": "13133:65:23"
                }
              ]
            },
            "id": 1528,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkRange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1477,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "12752:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12752:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1528,
                  "src": "12769:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12769:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12751:34:23"
            },
            "returnParameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12800:0:23"
            },
            "scope": 2303,
            "src": "12731:474:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1670,
              "nodeType": "Block",
              "src": "13585:1219:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1546,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1535,
                      "src": "13599:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13611:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13599:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1561,
                  "nodeType": "IfStatement",
                  "src": "13595:107:23",
                  "trueBody": {
                    "id": 1560,
                    "nodeType": "Block",
                    "src": "13614:88:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 1549,
                                "name": "burned0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1538,
                                "src": "13629:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1550,
                                "name": "burned1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1540,
                                "src": "13638:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1551,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "13628:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1554,
                                "name": "tickLower",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1531,
                                "src": "13659:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1555,
                                "name": "tickUpper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1533,
                                "src": "13670:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                }
                              },
                              {
                                "id": 1556,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1535,
                                "src": "13681:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_int24",
                                  "typeString": "int24"
                                },
                                {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              ],
                              "expression": {
                                "id": 1552,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 561,
                                "src": "13649:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                  "typeString": "contract IUniswapV3Pool"
                                }
                              },
                              "id": 1553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5455,
                              "src": "13649:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                                "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                              }
                            },
                            "id": 1557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13649:42:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(uint256,uint256)"
                            }
                          },
                          "src": "13628:63:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1559,
                        "nodeType": "ExpressionStatement",
                        "src": "13628:63:23"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1563,
                    1565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1563,
                      "mutability": "mutable",
                      "name": "collect0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "13770:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1562,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13770:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1565,
                      "mutability": "mutable",
                      "name": "collect1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "13788:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1564,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13788:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1585,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1570,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13858:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlphaVault_$2303",
                              "typeString": "contract AlphaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlphaVault_$2303",
                              "typeString": "contract AlphaVault"
                            }
                          ],
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13850:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1568,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13850:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13850:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1572,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "13881:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1573,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "13908:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13940:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1575,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "13940:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 1574,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13935:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13935:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "13935:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13975:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 1580,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "13975:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 1579,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "13970:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13970:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "13970:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 1566,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "13820:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5441,
                      "src": "13820:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                      }
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13820:181:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13769:232:23"
                },
                {
                  "expression": {
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1586,
                      "name": "feesToVault0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1542,
                      "src": "14012:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1589,
                          "name": "burned0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1538,
                          "src": "14040:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1587,
                          "name": "collect0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1563,
                          "src": "14027:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3963,
                        "src": "14027:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14027:21:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14012:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1592,
                  "nodeType": "ExpressionStatement",
                  "src": "14012:36:23"
                },
                {
                  "expression": {
                    "id": 1598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1593,
                      "name": "feesToVault1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "14058:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1596,
                          "name": "burned1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1540,
                          "src": "14086:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1594,
                          "name": "collect1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1565,
                          "src": "14073:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3963,
                        "src": "14073:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14073:21:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14058:36:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1599,
                  "nodeType": "ExpressionStatement",
                  "src": "14058:36:23"
                },
                {
                  "assignments": [
                    1601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1601,
                      "mutability": "mutable",
                      "name": "feesToProtocol0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "14104:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1600,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14104:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1602,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14104:23:23"
                },
                {
                  "assignments": [
                    1604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1604,
                      "mutability": "mutable",
                      "name": "feesToProtocol1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "14137:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1603,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14137:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1605,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14137:23:23"
                },
                {
                  "assignments": [
                    1607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1607,
                      "mutability": "mutable",
                      "name": "_protocolFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1670,
                      "src": "14211:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1606,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14211:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1609,
                  "initialValue": {
                    "id": 1608,
                    "name": "protocolFee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 569,
                    "src": "14234:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14211:34:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1610,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1607,
                      "src": "14259:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14274:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14259:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1662,
                  "nodeType": "IfStatement",
                  "src": "14255:455:23",
                  "trueBody": {
                    "id": 1661,
                    "nodeType": "Block",
                    "src": "14277:433:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1613,
                            "name": "feesToProtocol0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1601,
                            "src": "14291:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "316536",
                                "id": 1619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14344:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1e6"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1616,
                                    "name": "_protocolFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1607,
                                    "src": "14326:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1614,
                                    "name": "feesToVault0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1542,
                                    "src": "14309:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1615,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3997,
                                  "src": "14309:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14309:30:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4019,
                              "src": "14309:34:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14309:39:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14291:57:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1622,
                        "nodeType": "ExpressionStatement",
                        "src": "14291:57:23"
                      },
                      {
                        "expression": {
                          "id": 1631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1623,
                            "name": "feesToProtocol1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1604,
                            "src": "14362:15:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "316536",
                                "id": 1629,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14415:3:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1e6"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1626,
                                    "name": "_protocolFee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1607,
                                    "src": "14397:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1624,
                                    "name": "feesToVault1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1544,
                                    "src": "14380:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1625,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3997,
                                  "src": "14380:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1627,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14380:30:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4019,
                              "src": "14380:34:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14380:39:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14362:57:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1632,
                        "nodeType": "ExpressionStatement",
                        "src": "14362:57:23"
                      },
                      {
                        "expression": {
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1633,
                            "name": "feesToVault0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1542,
                            "src": "14433:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1636,
                                "name": "feesToProtocol0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1601,
                                "src": "14465:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1634,
                                "name": "feesToVault0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1542,
                                "src": "14448:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3963,
                              "src": "14448:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14448:33:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14433:48:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1639,
                        "nodeType": "ExpressionStatement",
                        "src": "14433:48:23"
                      },
                      {
                        "expression": {
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1640,
                            "name": "feesToVault1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1544,
                            "src": "14495:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1643,
                                "name": "feesToProtocol1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1604,
                                "src": "14527:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1641,
                                "name": "feesToVault1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1544,
                                "src": "14510:12:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3963,
                              "src": "14510:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14510:33:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14495:48:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1646,
                        "nodeType": "ExpressionStatement",
                        "src": "14495:48:23"
                      },
                      {
                        "expression": {
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1647,
                            "name": "accruedProtocolFees0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "14557:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1650,
                                "name": "feesToProtocol0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1601,
                                "src": "14605:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1648,
                                "name": "accruedProtocolFees0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 587,
                                "src": "14580:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3941,
                              "src": "14580:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14580:41:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14557:64:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1653,
                        "nodeType": "ExpressionStatement",
                        "src": "14557:64:23"
                      },
                      {
                        "expression": {
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1654,
                            "name": "accruedProtocolFees1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "14635:20:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1657,
                                "name": "feesToProtocol1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1604,
                                "src": "14683:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1655,
                                "name": "accruedProtocolFees1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 589,
                                "src": "14658:20:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3941,
                              "src": "14658:24:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14658:41:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14635:64:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "14635:64:23"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1664,
                        "name": "feesToVault0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "14736:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1665,
                        "name": "feesToVault1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1544,
                        "src": "14750:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1666,
                        "name": "feesToProtocol0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "14764:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1667,
                        "name": "feesToProtocol1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1604,
                        "src": "14781:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1663,
                      "name": "CollectFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "14724:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14724:73:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1669,
                  "nodeType": "EmitStatement",
                  "src": "14719:78:23"
                }
              ]
            },
            "documentation": {
              "id": 1529,
              "nodeType": "StructuredDocumentation",
              "src": "13211:87:23",
              "text": "@dev Withdraws liquidity from a range and collects all fees in the\n process."
            },
            "id": 1671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnAndCollect",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13337:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1530,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13337:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1533,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13362:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "13362:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13387:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "13387:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13327:83:23"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "burned0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13458:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13458:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1540,
                  "mutability": "mutable",
                  "name": "burned1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13487:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13487:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1542,
                  "mutability": "mutable",
                  "name": "feesToVault0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13516:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13516:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "feesToVault1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1671,
                  "src": "13550:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13550:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13444:136:23"
            },
            "scope": 2303,
            "src": "13303:1501:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1699,
              "nodeType": "Block",
              "src": "14990:121:23",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1681,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1678,
                      "src": "15004:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15016:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15004:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1698,
                  "nodeType": "IfStatement",
                  "src": "15000:105:23",
                  "trueBody": {
                    "id": 1697,
                    "nodeType": "Block",
                    "src": "15019:86:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1689,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "15051:4:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                    "typeString": "contract AlphaVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                    "typeString": "contract AlphaVault"
                                  }
                                ],
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15043:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1687,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15043:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15043:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1691,
                              "name": "tickLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1674,
                              "src": "15058:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1692,
                              "name": "tickUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1676,
                              "src": "15069:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            {
                              "id": 1693,
                              "name": "liquidity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1678,
                              "src": "15080:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "hexValue": "",
                              "id": 1694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15091:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 1684,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "15033:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            },
                            "id": 1686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5423,
                            "src": "15033:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (address,int24,int24,uint128,bytes memory) external returns (uint256,uint256)"
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15033:61:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 1696,
                        "nodeType": "ExpressionStatement",
                        "src": "15033:61:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1672,
              "nodeType": "StructuredDocumentation",
              "src": "14810:59:23",
              "text": "@dev Deposits liquidity in a range on the Uniswap pool."
            },
            "id": 1700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1674,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "14907:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1673,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14907:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1676,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "14932:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1675,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "14932:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1700,
                  "src": "14957:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "14957:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14897:83:23"
            },
            "returnParameters": {
              "id": 1680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14990:0:23"
            },
            "scope": 2303,
            "src": "14874:237:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              5384
            ],
            "body": {
              "id": 1749,
              "nodeType": "Block",
              "src": "15419:347:23",
              "statements": [
                {
                  "assignments": [
                    1710,
                    1712
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1710,
                      "mutability": "mutable",
                      "name": "baseAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "15430:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1709,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15430:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1712,
                      "mutability": "mutable",
                      "name": "baseAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "15451:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1711,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15451:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1717,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1714,
                        "name": "baseLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "15493:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1715,
                        "name": "baseUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 581,
                        "src": "15504:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1713,
                      "name": "getPositionAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1826,
                      "src": "15474:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15474:40:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15429:85:23"
                },
                {
                  "assignments": [
                    1719,
                    1721
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1719,
                      "mutability": "mutable",
                      "name": "limitAmount0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "15525:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1718,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15525:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1721,
                      "mutability": "mutable",
                      "name": "limitAmount1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1749,
                      "src": "15547:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1720,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15547:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1726,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1723,
                        "name": "limitLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "15602:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1724,
                        "name": "limitUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "15614:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1722,
                      "name": "getPositionAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1826,
                      "src": "15583:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24) view returns (uint256,uint256)"
                      }
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15583:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15524:101:23"
                },
                {
                  "expression": {
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1727,
                      "name": "total0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1705,
                      "src": "15635:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1734,
                          "name": "limitAmount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1719,
                          "src": "15679:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1731,
                              "name": "baseAmount0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1710,
                              "src": "15662:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1728,
                                "name": "getBalance0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1844,
                                "src": "15644:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15644:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3941,
                            "src": "15644:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15644:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3941,
                        "src": "15644:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15644:48:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15635:57:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "15635:57:23"
                },
                {
                  "expression": {
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1738,
                      "name": "total1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1707,
                      "src": "15702:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1745,
                          "name": "limitAmount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1721,
                          "src": "15746:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1742,
                              "name": "baseAmount1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "15729:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1739,
                                "name": "getBalance1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1862,
                                "src": "15711:11:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15711:13:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3941,
                            "src": "15711:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15711:30:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3941,
                        "src": "15711:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15711:48:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15702:57:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "15702:57:23"
                }
              ]
            },
            "documentation": {
              "id": 1701,
              "nodeType": "StructuredDocumentation",
              "src": "15117:208:23",
              "text": " @notice Calculates the vault's total holdings of token0 and token1 - in\n other words, how much of each token the vault would hold if it withdrew\n all its liquidity from Uniswap."
            },
            "functionSelector": "c4a7761e",
            "id": 1750,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmounts",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1703,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15369:8:23"
            },
            "parameters": {
              "id": 1702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15354:2:23"
            },
            "returnParameters": {
              "id": 1708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1705,
                  "mutability": "mutable",
                  "name": "total0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "15387:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15387:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1707,
                  "mutability": "mutable",
                  "name": "total1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "15403:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15403:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15386:32:23"
            },
            "scope": 2303,
            "src": "15330:436:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1825,
              "nodeType": "Block",
              "src": "16153:466:23",
              "statements": [
                {
                  "assignments": [
                    1763,
                    null,
                    null,
                    1765,
                    1767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1763,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "16164:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1762,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16164:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 1765,
                      "mutability": "mutable",
                      "name": "tokensOwed0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "16187:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1764,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16187:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1767,
                      "mutability": "mutable",
                      "name": "tokensOwed1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "16208:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 1766,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16208:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1769,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1753,
                        "src": "16253:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1770,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1755,
                        "src": "16264:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 1768,
                      "name": "_position",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1898,
                      "src": "16243:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (int24,int24) view returns (uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16243:31:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16163:111:23"
                },
                {
                  "expression": {
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1773,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1758,
                          "src": "16285:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1774,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "16294:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1775,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16284:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1777,
                          "name": "tickLower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1753,
                          "src": "16326:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1778,
                          "name": "tickUpper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1755,
                          "src": "16337:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        {
                          "id": 1779,
                          "name": "liquidity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "16348:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 1776,
                        "name": "_amountsForLiquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "16305:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (int24,int24,uint128) view returns (uint256,uint256)"
                        }
                      },
                      "id": 1780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16305:53:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "16284:74:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "16284:74:23"
                },
                {
                  "assignments": [
                    1784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1784,
                      "mutability": "mutable",
                      "name": "oneMinusFee",
                      "nodeType": "VariableDeclaration",
                      "scope": 1825,
                      "src": "16403:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16403:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1790,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "16442:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "316536",
                            "id": 1787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16433:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            }
                          ],
                          "id": 1786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16425:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1785,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "16425:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16425:12:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3963,
                      "src": "16425:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16425:29:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16403:51:23"
                },
                {
                  "expression": {
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1793,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1758,
                      "src": "16464:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "316536",
                              "id": 1804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16528:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1801,
                                  "name": "oneMinusFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1784,
                                  "src": "16511:11:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1798,
                                      "name": "tokensOwed0",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1765,
                                      "src": "16494:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 1797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16486:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1796,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16486:7:23",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1799,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16486:20:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1800,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3997,
                                "src": "16486:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16486:37:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4019,
                            "src": "16486:41:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16486:46:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1794,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1758,
                          "src": "16474:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3941,
                        "src": "16474:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16474:59:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16464:69:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1808,
                  "nodeType": "ExpressionStatement",
                  "src": "16464:69:23"
                },
                {
                  "expression": {
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1809,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "16543:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "316536",
                              "id": 1820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16607:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1817,
                                  "name": "oneMinusFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1784,
                                  "src": "16590:11:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1814,
                                      "name": "tokensOwed1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1767,
                                      "src": "16573:11:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    ],
                                    "id": 1813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16565:7:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1812,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16565:7:23",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16565:20:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3997,
                                "src": "16565:24:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16565:37:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4019,
                            "src": "16565:41:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16565:46:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1810,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1760,
                          "src": "16553:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3941,
                        "src": "16553:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16553:59:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16543:69:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "16543:69:23"
                }
              ]
            },
            "documentation": {
              "id": 1751,
              "nodeType": "StructuredDocumentation",
              "src": "15772:231:23",
              "text": " @notice Amounts of token0 and token1 held in vault's position. Includes\n owed fees but excludes the proportion of fees that will be paid to the\n protocol. Doesn't include fees accrued since last poke."
            },
            "functionSelector": "a91ef6eb",
            "id": 1826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPositionAmounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "16036:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16036:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1755,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "16053:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1754,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16053:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16035:34:23"
            },
            "returnParameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1758,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "16115:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16115:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1760,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1826,
                  "src": "16132:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16132:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16114:34:23"
            },
            "scope": 2303,
            "src": "16008:611:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1843,
              "nodeType": "Block",
              "src": "16762:81:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1840,
                        "name": "accruedProtocolFees0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "16815:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1836,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16804:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 1835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16796:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1834,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16796:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16796:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1832,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "16779:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4695",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4634,
                          "src": "16779:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16779:31:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3963,
                      "src": "16779:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16779:57:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1831,
                  "id": 1842,
                  "nodeType": "Return",
                  "src": "16772:64:23"
                }
              ]
            },
            "documentation": {
              "id": 1827,
              "nodeType": "StructuredDocumentation",
              "src": "16625:79:23",
              "text": " @notice Balance of token0 in vault not used in any position."
            },
            "functionSelector": "629d9405",
            "id": 1844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16729:2:23"
            },
            "returnParameters": {
              "id": 1831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1830,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1844,
                  "src": "16753:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16753:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16752:9:23"
            },
            "scope": 2303,
            "src": "16709:134:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "16986:81:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1858,
                        "name": "accruedProtocolFees1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "17039:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1854,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17028:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                  "typeString": "contract AlphaVault"
                                }
                              ],
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17020:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1852,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17020:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17020:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1850,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "17003:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4695",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4634,
                          "src": "17003:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17003:31:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3963,
                      "src": "17003:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17003:57:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1849,
                  "id": 1860,
                  "nodeType": "Return",
                  "src": "16996:64:23"
                }
              ]
            },
            "documentation": {
              "id": 1845,
              "nodeType": "StructuredDocumentation",
              "src": "16849:79:23",
              "text": " @notice Balance of token1 in vault not used in any position."
            },
            "functionSelector": "41aec538",
            "id": 1862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16953:2:23"
            },
            "returnParameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "16977:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16977:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16976:9:23"
            },
            "scope": 2303,
            "src": "16933:134:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1897,
              "nodeType": "Block",
              "src": "17350:139:23",
              "statements": [
                {
                  "assignments": [
                    1881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1881,
                      "mutability": "mutable",
                      "name": "positionKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 1897,
                      "src": "17360:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1880,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17360:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1891,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1886,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17410:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlphaVault_$2303",
                              "typeString": "contract AlphaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlphaVault_$2303",
                              "typeString": "contract AlphaVault"
                            }
                          ],
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17402:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17402:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17402:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1888,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1865,
                        "src": "17417:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 1889,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1867,
                        "src": "17428:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "expression": {
                        "id": 1882,
                        "name": "PositionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5341,
                        "src": "17382:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PositionKey_$5341_$",
                          "typeString": "type(library PositionKey)"
                        }
                      },
                      "id": 1883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "compute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5340,
                      "src": "17382:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_int24_$_t_int24_$returns$_t_bytes32_$",
                        "typeString": "function (address,int24,int24) pure returns (bytes32)"
                      }
                    },
                    "id": 1890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17382:56:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17360:78:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1894,
                        "name": "positionKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1881,
                        "src": "17470:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1892,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "17455:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "positions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5801,
                      "src": "17455:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (bytes32) view external returns (uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 1895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17455:27:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "functionReturnParameters": 1879,
                  "id": 1896,
                  "nodeType": "Return",
                  "src": "17448:34:23"
                }
              ]
            },
            "documentation": {
              "id": 1863,
              "nodeType": "StructuredDocumentation",
              "src": "17073:53:23",
              "text": "@dev Wrapper around `IUniswapV3Pool.positions()`."
            },
            "id": 1898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_position",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1865,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17150:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1864,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "17150:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1867,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17167:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1866,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "17167:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17149:34:23"
            },
            "returnParameters": {
              "id": 1879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17244:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "17244:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17265:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17265:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17286:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17286:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17307:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "17307:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1878,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "17328:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1877,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "17328:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17230:115:23"
            },
            "scope": 2303,
            "src": "17131:358:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1932,
              "nodeType": "Block",
              "src": "17722:317:23",
              "statements": [
                {
                  "assignments": [
                    1913,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1913,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nodeType": "VariableDeclaration",
                      "scope": 1932,
                      "src": "17733:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 1912,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "17733:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1917,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1914,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "17769:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5729,
                      "src": "17769:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17769:12:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17732:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1920,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1913,
                        "src": "17867:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1923,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1901,
                            "src": "17925:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1921,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "17897:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3546,
                          "src": "17897:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17897:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1927,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1903,
                            "src": "17981:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1925,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "17953:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3546,
                          "src": "17953:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17953:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 1929,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "18009:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 1918,
                        "name": "LiquidityAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5316,
                        "src": "17810:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$5316_$",
                          "typeString": "type(library LiquidityAmounts)"
                        }
                      },
                      "id": 1919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountsForLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5315,
                      "src": "17810:39:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 1930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17810:222:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 1911,
                  "id": 1931,
                  "nodeType": "Return",
                  "src": "17791:241:23"
                }
              ]
            },
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "17495:68:23",
              "text": "@dev Wrapper around `LiquidityAmounts.getAmountsForLiquidity()`."
            },
            "id": 1933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_amountsForLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1933,
                  "src": "17607:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "17607:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1933,
                  "src": "17632:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "17632:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 1933,
                  "src": "17657:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "17657:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17597:83:23"
            },
            "returnParameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1908,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1933,
                  "src": "17704:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17704:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1933,
                  "src": "17713:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17713:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17703:18:23"
            },
            "scope": 2303,
            "src": "17568:471:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1968,
              "nodeType": "Block",
              "src": "18286:340:23",
              "statements": [
                {
                  "assignments": [
                    1948,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1948,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nodeType": "VariableDeclaration",
                      "scope": 1968,
                      "src": "18297:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 1947,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "18297:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 1952,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1949,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "18333:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 1950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "slot0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5729,
                      "src": "18333:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18333:12:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18296:49:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1955,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1948,
                        "src": "18431:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1958,
                            "name": "tickLower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1936,
                            "src": "18489:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1956,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "18461:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3546,
                          "src": "18461:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18461:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1962,
                            "name": "tickUpper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1938,
                            "src": "18545:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          ],
                          "expression": {
                            "id": 1960,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "18517:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getSqrtRatioAtTick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3546,
                          "src": "18517:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
                            "typeString": "function (int24) pure returns (uint160)"
                          }
                        },
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18517:38:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 1964,
                        "name": "amount0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1940,
                        "src": "18573:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1965,
                        "name": "amount1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1942,
                        "src": "18598:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1953,
                        "name": "LiquidityAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5316,
                        "src": "18374:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$5316_$",
                          "typeString": "type(library LiquidityAmounts)"
                        }
                      },
                      "id": 1954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getLiquidityForAmounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5166,
                      "src": "18374:39:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
                        "typeString": "function (uint160,uint160,uint160,uint256,uint256) pure returns (uint128)"
                      }
                    },
                    "id": 1966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18374:245:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 1946,
                  "id": 1967,
                  "nodeType": "Return",
                  "src": "18355:264:23"
                }
              ]
            },
            "documentation": {
              "id": 1934,
              "nodeType": "StructuredDocumentation",
              "src": "18045:68:23",
              "text": "@dev Wrapper around `LiquidityAmounts.getLiquidityForAmounts()`."
            },
            "id": 1969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidityForAmounts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1936,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "18157:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "18157:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1938,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "18182:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 1937,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "18182:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1940,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "18207:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18207:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1942,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "18232:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18232:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18147:106:23"
            },
            "returnParameters": {
              "id": 1946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1945,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1969,
                  "src": "18277:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1944,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "18277:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18276:9:23"
            },
            "scope": 2303,
            "src": "18118:508:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1992,
              "nodeType": "Block",
              "src": "18754:74:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1978,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1972,
                          "src": "18771:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "18781:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                },
                                "typeName": {
                                  "id": 1980,
                                  "name": "uint128",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18781:7:23",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint128_$",
                                  "typeString": "type(uint128)"
                                }
                              ],
                              "id": 1979,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18776:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18776:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint128",
                              "typeString": "type(uint128)"
                            }
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "18776:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "18771:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1977,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "18764:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18764:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1986,
                  "nodeType": "ExpressionStatement",
                  "src": "18764:30:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1989,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1972,
                        "src": "18819:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18811:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint128_$",
                        "typeString": "type(uint128)"
                      },
                      "typeName": {
                        "id": 1987,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18811:7:23",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18811:10:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 1976,
                  "id": 1991,
                  "nodeType": "Return",
                  "src": "18804:17:23"
                }
              ]
            },
            "documentation": {
              "id": 1970,
              "nodeType": "StructuredDocumentation",
              "src": "18632:54:23",
              "text": "@dev Casts uint256 to uint128 with overflow check."
            },
            "id": 1993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_toUint128",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1972,
                  "mutability": "mutable",
                  "name": "x",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "18711:9:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18711:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18710:11:23"
            },
            "returnParameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1975,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1993,
                  "src": "18745:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1974,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "18745:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18744:9:23"
            },
            "scope": 2303,
            "src": "18691:137:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4961
            ],
            "body": {
              "id": 2038,
              "nodeType": "Block",
              "src": "19011:187:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2005,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19029:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19029:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2009,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "19051:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            ],
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19043:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2007,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19043:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19043:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19029:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19021:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19021:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2013,
                  "nodeType": "ExpressionStatement",
                  "src": "19021:36:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2014,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1996,
                      "src": "19071:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19081:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19071:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2025,
                  "nodeType": "IfStatement",
                  "src": "19067:57:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2020,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19104:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19104:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 2022,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1996,
                          "src": "19116:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2017,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "19084:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "19084:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19084:40:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2024,
                    "nodeType": "ExpressionStatement",
                    "src": "19084:40:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2026,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1998,
                      "src": "19138:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19148:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19138:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2037,
                  "nodeType": "IfStatement",
                  "src": "19134:57:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2032,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19171:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19171:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 2034,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1998,
                          "src": "19183:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2029,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "19151:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "19151:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19151:40:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2036,
                    "nodeType": "ExpressionStatement",
                    "src": "19151:40:23"
                  }
                }
              ]
            },
            "documentation": {
              "id": 1994,
              "nodeType": "StructuredDocumentation",
              "src": "18834:38:23",
              "text": "@dev Callback for Uniswap V3 pool."
            },
            "functionSelector": "d3487997",
            "id": 2039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3MintCallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2002,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19002:8:23"
            },
            "parameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1996,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "18917:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18917:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "18942:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18942:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2039,
                  "src": "18967:19:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18967:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18907:85:23"
            },
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19011:0:23"
            },
            "scope": 2303,
            "src": "18877:321:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4975
            ],
            "body": {
              "id": 2090,
              "nodeType": "Block",
              "src": "19389:225:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2051,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19407:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19407:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2055,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "19429:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                                "typeString": "contract IUniswapV3Pool"
                              }
                            ],
                            "id": 2054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19421:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2053,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19421:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19421:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19407:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19399:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19399:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "19399:36:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 2062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2060,
                      "name": "amount0Delta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2042,
                      "src": "19449:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19464:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19449:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2074,
                  "nodeType": "IfStatement",
                  "src": "19445:76:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2066,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19487:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19487:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2070,
                              "name": "amount0Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "19507:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19499:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2068,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19499:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19499:21:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2063,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "19467:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "19467:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19467:54:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2073,
                    "nodeType": "ExpressionStatement",
                    "src": "19467:54:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 2077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2075,
                      "name": "amount1Delta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2044,
                      "src": "19535:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19550:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19535:16:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2089,
                  "nodeType": "IfStatement",
                  "src": "19531:76:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2081,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19573:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19573:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2085,
                              "name": "amount1Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2044,
                              "src": "19593:12:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 2084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19585:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 2083,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19585:7:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19585:21:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2078,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "19553:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "19553:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19553:54:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2088,
                    "nodeType": "ExpressionStatement",
                    "src": "19553:54:23"
                  }
                }
              ]
            },
            "documentation": {
              "id": 2040,
              "nodeType": "StructuredDocumentation",
              "src": "19204:38:23",
              "text": "@dev Callback for Uniswap V3 pool."
            },
            "functionSelector": "fa461e33",
            "id": 2091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3SwapCallback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2048,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19380:8:23"
            },
            "parameters": {
              "id": 2047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2042,
                  "mutability": "mutable",
                  "name": "amount0Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 2091,
                  "src": "19287:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2041,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19287:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2044,
                  "mutability": "mutable",
                  "name": "amount1Delta",
                  "nodeType": "VariableDeclaration",
                  "scope": 2091,
                  "src": "19316:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 2043,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19316:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2046,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2091,
                  "src": "19345:19:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2045,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19345:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19277:93:23"
            },
            "returnParameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19389:0:23"
            },
            "scope": 2303,
            "src": "19247:367:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2139,
              "nodeType": "Block",
              "src": "19819:257:23",
              "statements": [
                {
                  "expression": {
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2103,
                      "name": "accruedProtocolFees0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "19829:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2106,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "19877:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2104,
                          "name": "accruedProtocolFees0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "19852:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3963,
                        "src": "19852:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19852:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19829:56:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "19829:56:23"
                },
                {
                  "expression": {
                    "id": 2115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2110,
                      "name": "accruedProtocolFees1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 589,
                      "src": "19895:20:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2113,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "19943:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2111,
                          "name": "accruedProtocolFees1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 589,
                          "src": "19918:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3963,
                        "src": "19918:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19918:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19895:56:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2116,
                  "nodeType": "ExpressionStatement",
                  "src": "19895:56:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2117,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2094,
                      "src": "19965:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19975:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19965:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2127,
                  "nodeType": "IfStatement",
                  "src": "19961:49:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2123,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "19998:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2124,
                          "name": "amount0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2094,
                          "src": "20002:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2120,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 563,
                          "src": "19978:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "19978:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19978:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2126,
                    "nodeType": "ExpressionStatement",
                    "src": "19978:32:23"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2128,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2096,
                      "src": "20024:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20034:1:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "20024:11:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2138,
                  "nodeType": "IfStatement",
                  "src": "20020:49:23",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 2134,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2098,
                          "src": "20057:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2135,
                          "name": "amount1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2096,
                          "src": "20061:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2131,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "20037:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4729,
                        "src": "20037:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 2136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20037:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2137,
                    "nodeType": "ExpressionStatement",
                    "src": "20037:32:23"
                  }
                }
              ]
            },
            "documentation": {
              "id": 2092,
              "nodeType": "StructuredDocumentation",
              "src": "19620:69:23",
              "text": " @notice Used to collect accumulated protocol fees."
            },
            "functionSelector": "0430c130",
            "id": 2140,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2101,
                "modifierName": {
                  "id": 2100,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "19804:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "19804:14:23"
              }
            ],
            "name": "collectProtocol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2094,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "19728:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19728:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2096,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "19753:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2095,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19753:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2140,
                  "src": "19778:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19778:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19718:76:23"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19819:0:23"
            },
            "scope": 2303,
            "src": "19694:382:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2170,
              "nodeType": "Block",
              "src": "20272:109:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          },
                          "id": 2155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2153,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "20290:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4695",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2154,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "20299:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4695",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "20290:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$4695",
                            "typeString": "contract IERC20"
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2156,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "20309:5:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4695",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 2157,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "20318:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4695",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "20309:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20290:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e",
                        "id": 2160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20326:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        },
                        "value": "token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b9b0454cadcb5884dd3faa6ba975da4d2459aa3f11d31291a25a8358f84946d",
                          "typeString": "literal_string \"token\""
                        }
                      ],
                      "id": 2152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20282:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20282:52:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "20282:52:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2166,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2147,
                        "src": "20363:2:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2167,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2145,
                        "src": "20367:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2163,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "20344:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$4695",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4729,
                      "src": "20344:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$4695_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$4695_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20344:30:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2169,
                  "nodeType": "ExpressionStatement",
                  "src": "20344:30:23"
                }
              ]
            },
            "documentation": {
              "id": 2141,
              "nodeType": "StructuredDocumentation",
              "src": "20082:74:23",
              "text": " @notice Removes tokens accidentally sent to this vault."
            },
            "functionSelector": "dc2c256f",
            "id": 2171,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2150,
                "modifierName": {
                  "id": 2149,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "20257:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20257:14:23"
              }
            ],
            "name": "sweep",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2143,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "20185:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$4695",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4695,
                    "src": "20185:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4695",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2145,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "20207:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20207:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2147,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2171,
                  "src": "20231:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20231:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20175:72:23"
            },
            "returnParameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20272:0:23"
            },
            "scope": 2303,
            "src": "20161:220:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2183,
              "nodeType": "Block",
              "src": "20634:37:23",
              "statements": [
                {
                  "expression": {
                    "id": 2181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2179,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 573,
                      "src": "20644:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2180,
                      "name": "_strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2174,
                      "src": "20655:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20644:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2182,
                  "nodeType": "ExpressionStatement",
                  "src": "20644:20:23"
                }
              ]
            },
            "documentation": {
              "id": 2172,
              "nodeType": "StructuredDocumentation",
              "src": "20387:178:23",
              "text": " @notice Used to set the strategy contract that determines the position\n ranges and calls rebalance(). Must be called after this vault is\n deployed."
            },
            "functionSelector": "33a100ca",
            "id": 2184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2177,
                "modifierName": {
                  "id": 2176,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "20619:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20619:14:23"
              }
            ],
            "name": "setStrategy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2174,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2184,
                  "src": "20591:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20591:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20590:19:23"
            },
            "returnParameters": {
              "id": 2178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20634:0:23"
            },
            "scope": 2303,
            "src": "20570:101:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2203,
              "nodeType": "Block",
              "src": "20890:95:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2193,
                          "name": "_protocolFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2187,
                          "src": "20908:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "316536",
                          "id": 2194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20923:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1e6"
                        },
                        "src": "20908:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f746f636f6c466565",
                        "id": 2196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20928:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        },
                        "value": "protocolFee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9666963db923dcaf33a5e34434d0bf68eeb29ddd4ad7e1e339177b75c8e19e0f",
                          "typeString": "literal_string \"protocolFee\""
                        }
                      ],
                      "id": 2192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20900:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20900:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2198,
                  "nodeType": "ExpressionStatement",
                  "src": "20900:42:23"
                },
                {
                  "expression": {
                    "id": 2201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2199,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 569,
                      "src": "20952:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2200,
                      "name": "_protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2187,
                      "src": "20966:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20952:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2202,
                  "nodeType": "ExpressionStatement",
                  "src": "20952:26:23"
                }
              ]
            },
            "documentation": {
              "id": 2185,
              "nodeType": "StructuredDocumentation",
              "src": "20677:138:23",
              "text": " @notice Used to change the protocol fee charged on pool fees earned from\n Uniswap, expressed as multiple of 1e-6."
            },
            "functionSelector": "787dce3d",
            "id": 2204,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2190,
                "modifierName": {
                  "id": 2189,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "20875:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "20875:14:23"
              }
            ],
            "name": "setProtocolFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2187,
                  "mutability": "mutable",
                  "name": "_protocolFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2204,
                  "src": "20844:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20844:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20843:22:23"
            },
            "returnParameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20890:0:23"
            },
            "scope": 2303,
            "src": "20820:165:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2216,
              "nodeType": "Block",
              "src": "21343:49:23",
              "statements": [
                {
                  "expression": {
                    "id": 2214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2212,
                      "name": "maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "21353:14:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2213,
                      "name": "_maxTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2207,
                      "src": "21370:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21353:32:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2215,
                  "nodeType": "ExpressionStatement",
                  "src": "21353:32:23"
                }
              ]
            },
            "documentation": {
              "id": 2205,
              "nodeType": "StructuredDocumentation",
              "src": "20991:271:23",
              "text": " @notice Used to change deposit cap for a guarded launch or to ensure\n vault doesn't grow too large relative to the pool. Cap is on total\n supply rather than amounts of token0 and token1 as those amounts\n fluctuate naturally over time."
            },
            "functionSelector": "3f3e4c11",
            "id": 2217,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2210,
                "modifierName": {
                  "id": 2209,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "21328:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21328:14:23"
              }
            ],
            "name": "setMaxTotalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2207,
                  "mutability": "mutable",
                  "name": "_maxTotalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 2217,
                  "src": "21294:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21294:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21293:25:23"
            },
            "returnParameters": {
              "id": 2211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21343:0:23"
            },
            "scope": 2303,
            "src": "21267:125:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2258,
              "nodeType": "Block",
              "src": "21599:156:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2232,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "21619:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2233,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2222,
                        "src": "21630:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2234,
                        "name": "liquidity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2224,
                        "src": "21641:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 2229,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "21609:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5455,
                      "src": "21609:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (int24,int24,uint128) external returns (uint256,uint256)"
                      }
                    },
                    "id": 2235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21609:42:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 2236,
                  "nodeType": "ExpressionStatement",
                  "src": "21609:42:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2242,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "21682:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AlphaVault_$2303",
                              "typeString": "contract AlphaVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AlphaVault_$2303",
                              "typeString": "contract AlphaVault"
                            }
                          ],
                          "id": 2241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "21674:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "21674:7:23",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21674:13:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2244,
                        "name": "tickLower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2220,
                        "src": "21689:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2245,
                        "name": "tickUpper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2222,
                        "src": "21700:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21716:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 2247,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "21716:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 2246,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "21711:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21711:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "21711:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "21735:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 2252,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "21735:7:23",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              }
                            ],
                            "id": 2251,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "21730:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21730:13:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint128",
                            "typeString": "type(uint128)"
                          }
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "21730:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 2237,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 561,
                        "src": "21661:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5441,
                      "src": "21661:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint128_$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function (address,int24,int24,uint128,uint128) external returns (uint128,uint128)"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21661:87:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "21661:87:23"
                }
              ]
            },
            "documentation": {
              "id": 2218,
              "nodeType": "StructuredDocumentation",
              "src": "21398:66:23",
              "text": " @notice Removes liquidity in case of emergency."
            },
            "functionSelector": "abbffcb9",
            "id": 2259,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2227,
                "modifierName": {
                  "id": 2226,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "21584:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21584:14:23"
              }
            ],
            "name": "emergencyBurn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2220,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nodeType": "VariableDeclaration",
                  "scope": 2259,
                  "src": "21501:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2219,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "21501:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2222,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2259,
                  "src": "21526:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2221,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "21526:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2224,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 2259,
                  "src": "21551:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 2223,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "21551:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21491:83:23"
            },
            "returnParameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21599:0:23"
            },
            "scope": 2303,
            "src": "21469:286:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2271,
              "nodeType": "Block",
              "src": "21997:48:23",
              "statements": [
                {
                  "expression": {
                    "id": 2269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2267,
                      "name": "pendingGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "22007:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2268,
                      "name": "_governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2262,
                      "src": "22027:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22007:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2270,
                  "nodeType": "ExpressionStatement",
                  "src": "22007:31:23"
                }
              ]
            },
            "documentation": {
              "id": 2260,
              "nodeType": "StructuredDocumentation",
              "src": "21761:163:23",
              "text": " @notice Governance address is not updated until the new governance\n address has called `acceptGovernance()` to accept this responsibility."
            },
            "functionSelector": "ab033ea9",
            "id": 2272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2265,
                "modifierName": {
                  "id": 2264,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2302,
                  "src": "21982:14:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21982:14:23"
              }
            ],
            "name": "setGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2262,
                  "mutability": "mutable",
                  "name": "_governance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "21952:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21952:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21951:21:23"
            },
            "returnParameters": {
              "id": 2266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21997:0:23"
            },
            "scope": 2303,
            "src": "21929:116:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2289,
              "nodeType": "Block",
              "src": "22228:111:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2277,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "22246:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "22246:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2279,
                          "name": "pendingGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 577,
                          "src": "22260:17:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "22246:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70656e64696e67476f7665726e616e6365",
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22279:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75cf2b35fcd3ae39eaae9f0f8330524c89324e61aa5b818420bc93e577fb9a45",
                          "typeString": "literal_string \"pendingGovernance\""
                        },
                        "value": "pendingGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75cf2b35fcd3ae39eaae9f0f8330524c89324e61aa5b818420bc93e577fb9a45",
                          "typeString": "literal_string \"pendingGovernance\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22238:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22238:61:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "22238:61:23"
                },
                {
                  "expression": {
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2284,
                      "name": "governance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "22309:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2285,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "22322:3:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "22322:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "22309:23:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "22309:23:23"
                }
              ]
            },
            "documentation": {
              "id": 2273,
              "nodeType": "StructuredDocumentation",
              "src": "22051:135:23",
              "text": " @notice `setGovernance()` should be called by the existing governance\n address prior to calling this function."
            },
            "functionSelector": "238efcbc",
            "id": 2290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22216:2:23"
            },
            "returnParameters": {
              "id": 2275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22228:0:23"
            },
            "scope": 2303,
            "src": "22191:148:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2301,
              "nodeType": "Block",
              "src": "22369:75:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2293,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "22387:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "22387:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2295,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "22401:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "22387:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e6365",
                        "id": 2297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22413:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        },
                        "value": "governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        }
                      ],
                      "id": 2292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22379:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22379:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "22379:47:23"
                },
                {
                  "id": 2300,
                  "nodeType": "PlaceholderStatement",
                  "src": "22436:1:23"
                }
              ]
            },
            "id": 2302,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22369:0:23"
            },
            "src": "22345:99:23",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2304,
        "src": "960:21486:23"
      }
    ],
    "src": "39:22408:23"
  },
  "bytecode": "",
  "bytecodeSha1": "59562fac8dbef5ddedd5f0eb43deeb5ef13e557b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "AlphaVault",
  "coverageMap": {
    "branches": {
      "0": {
        "Math.max": {
          "288": [
            307,
            313,
            true
          ]
        },
        "Math.min": {
          "289": [
            483,
            488,
            true
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "295": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.div": {
          "298": [
            4302,
            4307,
            true
          ]
        },
        "SafeMath.mul": {
          "296": [
            3619,
            3625,
            false
          ],
          "297": [
            3680,
            3690,
            true
          ]
        },
        "SafeMath.sub": {
          "293": [
            3221,
            3227,
            true
          ],
          "294": [
            5545,
            5551,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "FullMath.mulDiv": {
          "273": [
            1540,
            1550,
            false
          ],
          "274": [
            1574,
            1589,
            true
          ],
          "275": [
            1828,
            1847,
            true
          ]
        }
      },
      "19": {
        "TickMath.getSqrtRatioAtTick": {
          "299": [
            1468,
            1476,
            true
          ],
          "300": [
            1543,
            1571,
            true
          ],
          "301": [
            1711,
            1729,
            false
          ],
          "302": [
            1804,
            1822,
            false
          ],
          "303": [
            1897,
            1915,
            false
          ],
          "304": [
            1990,
            2009,
            false
          ],
          "305": [
            2084,
            2103,
            false
          ],
          "306": [
            2178,
            2197,
            false
          ],
          "307": [
            2272,
            2291,
            false
          ],
          "308": [
            2366,
            2386,
            false
          ],
          "309": [
            2461,
            2481,
            false
          ],
          "310": [
            2556,
            2576,
            false
          ],
          "311": [
            2651,
            2671,
            false
          ],
          "312": [
            2746,
            2767,
            false
          ],
          "313": [
            2842,
            2863,
            false
          ],
          "314": [
            2938,
            2959,
            false
          ],
          "315": [
            3034,
            3055,
            false
          ],
          "316": [
            3130,
            3152,
            false
          ],
          "317": [
            3226,
            3248,
            false
          ],
          "318": [
            3321,
            3343,
            false
          ],
          "319": [
            3414,
            3436,
            false
          ],
          "320": [
            3503,
            3511,
            false
          ],
          "321": [
            3896,
            3918,
            true
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "267": [
            9456,
            9475,
            true
          ],
          "268": [
            9534,
            9555,
            true
          ]
        },
        "ERC20._burn": {
          "272": [
            8605,
            8626,
            true
          ]
        },
        "ERC20._mint": {
          "271": [
            7915,
            7936,
            true
          ]
        },
        "ERC20._transfer": {
          "269": [
            7136,
            7156,
            true
          ],
          "270": [
            7216,
            7239,
            true
          ]
        }
      },
      "20": {
        "LiquidityAmounts.getAmount0ForLiquidity": {
          "285": [
            4422,
            4451,
            false
          ]
        },
        "LiquidityAmounts.getAmount1ForLiquidity": {
          "286": [
            5278,
            5307,
            false
          ]
        },
        "LiquidityAmounts.getAmountsForLiquidity": {
          "280": [
            6241,
            6270,
            false
          ],
          "281": [
            6350,
            6379,
            false
          ],
          "282": [
            6489,
            6517,
            false
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount0": {
          "283": [
            1266,
            1295,
            false
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount1": {
          "284": [
            2180,
            2209,
            false
          ]
        },
        "LiquidityAmounts.getLiquidityForAmounts": {
          "276": [
            3218,
            3247,
            false
          ],
          "277": [
            3327,
            3356,
            false
          ],
          "278": [
            3466,
            3494,
            false
          ],
          "279": [
            3713,
            3736,
            true
          ]
        },
        "LiquidityAmounts.toUint128": {
          "287": [
            588,
            609,
            true
          ]
        }
      },
      "21": {},
      "23": {
        "AlphaVault._burnAndCollect": {
          "259": [
            13599,
            13612,
            false
          ],
          "260": [
            14259,
            14275,
            false
          ]
        },
        "AlphaVault._burnLiquidityShare": {
          "262": [
            9491,
            9504,
            false
          ]
        },
        "AlphaVault._calcSharesAndAmounts": {
          "250": [
            6285,
            6301,
            false
          ],
          "251": [
            6512,
            6523,
            false
          ],
          "252": [
            6643,
            6654,
            false
          ],
          "253": [
            6886,
            6895,
            true
          ]
        },
        "AlphaVault._checkRange": {
          "254": [
            12860,
            12881,
            true
          ],
          "255": [
            12925,
            12955,
            true
          ],
          "256": [
            12995,
            13025,
            true
          ],
          "257": [
            13066,
            13095,
            true
          ],
          "258": [
            13141,
            13170,
            true
          ]
        },
        "AlphaVault._mintLiquidity": {
          "261": [
            15004,
            15017,
            false
          ]
        },
        "AlphaVault._poke": {
          "249": [
            5518,
            5531,
            false
          ]
        },
        "AlphaVault.acceptGovernance": {
          "217": [
            22246,
            22277,
            true
          ]
        },
        "AlphaVault.collectProtocol": {
          "215": [
            19965,
            19976,
            false
          ],
          "216": [
            20024,
            20035,
            false
          ]
        },
        "AlphaVault.deposit": {
          "218": [
            4197,
            4215,
            true
          ],
          "219": [
            4219,
            4237,
            true
          ],
          "220": [
            4292,
            4308,
            false
          ],
          "221": [
            4312,
            4331,
            true
          ],
          "222": [
            4657,
            4667,
            true
          ],
          "223": [
            4696,
            4717,
            true
          ],
          "224": [
            4750,
            4771,
            true
          ],
          "225": [
            4839,
            4850,
            false
          ],
          "226": [
            4925,
            4936,
            false
          ],
          "227": [
            5143,
            5174,
            true
          ]
        },
        "AlphaVault.rebalance": {
          "229": [
            10532,
            10554,
            true
          ],
          "230": [
            10766,
            10783,
            true
          ],
          "231": [
            10814,
            10830,
            true
          ],
          "232": [
            11487,
            11502,
            false
          ],
          "233": [
            12408,
            12435,
            false
          ]
        },
        "AlphaVault.setProtocolFee": {
          "228": [
            20908,
            20926,
            true
          ]
        },
        "AlphaVault.sweep": {
          "244": [
            20290,
            20305,
            false
          ],
          "245": [
            20309,
            20324,
            true
          ]
        },
        "AlphaVault.uniswapV3MintCallback": {
          "241": [
            19029,
            19056,
            true
          ],
          "242": [
            19071,
            19082,
            false
          ],
          "243": [
            19138,
            19149,
            false
          ]
        },
        "AlphaVault.uniswapV3SwapCallback": {
          "246": [
            19407,
            19434,
            true
          ],
          "247": [
            19449,
            19465,
            false
          ],
          "248": [
            19535,
            19551,
            false
          ]
        },
        "AlphaVault.withdraw": {
          "234": [
            7793,
            7803,
            true
          ],
          "235": [
            7832,
            7848,
            false
          ],
          "236": [
            7852,
            7871,
            true
          ],
          "237": [
            8732,
            8753,
            true
          ],
          "238": [
            8786,
            8807,
            true
          ],
          "239": [
            8873,
            8884,
            false
          ],
          "240": [
            8932,
            8943,
            false
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "291": [
            3495,
            3516,
            false
          ],
          "292": [
            3624,
            3654,
            true
          ]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "265": [
            7234,
            7241,
            false
          ],
          "266": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "263": [
            4767,
            4797,
            true
          ],
          "264": [
            4858,
            4876,
            true
          ]
        }
      },
      "6": {},
      "7": {
        "AlphaVault.withdraw": {
          "290": [
            2277,
            2296,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Math.max": {
          "152": [
            300,
            321
          ]
        },
        "Math.min": {
          "153": [
            476,
            496
          ]
        }
      },
      "1": {
        "SafeMath.add": {
          "120": [
            2794,
            2840
          ]
        },
        "SafeMath.div": {
          "142": [
            4294,
            4338
          ],
          "143": [
            4348,
            4360
          ]
        },
        "SafeMath.mul": {
          "140": [
            3627,
            3635
          ],
          "141": [
            3672,
            3728
          ]
        },
        "SafeMath.sub": {
          "85": [
            3213,
            3262
          ],
          "86": [
            3272,
            3284
          ],
          "99": [
            5537,
            5566
          ],
          "100": [
            5576,
            5588
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {
        "FullMath.mulDiv": {
          "200": [
            1566,
            1590
          ],
          "201": [
            1691,
            1704
          ],
          "202": [
            1820,
            1848
          ],
          "203": [
            3707,
            3735
          ],
          "204": [
            3765,
            3793
          ],
          "205": [
            3824,
            3852
          ],
          "206": [
            3883,
            3911
          ],
          "207": [
            3942,
            3970
          ],
          "208": [
            4002,
            4030
          ],
          "209": [
            3102,
            3123
          ],
          "210": [
            4468,
            4488
          ]
        }
      },
      "19": {
        "TickMath.getSqrtRatioAtTick": {
          "155": [
            1535,
            1577
          ],
          "156": [
            1731,
            1790
          ],
          "157": [
            1824,
            1883
          ],
          "158": [
            1917,
            1976
          ],
          "159": [
            2011,
            2070
          ],
          "160": [
            2105,
            2164
          ],
          "161": [
            2199,
            2258
          ],
          "162": [
            2293,
            2352
          ],
          "163": [
            2388,
            2447
          ],
          "164": [
            2483,
            2542
          ],
          "165": [
            2578,
            2637
          ],
          "166": [
            2673,
            2732
          ],
          "167": [
            2769,
            2828
          ],
          "168": [
            2865,
            2924
          ],
          "169": [
            2961,
            3020
          ],
          "170": [
            3057,
            3116
          ],
          "171": [
            3154,
            3212
          ],
          "172": [
            3250,
            3307
          ],
          "173": [
            3345,
            3400
          ],
          "174": [
            3438,
            3488
          ],
          "175": [
            3513,
            3546
          ],
          "176": [
            3856,
            3928
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "89": [
            9448,
            9516
          ],
          "90": [
            9526,
            9594
          ],
          "91": [
            9605,
            9641
          ],
          "92": [
            9651,
            9688
          ]
        },
        "ERC20._burn": {
          "144": [
            8597,
            8664
          ],
          "145": [
            8675,
            8724
          ],
          "146": [
            8735,
            8824
          ],
          "147": [
            8834,
            8873
          ],
          "148": [
            8883,
            8925
          ]
        },
        "ERC20._mint": {
          "115": [
            7907,
            7972
          ],
          "116": [
            7983,
            8032
          ],
          "117": [
            8043,
            8082
          ],
          "118": [
            8092,
            8143
          ],
          "119": [
            8153,
            8195
          ]
        },
        "ERC20._transfer": {
          "93": [
            7128,
            7198
          ],
          "94": [
            7208,
            7279
          ],
          "95": [
            7290,
            7337
          ],
          "96": [
            7348,
            7439
          ],
          "97": [
            7449,
            7504
          ],
          "98": [
            7514,
            7554
          ]
        },
        "ERC20.allowance": {
          "81": [
            4065,
            4099
          ]
        },
        "ERC20.approve": {
          "5": [
            4343,
            4382
          ],
          "6": [
            4392,
            4403
          ]
        },
        "ERC20.balanceOf": {
          "32": [
            3492,
            3517
          ]
        },
        "ERC20.decimals": {
          "13": [
            3152,
            3168
          ]
        },
        "ERC20.decreaseAllowance": {
          "56": [
            6400,
            6529
          ]
        },
        "ERC20.increaseAllowance": {
          "28": [
            5693,
            5776
          ]
        },
        "ERC20.name": {
          "4": [
            2238,
            2250
          ]
        },
        "ERC20.symbol": {
          "55": [
            2442,
            2456
          ]
        },
        "ERC20.totalSupply": {
          "7": [
            3315,
            3334
          ]
        },
        "ERC20.transfer": {
          "57": [
            3829,
            3871
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            4999,
            5035
          ],
          "11": [
            5045,
            5166
          ],
          "12": [
            5176,
            5187
          ]
        }
      },
      "20": {
        "LiquidityAmounts.getAmount0ForLiquidity": {
          "193": [
            4453,
            4516
          ],
          "194": [
            4527,
            4732
          ]
        },
        "LiquidityAmounts.getAmount1ForLiquidity": {
          "195": [
            5309,
            5372
          ],
          "196": [
            5383,
            5465
          ]
        },
        "LiquidityAmounts.getAmountsForLiquidity": {
          "181": [
            6272,
            6335
          ],
          "182": [
            6395,
            6468
          ],
          "183": [
            6533,
            6605
          ],
          "184": [
            6619,
            6691
          ],
          "185": [
            6722,
            6795
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount0": {
          "189": [
            1297,
            1360
          ],
          "190": [
            1466,
            1553
          ]
        },
        "LiquidityAmounts.getLiquidityForAmount1": {
          "191": [
            2211,
            2274
          ],
          "192": [
            2284,
            2375
          ]
        },
        "LiquidityAmounts.getLiquidityForAmounts": {
          "177": [
            3249,
            3312
          ],
          "178": [
            3372,
            3445
          ],
          "179": [
            3701,
            3762
          ],
          "180": [
            3793,
            3866
          ]
        },
        "LiquidityAmounts.toUint128": {
          "211": [
            580,
            610
          ]
        }
      },
      "21": {
        "PositionKey.compute": {
          "154": [
            300,
            363
          ]
        }
      },
      "23": {
        "AlphaVault._amountsForLiquidity": {
          "139": [
            17791,
            18032
          ]
        },
        "AlphaVault._burnAndCollect": {
          "127": [
            13628,
            13691
          ],
          "128": [
            14012,
            14048
          ],
          "129": [
            14058,
            14094
          ],
          "130": [
            14291,
            14348
          ],
          "131": [
            14362,
            14419
          ],
          "132": [
            14433,
            14481
          ],
          "133": [
            14495,
            14543
          ],
          "134": [
            14557,
            14621
          ],
          "135": [
            14635,
            14699
          ],
          "136": [
            14719,
            14797
          ]
        },
        "AlphaVault._burnLiquidityShare": {
          "149": [
            9711,
            9768
          ],
          "150": [
            9782,
            9839
          ]
        },
        "AlphaVault._calcSharesAndAmounts": {
          "102": [
            6218,
            6270
          ],
          "103": [
            6380,
            6404
          ],
          "104": [
            6418,
            6442
          ],
          "105": [
            6456,
            6491
          ],
          "106": [
            6539,
            6563
          ],
          "107": [
            6577,
            6622
          ],
          "108": [
            6670,
            6694
          ],
          "109": [
            6708,
            6753
          ],
          "110": [
            6878,
            6905
          ],
          "111": [
            6952,
            6993
          ],
          "112": [
            7007,
            7048
          ],
          "113": [
            7062,
            7117
          ]
        },
        "AlphaVault._checkRange": {
          "121": [
            12852,
            12907
          ],
          "122": [
            12917,
            12977
          ],
          "123": [
            12987,
            13048
          ],
          "124": [
            13058,
            13123
          ],
          "125": [
            13133,
            13198
          ]
        },
        "AlphaVault._liquidityForAmounts": {
          "137": [
            18355,
            18619
          ]
        },
        "AlphaVault._mintLiquidity": {
          "138": [
            15033,
            15094
          ]
        },
        "AlphaVault._poke": {
          "101": [
            5547,
            5581
          ]
        },
        "AlphaVault._position": {
          "126": [
            17448,
            17482
          ]
        },
        "AlphaVault._toUint128": {
          "186": [
            18764,
            18794
          ],
          "187": [
            18804,
            18821
          ]
        },
        "AlphaVault.acceptGovernance": {
          "8": [
            22238,
            22299
          ],
          "9": [
            22309,
            22332
          ]
        },
        "AlphaVault.collectProtocol": {
          "0": [
            19829,
            19885
          ],
          "1": [
            19895,
            19951
          ],
          "2": [
            19978,
            20010
          ],
          "3": [
            20037,
            20069
          ]
        },
        "AlphaVault.deposit": {
          "15": [
            4189,
            4274
          ],
          "16": [
            4284,
            4338
          ],
          "17": [
            4418,
            4445
          ],
          "18": [
            4455,
            4484
          ],
          "19": [
            4557,
            4639
          ],
          "20": [
            4649,
            4678
          ],
          "21": [
            4688,
            4732
          ],
          "22": [
            4742,
            4786
          ],
          "23": [
            4852,
            4911
          ],
          "24": [
            4938,
            4997
          ],
          "25": [
            5044,
            5061
          ],
          "26": [
            5071,
            5125
          ],
          "27": [
            5135,
            5193
          ]
        },
        "AlphaVault.emergencyBurn": {
          "62": [
            21609,
            21651
          ],
          "63": [
            21661,
            21748
          ]
        },
        "AlphaVault.getBalance0": {
          "31": [
            16772,
            16836
          ]
        },
        "AlphaVault.getBalance1": {
          "30": [
            16996,
            17060
          ]
        },
        "AlphaVault.getPositionAmounts": {
          "58": [
            16284,
            16358
          ],
          "59": [
            16464,
            16533
          ],
          "60": [
            16543,
            16612
          ]
        },
        "AlphaVault.getTotalAmounts": {
          "64": [
            15635,
            15692
          ],
          "65": [
            15702,
            15759
          ]
        },
        "AlphaVault.rebalance": {
          "35": [
            10524,
            10567
          ],
          "36": [
            10577,
            10612
          ],
          "37": [
            10622,
            10655
          ],
          "38": [
            10665,
            10698
          ],
          "39": [
            10758,
            10796
          ],
          "40": [
            10806,
            10843
          ],
          "41": [
            11137,
            11189
          ],
          "42": [
            11203,
            11258
          ],
          "43": [
            11418,
            11472
          ],
          "44": [
            11518,
            11718
          ],
          "45": [
            11732,
            11756
          ],
          "46": [
            11770,
            11794
          ],
          "47": [
            11948,
            11997
          ],
          "48": [
            12007,
            12056
          ],
          "49": [
            12067,
            12091
          ],
          "50": [
            12101,
            12125
          ],
          "51": [
            12451,
            12501
          ],
          "52": [
            12515,
            12564
          ],
          "53": [
            12595,
            12645
          ],
          "54": [
            12659,
            12708
          ]
        },
        "AlphaVault.setGovernance": {
          "61": [
            22007,
            22038
          ]
        },
        "AlphaVault.setMaxTotalSupply": {
          "29": [
            21353,
            21385
          ]
        },
        "AlphaVault.setProtocolFee": {
          "33": [
            20900,
            20942
          ],
          "34": [
            20952,
            20978
          ]
        },
        "AlphaVault.setStrategy": {
          "14": [
            20644,
            20664
          ]
        },
        "AlphaVault.sweep": {
          "79": [
            20282,
            20334
          ],
          "80": [
            20344,
            20374
          ]
        },
        "AlphaVault.uniswapV3MintCallback": {
          "76": [
            19021,
            19057
          ],
          "77": [
            19084,
            19124
          ],
          "78": [
            19151,
            19191
          ]
        },
        "AlphaVault.uniswapV3SwapCallback": {
          "82": [
            19399,
            19435
          ],
          "83": [
            19467,
            19521
          ],
          "84": [
            19553,
            19607
          ]
        },
        "AlphaVault.withdraw": {
          "66": [
            7785,
            7814
          ],
          "67": [
            7824,
            7878
          ],
          "68": [
            7957,
            7982
          ],
          "69": [
            8588,
            8646
          ],
          "70": [
            8656,
            8714
          ],
          "71": [
            8724,
            8768
          ],
          "72": [
            8778,
            8822
          ],
          "73": [
            8886,
            8918
          ],
          "74": [
            8945,
            8977
          ],
          "75": [
            8988,
            9043
          ]
        }
      },
      "28": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "151": [
            3616,
            3701
          ]
        },
        "SafeERC20.safeTransfer": {
          "87": [
            786,
            872
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "114": [
            985,
            1081
          ]
        }
      },
      "5": {
        "Address._verifyCallResult": {
          "213": [
            7257,
            7274
          ],
          "214": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "188": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "197": [
            4759,
            4840
          ],
          "198": [
            4850,
            4910
          ],
          "199": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "212": [
            1117,
            1132
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "88": [
            678,
            695
          ]
        }
      },
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "Uniswap/uniswap-v3-core@1.0.0/FixedPoint96",
    "Uniswap/uniswap-v3-core@1.0.0/FullMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3SwapCallback",
    "IVault",
    "Uniswap/uniswap-v3-periphery@1.0.0/LiquidityAmounts",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Math",
    "Uniswap/uniswap-v3-periphery@1.0.0/PositionKey",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "Uniswap/uniswap-v3-core@1.0.0/TickMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "960:21486:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19694:382;;;;;;;;;;;;;;;;-1:-1:-1;19694:382:23;;;;;;;;;;;-1:-1:-1;;;;;19694:382:23;;:::i;:::-;;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4244:166:2;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1770:30:23;;;:::i;:::-;;;;-1:-1:-1;;;;;1770:30:23;;;;;;;;;;;;;;2134:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1728:36;;;:::i;3235:106:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;22191:148:23;;;:::i;4877:317:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4877:317:2;;;;;;;;;;;;;;;;;:::i;1915:29:23:-;;;:::i;3086:89:2:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20570:101:23;;;;;;;;;;;;;;;;-1:-1:-1;20570:101:23;-1:-1:-1;;;;;20570:101:23;;:::i;3844:1356::-;;;;;;;;;;;;;;;;-1:-1:-1;3844:1356:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3844:1356:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;5589:215:2;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5589:215:2;;;;;;;;:::i;21267:125:23:-;;;;;;;;;;;;;;;;-1:-1:-1;21267:125:23;;:::i;16933:134::-;;;:::i;2105:23::-;;;:::i;1979:25::-;;;:::i;16709:134::-;;;:::i;3399:125:2:-;;;;;;;;;;;;;;;;-1:-1:-1;3399:125:2;-1:-1:-1;;;;;3399:125:2;;:::i;20820:165:23:-;;;;;;;;;;;;;;;;-1:-1:-1;20820:165:23;;:::i;10253:2472::-;;;;;;;;;;;;;;;;-1:-1:-1;10253:2472:23;;;-1:-1:-1;;;;;10253:2472:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2077:22::-;;;:::i;2370:93:2:-;;;:::i;2204:35:23:-;;;:::i;6291:266:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6291:266:2;;;;;;;;:::i;1950:23:23:-;;;:::i;3727:172:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3727:172:2;;;;;;;;:::i;16008:611:23:-;;;;;;;;;;;;;;;;-1:-1:-1;16008:611:23;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21929:116;;;;;;;;;;;;;;;;-1:-1:-1;21929:116:23;-1:-1:-1;;;;;21929:116:23;;:::i;21469:286::-;;;;;;;;;;;;;;;;-1:-1:-1;21469:286:23;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21469:286:23;;:::i;1883:26::-;;;:::i;15330:436::-;;;:::i;1842:34::-;;;:::i;1806:30::-;;;:::i;7577:1473::-;;;;;;;;;;;;;;;;-1:-1:-1;7577:1473:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7577:1473:23;;:::i;18877:321::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18877:321:23;;-1:-1:-1;18877:321:23;-1:-1:-1;18877:321:23;:::i;20161:220::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20161:220:23;;;;;;;;;;;;;;;;;:::i;3957:149:2:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3957:149:2;;;;;;;;;;:::i;2163:35:23:-;;;:::i;2010:32::-;;;:::i;2049:22::-;;;:::i;19247:367::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19247:367:23;;-1:-1:-1;19247:367:23;-1:-1:-1;19247:367:23;:::i;19694:382::-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;19852:20:::1;::::0;:33:::1;::::0;19877:7;19852:24:::1;:33::i;:::-;19829:20;:56:::0;19918:20:::1;::::0;:33:::1;::::0;19943:7;19918:24:::1;:33::i;:::-;19895:20;:56:::0;19965:11;;19961:49:::1;;19978:32;-1:-1:-1::0;;;;;19978:6:23::1;:19;19998:2:::0;20002:7;19978:19:::1;:32::i;:::-;20024:11:::0;;20020:49:::1;;20037:32;-1:-1:-1::0;;;;;20037:6:23::1;:19;20057:2:::0;20061:7;20037:19:::1;:32::i;:::-;19694:382:::0;;;:::o;2168:89:2:-;2245:5;2238:12;;;;;;;;-1:-1:-1;;2238:12:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2213:13;;2238:12;;2245:5;;2238:12;;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;-1:-1:-1;4399:4:2;4244:166;;;;;:::o;1770:30:23:-;;;:::o;2134:23::-;;;-1:-1:-1;;;2134:23:23;;;;;:::o;1728:36::-;;;:::o;3235:106:2:-;3322:12;;3235:106;:::o;22191:148:23:-;22260:17;;-1:-1:-1;;;;;22260:17:23;22246:10;:31;22238:61;;;;;-1:-1:-1;;;22238:61:23;;;;;;;;;;;;-1:-1:-1;;;22238:61:23;;;;;;;;;;;;;;;22309:10;:23;;-1:-1:-1;;;;;;22309:23:23;22322:10;22309:23;;;22191:148::o;4877:317:2:-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:19:2;;;;;;:11;:19;;;;;;5096:12;:10;:12::i;:::-;-1:-1:-1;;;;;5076:33:2;;;;;;;;;;;;-1:-1:-1;5076:33:2;;;:89;:37;:89::i;:::-;5045:8;:121::i;:::-;-1:-1:-1;5183:4:2;4877:317;;;;;;:::o;1915:29:23:-;;;;:::o;3086:89:2:-;3159:9;;;;3086:89;:::o;20570:101:23:-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;20644:8:::1;:20:::0;;-1:-1:-1;;;;;;20644:20:23::1;-1:-1:-1::0;;;;;20644:20:23;;;::::1;::::0;;;::::1;::::0;;20570:101::o;3844:1356::-;4092:14;4120:15;4149;1688:1:7;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;4197::23;;;;:40:::1;;;4236:1;4219:14;:18;4197:40;4189:85;;;::::0;;-1:-1:-1;;;4189:85:23;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;4292:16:23;::::1;::::0;;::::1;::::0;:39:::1;;-1:-1:-1::0;;;;;;4312:19:23;::::1;4326:4;4312:19;;4292:39;4284:54;;;::::0;;-1:-1:-1;;;4284:54:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4284:54:23;;;;;;;;;;;;;::::1;;4424:9;::::0;4418:27:::1;::::0;-1:-1:-1;;;4424:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;4435:9:23;::::1;::::0;::::1;4418:5;:27::i;:::-;4461:10;::::0;4455:29:::1;::::0;-1:-1:-1;;;4461:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;4473:10:23;::::1;::::0;::::1;4455:5;:29::i;:::-;4586:53;4608:14;4624;4586:21;:53::i;:::-;4557:82:::0;;-1:-1:-1;4557:82:23;-1:-1:-1;4557:82:23;-1:-1:-1;4657:10:23;4649:29:::1;;;::::0;;-1:-1:-1;;;4649:29:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4649:29:23;;;;;;;;;;;;;::::1;;4707:10;4696:7;:21;;4688:44;;;::::0;;-1:-1:-1;;;4688:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4688:44:23;;;;;;;;;;;;;::::1;;4761:10;4750:7;:21;;4742:44;;;::::0;;-1:-1:-1;;;4742:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;4742:44:23;;;;;;;;;;;;;::::1;;4839:11:::0;;4835:76:::1;;4852:59;-1:-1:-1::0;;;;;4852:6:23::1;:23;4876:10;4896:4;4903:7:::0;4852:23:::1;:59::i;:::-;4925:11:::0;;4921:76:::1;;4938:59;-1:-1:-1::0;;;;;4938:6:23::1;:23;4962:10;4982:4;4989:7:::0;4938:23:::1;:59::i;:::-;5044:17;5050:2;5054:6;5044:5;:17::i;:::-;5076:49;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;;;;;5076:49:23;::::1;::::0;5084:10:::1;::::0;5076:49:::1;::::0;;;;;;;::::1;5160:14;;5143:13;:11;:13::i;:::-;:31;;5135:58;;;::::0;;-1:-1:-1;;;5135:58:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;5135:58:23;;;;;;;;;;;;;::::1;;1645:1:7::0;2580:7;:22;;;;3844:1356:23;;;;;;;;;:::o;5589:215:2:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;-1:-1:-1;;;;;5725:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;5725:25:2;;;:34;;;;;;;;;;;:38;:50::i;21267:125:23:-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;21353:14:::1;:32:::0;21267:125::o;16933:134::-;16977:7;17003:57;17039:20;;17003:6;-1:-1:-1;;;;;17003:16:23;;17028:4;17003:31;;;;;;;;;;;;;-1:-1:-1;;;;;17003:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17003:31:23;;:35;:57::i;:::-;16996:64;;16933:134;:::o;2105:23::-;;;-1:-1:-1;;;2105:23:23;;;;;:::o;1979:25::-;;;-1:-1:-1;;;;;1979:25:23;;:::o;16709:134::-;16753:7;16779:57;16815:20;;16779:6;-1:-1:-1;;;;;16779:16:23;;16804:4;16779:31;;;;;;;;;;;;;-1:-1:-1;;;;;16779:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;3399:125:2;-1:-1:-1;;;;;3499:18:2;;3473:7;3499:18;;;;;;;;;;;3399:125;;;;:::o;20820:165:23:-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;20923:3:::1;20908:12;:18;20900:42;;;::::0;;-1:-1:-1;;;20900:42:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;20900:42:23;;;;;;;;;;;;;::::1;;20952:11;:26:::0;20820:165::o;10253:2472::-;1688:1:7;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;10546:8:23::1;::::0;-1:-1:-1;;;;;10546:8:23::1;10532:10;:22;10524:43;;;::::0;;-1:-1:-1;;;10524:43:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10524:43:23;;;;;;;;;;;;;::::1;;10577:35;10589:10;10601;10577:11;:35::i;:::-;10622:33;10634:9;10645;10622:11;:33::i;:::-;10665;10677:9;10688;10665:11;:33::i;:::-;10712:10;10736:4;-1:-1:-1::0;;;;;10736:10:23::1;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;10736:12:23::1;;::::0;;-1:-1:-1;10766:17:23::1;::::0;;::::1;::::0;;;::::1;;;10758:38;;;::::0;;-1:-1:-1;;;10758:38:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10758:38:23;;;;;;;;;;;;;::::1;;10826:4;10814:16;;:9;:16;;;10806:37;;;::::0;;-1:-1:-1;;;10806:37:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10806:37:23;;;;;;;;;;;;;::::1;;11020:9;::::0;10977:21:::1;::::0;11010:31:::1;::::0;-1:-1:-1;;;11020:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;11031:9:23;::::1;::::0;::::1;11010;:31::i;:::-;-1:-1:-1::0;;11100:10:23::1;::::0;10976:65;;-1:-1:-1;11056:22:23::1;::::0;11090:33:::1;::::0;-1:-1:-1;;;;11100:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;;11112:10:23;;::::1;::::0;::::1;11090:9;:33::i;:::-;-1:-1:-1::0;;11153:9:23::1;::::0;11055:68;;-1:-1:-1;11137:52:23::1;::::0;-1:-1:-1;;;11153:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;;11164:9:23;;::::1;::::0;::::1;::::0;-1:-1:-1;11175:13:23;11137:15:::1;:52::i;:::-;-1:-1:-1::0;;11219:10:23::1;::::0;11203:55:::1;::::0;-1:-1:-1;;;;11219:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;;11231:10:23;;::::1;::::0;::::1;11243:14:::0;11203:15:::1;:55::i;:::-;;;;;2436:1:7;;11334:16:23;11353:13;:11;:13::i;:::-;11334:32;;11376:16;11395:13;:11;:13::i;:::-;11376:32;;11423:49;11432:4;11438:8;11448;11458:13;:11;:13::i;:::-;11423:49;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;::::1;11487:15:::0;;11483:322:::1;;-1:-1:-1::0;;;;;11518:4:23::1;:9;;11553:4;11589:1;11576:14:::0;::::1;::::0;11608:41:::1;;11639:10;11638:11;;11608:41;;;11625:10;11608:41;11667:17;11518:200;;;;;;;;;;;;;-1:-1:-1::0;;;;;11518:200:23::1;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;11518:200:23::1;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;11743:13:23::1;::::0;-1:-1:-1;11743:11:23::1;:13::i;:::-;11732:24;;11781:13;:11;:13::i;:::-;11770:24;;11483:322;11854:17;11874:64;11895:10;11907;11919:8;11929;11874:20;:64::i;:::-;11854:84;;11948:49;11963:10;11975;11987:9;11948:14;:49::i;:::-;12008:9;12007:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;12007:49:23::1;-1:-1:-1::0;;;;12007:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;12007:49:23::1;-1:-1:-1::0;;;;12007:49:23;;::::1;::::0;;;::::1;;;::::0;;12078:13:::1;:11;:13::i;:::-;12067:24;;12112:13;:11;:13::i;:::-;12101:24;;12214:20;12237:62;12258:9;12269;12280:8;12290;12237:20;:62::i;:::-;12214:85;;12309:20;12332:62;12353:9;12364;12375:8;12385;12332:20;:62::i;:::-;12309:85;;12423:12;-1:-1:-1::0;;;;;12408:27:23::1;:12;-1:-1:-1::0;;;;;12408:27:23::1;;12404:315;;;12451:50;12466:9;12477;12488:12;12451:14;:50::i;:::-;12516:10;12515:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;12515:49:23::1;-1:-1:-1::0;;;;12515:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;12515:49:23::1;-1:-1:-1::0;;;;;12515:49:23;;::::1;::::0;;;::::1;;;::::0;;12404:315:::1;;;12595:50;12610:9;12621;12632:12;12595:14;:50::i;:::-;12660:10;12659:49:::0;;::::1;::::0;;::::1;;::::0;;::::1;-1:-1:-1::0;;;12659:49:23::1;-1:-1:-1::0;;;;12659:49:23;;;::::1;::::0;;::::1;-1:-1:-1::0;;;12659:49:23::1;-1:-1:-1::0;;;;;12659:49:23;;::::1;::::0;;;::::1;;;::::0;;12404:315:::1;-1:-1:-1::0;;1645:1:7;2580:7;:22;-1:-1:-1;;;;;;;;;;;;10253:2472:23:o;2077:22::-;;;-1:-1:-1;;;2077:22:23;;;;;:::o;2370:93:2:-;2449:7;2442:14;;;;;;;;-1:-1:-1;;2442:14:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:13;;2442:14;;2449:7;;2442:14;;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;2204:35:23;;;;:::o;6291:266:2:-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;-1:-1:-1;;;;;6432:25:2;;;;;;;;;;;;;;;;;-1:-1:-1;6432:25:2;;;:34;;;;;;;;;;;:96;:38;:96::i;1950:23:23:-;;;-1:-1:-1;;;;;1950:23:23;;:::o;3727:172:2:-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;16008:611:23:-;16115:15;16132;16164:17;16187:19;16208;16243:31;16253:9;16264;16243;:31::i;:::-;16163:111;;;;;;;;16305:53;16326:9;16337;16348;16305:20;:53::i;:::-;16442:11;;16284:74;;-1:-1:-1;16284:74:23;-1:-1:-1;16403:19:23;;16425:29;;16433:3;;16425:16;:29::i;:::-;16403:51;-1:-1:-1;16474:59:23;16486:46;16528:3;16486:37;-1:-1:-1;;;;;16486:20:23;;16403:51;16486:24;:37::i;:::-;:41;;:46::i;:::-;16474:7;;:11;:59::i;:::-;16464:69;-1:-1:-1;16553:59:23;16565:46;16607:3;16565:37;-1:-1:-1;;;;;16565:20:23;;16590:11;16565:24;:37::i;:46::-;16553:7;;:11;:59::i;:::-;16543:69;;16008:611;;;;;;;;;:::o;21929:116::-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;22007:17:::1;:31:::0;;-1:-1:-1;;;;;;22007:31:23::1;-1:-1:-1::0;;;;;22007:31:23;;;::::1;::::0;;;::::1;::::0;;21929:116::o;21469:286::-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;21609:42:::1;::::0;;-1:-1:-1;;;21609:42:23;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;21609:42:23;::::1;::::0;;;;;;-1:-1:-1;;;;;21609:4:23::1;:9;::::0;::::1;::::0;:42;;;;;;;;;;;-1:-1:-1;21609:9:23;:42;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;21609:42:23;21661:87;;-1:-1:-1;;;21661:87:23;;21682:4:::1;21661:87;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;-1:-1:-1;;;;;21661:87:23;;;;;;;;;;;;-1:-1:-1;;;;;21661:4:23::1;:12;::::0;::::1;::::0;:87;;;;;;;;;;;-1:-1:-1;21661:12:23;:87;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;;;21469:286:23:o;1883:26::-;;;;:::o;15330:436::-;15493:9;;15387:14;;;;;;;;15474:40;;-1:-1:-1;;;15493:9:23;;;;;;;-1:-1:-1;;;15504:9:23;;;;15474:18;:40::i;:::-;15602:10;;15429:85;;-1:-1:-1;15429:85:23;-1:-1:-1;15525:20:23;;;;15583:42;;-1:-1:-1;;;15602:10:23;;;;;;;-1:-1:-1;;;15614:10:23;;;;15583:18;:42::i;:::-;15524:101;;;;15644:48;15679:12;15644:30;15662:11;15644:13;:11;:13::i;:::-;:17;;:30::i;:48::-;15635:57;;15711:48;15746:12;15711:30;15729:11;15711:13;:11;:13::i;:48::-;15702:57;;15330:436;;;;;;:::o;1842:34::-;;;:::o;1806:30::-;;;:::o;7577:1473::-;7741:15;7758;1688:1:7;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;1688:1;2407:7;:18;7793:10:23;7785:29:::1;;;::::0;;-1:-1:-1;;;7785:29:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7785:29:23;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;7832:16:23;::::1;::::0;;::::1;::::0;:39:::1;;-1:-1:-1::0;;;;;;7852:19:23;::::1;7866:4;7852:19;;7832:39;7824:54;;;::::0;;-1:-1:-1;;;7824:54:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7824:54:23;;;;;;;;;;;;;::::1;;7888:19;7910:13;:11;:13::i;:::-;7888:35;;7957:25;7963:10;7975:6;7957:5;:25::i;:::-;8060:21;8084:42;8114:11;8084:25;8102:6;8084:13;:11;:13::i;:::-;:17:::0;::::1;:25::i;:42::-;8060:66;;8136:21;8160:42;8190:11;8160:25;8178:6;8160:13;:11;:13::i;:42::-;8352:9;::::0;8136:66;;-1:-1:-1;8276:19:23::1;::::0;;;8332:62:::1;::::0;-1:-1:-1;;;8352:9:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;8363:9:23;::::1;::::0;::::1;8374:6:::0;8382:11;8332:19:::1;:62::i;:::-;8483:10;::::0;8275:119;;-1:-1:-1;8275:119:23;-1:-1:-1;8405:20:23::1;::::0;;;8463:64:::1;::::0;-1:-1:-1;;;8483:10:23;::::1;;::::0;;::::1;::::0;-1:-1:-1;;;8495:10:23;::::1;::::0;::::1;8507:6:::0;8515:11;8463:19:::1;:64::i;:::-;8404:123:::0;;-1:-1:-1;8404:123:23;-1:-1:-1;8598:48:23::1;8404:123:::0;8598:30:::1;:13:::0;8616:11;8598:17:::1;:30::i;:48::-;8588:58:::0;-1:-1:-1;8666:48:23::1;8701:12:::0;8666:30:::1;:13:::0;8684:11;8666:17:::1;:30::i;:48::-;8656:58;;8743:10;8732:7;:21;;8724:44;;;::::0;;-1:-1:-1;;;8724:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8724:44:23;;;;;;;;;;;;;::::1;;8797:10;8786:7;:21;;8778:44;;;::::0;;-1:-1:-1;;;8778:44:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8778:44:23;;;;;;;;;;;;;::::1;;8873:11:::0;;8869:49:::1;;8886:32;-1:-1:-1::0;;;;;8886:6:23::1;:19;8906:2:::0;8910:7;8886:19:::1;:32::i;:::-;8932:11:::0;;8928:49:::1;;8945:32;-1:-1:-1::0;;;;;8945:6:23::1;:19;8965:2:::0;8969:7;8945:19:::1;:32::i;:::-;8993:50;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;-1:-1:-1;;;;;8993:50:23;::::1;::::0;9002:10:::1;::::0;8993:50:::1;::::0;;;;;;;::::1;2436:1:7;;;;;;;1645::::0;2580:7;:22;;;;7577:1473:23;;;;;;;:::o;18877:321::-;19029:10;-1:-1:-1;;;;;19051:4:23;19029:27;;19021:36;;;;;;19071:11;;19067:57;;19084:40;-1:-1:-1;;;;;19084:6:23;:19;19104:10;19116:7;19084:19;:40::i;:::-;19138:11;;19134:57;;19151:40;-1:-1:-1;;;;;19151:6:23;:19;19171:10;19183:7;19151:19;:40::i;:::-;18877:321;;;;:::o;20161:220::-;22401:10;;-1:-1:-1;;;;;22401:10:23;22387;:24;22379:47;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;-1:-1:-1;;;22379:47:23;;;;;;;;;;;;;;;20299:6:::1;-1:-1:-1::0;;;;;20290:15:23::1;:5;-1:-1:-1::0;;;;;20290:15:23::1;;;:34;;;;;20318:6;-1:-1:-1::0;;;;;20309:15:23::1;:5;-1:-1:-1::0;;;;;20309:15:23::1;;;20290:34;20282:52;;;::::0;;-1:-1:-1;;;20282:52:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;20282:52:23;;;;;;;;;;;;;::::1;;20344:30;-1:-1:-1::0;;;;;20344:18:23;::::1;20363:2:::0;20367:6;20344:18:::1;:30::i;3957:149:2:-:0;-1:-1:-1;;;;;4072:18:2;;;4046:7;4072:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3957:149::o;2163:35:23:-;;;;:::o;2010:32::-;;;-1:-1:-1;;;;;2010:32:23;;:::o;2049:22::-;;;-1:-1:-1;;;2049:22:23;;;;;:::o;19247:367::-;19407:10;-1:-1:-1;;;;;19429:4:23;19407:27;;19399:36;;;;;;19464:1;19449:12;:16;19445:76;;;19467:54;-1:-1:-1;;;;;19467:6:23;:19;19487:10;19507:12;19467:19;:54::i;:::-;19550:1;19535:12;:16;19531:76;;;19553:54;-1:-1:-1;;;;;19553:6:23;:19;19573:10;19593:12;19553:19;:54::i;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:1;;;3136:155::o;704:175:4:-;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:4;-1:-1:-1;;;813:58:4;;;786:86;;806:5;;786:19;:86::i;598:104:6:-;685:10;598:104;:::o;9355:340:2:-;-1:-1:-1;;;;;9456:19:2;;9448:68;;;;-1:-1:-1;;;9448:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9534:21:2;;9526:68;;;;-1:-1:-1;;;9526:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9605:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9656:32;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;-1:-1:-1;;;;;7136:20:2;;7128:70;;;;-1:-1:-1;;;7128:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7216:23:2;;7208:71;;;;-1:-1:-1;;;7208:71:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7368:17:2;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7348:17:2;;;:9;:17;;;;;;;;;;;:91;;;;7472:20;;;;;;;:32;;7497:6;7472:24;:32::i;:::-;-1:-1:-1;;;;;7449:20:2;;;:9;:20;;;;;;;;;;;;:55;;;;7519:35;;;;;;;7449:20;;7519:35;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:1;;;5432:163::o;5375:223:23:-;5444:17;5473:31;5483:9;5494;5473;:31::i;:::-;5443:61;;;;;;5530:1;5518:9;-1:-1:-1;;;;;5518:13:23;;5514:78;;;5547:4;-1:-1:-1;;;;;5547:9:23;;5557;5568;5579:1;5547:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5821:1313;5960:14;5988:15;6017;6057:19;6079:13;:11;:13::i;:::-;6057:35;;6103:14;6119;6137:17;:15;:17::i;:::-;6102:52;;;;6225:11;6240:1;6225:16;:30;;;;6254:1;6245:6;:10;6225:30;:44;;;;6268:1;6259:6;:10;6225:44;6218:52;;;;6285:16;6281:847;;6390:14;6380:24;;6428:14;6418:24;;6465:26;6474:7;6483;6465:8;:26::i;:::-;6456:35;;6281:847;;;6512:11;6508:620;;6549:14;;-1:-1:-1;6586:36:23;6615:6;6586:24;6549:14;6598:11;6586;:24::i;6508:620::-;6643:11;6639:489;;6680:14;;-1:-1:-1;6717:36:23;6746:6;6717:24;6680:14;6729:11;6717;:24::i;6639:489::-;6784:13;6800:64;6809:26;:14;6828:6;6809:18;:26::i;:::-;6837;:14;6856:6;6837:18;:26::i;:::-;6800:8;:64::i;:::-;6784:80;;6894:1;6886:5;:9;6878:27;;;;;-1:-1:-1;;;6878:27:23;;;;;;;;;;;;-1:-1:-1;;;6878:27:23;;;;;;;;;;;;;;;6962:31;6991:1;6962:24;6979:6;6962:12;:5;6991:1;6962:9;:12::i;:31::-;6952:41;-1:-1:-1;7017:31:23;7046:1;7017:24;7034:6;7017:12;:5;7046:1;7017:9;:12::i;:31::-;7007:41;-1:-1:-1;7071:46:23;7110:6;7071:34;7098:6;7071:34;:5;7081:11;7071:9;:22::i;:46::-;7062:55;;6639:489;;5821:1313;;;;;;;;:::o;885:203:4:-;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;985:19;:96::i;7832:370:2:-;-1:-1:-1;;;;;7915:21:2;;7907:65;;;;;-1:-1:-1;;;7907:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:12;;:24;;8075:6;8058:16;:24::i;:::-;8043:12;:39;-1:-1:-1;;;;;8113:18:2;;:9;:18;;;;;;;;;;;:30;;8136:6;8113:22;:30::i;:::-;-1:-1:-1;;;;;8092:18:2;;:9;:18;;;;;;;;;;;:51;;;;8158:37;;;;;;;8092:18;;:9;;8158:37;;;;;;;;;;7832:370;;:::o;2690:175:1:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;12731:474:23;12831:11;12860:21;;;;;;;;;12852:55;;;;;-1:-1:-1;;;12852:55:23;;;;;;;;;;;;-1:-1:-1;;;12852:55:23;;;;;;;;;;;;;;;-1:-1:-1;;12925:30:23;;;;;;12917:60;;;;;-1:-1:-1;;;12917:60:23;;;;;;;;;;;;-1:-1:-1;;;12917:60:23;;;;;;;;;;;;;;;637:9:19;12995:30:23;;;;;;12987:61;;;;;-1:-1:-1;;;12987:61:23;;;;;;;;;;;;-1:-1:-1;;;12987:61:23;;;;;;;;;;;;;;;13078:12;13066:24;;:9;:24;;;;;;;;:29;;;13058:65;;;;;-1:-1:-1;;;13058:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;13153:12;13141:24;;:9;:24;;;;;;;;:29;;;13133:65;;;;;-1:-1:-1;;;13133:65:23;;;;;;;;;;;;;;;;;;;;;;;;;;;17131:358;17244:7;17265;17286;17307;17328;17360:19;17382:56;17410:4;17417:9;17428;17382:19;:56::i;:::-;17360:78;;17455:4;-1:-1:-1;;;;;17455:14:23;;17470:11;17455:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17455:27:23;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17455:27:23;-1:-1:-1;17455:27:23;;-1:-1:-1;17455:27:23;-1:-1:-1;17131:358:23;-1:-1:-1;;;;17131:358:23:o;13303:1501::-;13458:15;;;;-1:-1:-1;;;;;13599:13:23;;;13595:107;;13649:42;;;-1:-1:-1;;;13649:42:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13649:42:23;;;;;;;;-1:-1:-1;;;;;13649:4:23;:9;;;;:42;;;;;;;;;;;-1:-1:-1;13649:9:23;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13649:42:23;;;;;;;;;-1:-1:-1;13649:42:23;-1:-1:-1;13595:107:23;13820:181;;;-1:-1:-1;;;13820:181:23;;13858:4;13820:181;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13820:181:23;;;;;;;;;;;;13770:16;;;;-1:-1:-1;;;;;13820:4:23;:12;;;;:181;;;;;;;;;;;;;13770:16;13820:12;:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13820:181:23;;;;;;;-1:-1:-1;;;;;13769:232:23;;;;-1:-1:-1;13769:232:23;;-1:-1:-1;14027:21:23;13769:232;14040:7;14027:12;:21::i;:::-;14012:36;-1:-1:-1;14073:21:23;:8;14086:7;14073:12;:21::i;:::-;14234:11;;14058:36;;-1:-1:-1;14104:23:23;;;;14259:16;;14255:455;;14309:39;14344:3;14309:30;:12;14326;14309:16;:30::i;:39::-;14291:57;-1:-1:-1;14380:39:23;14415:3;14380:30;:12;14397;14380:16;:30::i;:39::-;14362:57;-1:-1:-1;14448:33:23;:12;14465:15;14448:16;:33::i;:::-;14433:48;-1:-1:-1;14510:33:23;:12;14527:15;14510:16;:33::i;:::-;14580:20;;14495:48;;-1:-1:-1;14580:41:23;;14605:15;14580:24;:41::i;:::-;14557:20;:64;14658:20;;:41;;14683:15;14658:24;:41::i;:::-;14635:20;:64;14255:455;14724:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13303:1501;;;;;;;;;;;;:::o;18118:508::-;18277:7;18297:20;18333:4;-1:-1:-1;;;;;18333:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18333:12:23;;-1:-1:-1;18374:245:23;18333:12;18461:38;18489:9;18461:27;:38::i;:::-;18517;18545:9;18517:27;:38::i;:::-;18573:7;18598;18374:39;:245::i;:::-;18355:264;18118:508;-1:-1:-1;;;;;;18118:508:23:o;14874:237::-;-1:-1:-1;;;;;15004:13:23;;;15000:105;;15033:61;;;-1:-1:-1;;;15033:61:23;;15051:4;15033:61;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15033:61:23;;;;;;;;;;;-1:-1:-1;15033:61:23;;;;;;;;-1:-1:-1;;;;;15033:4:23;:9;;;;:61;;;;;;;;;;;;;;;;:9;:61;;;;;;;;;;17568:471;17704:7;17713;17733:20;17769:4;-1:-1:-1;;;;;17769:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17769:12:23;;-1:-1:-1;17810:222:23;17769:12;17897:38;17925:9;17897:27;:38::i;:::-;17953;17981:9;17953:27;:38::i;:::-;18009:9;17810:39;:222::i;:::-;17791:241;;;;;17568:471;;;;;;:::o;3538:215:1:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:1;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4217:150;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:1:o;8522:410:2:-;-1:-1:-1;;;;;8605:21:2;;8597:67;;;;-1:-1:-1;;;8597:67:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8756:18:2;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8735:18:2;;:9;:18;;;;;;;;;;:89;8849:12;;:24;;8866:6;8849:16;:24::i;:::-;8834:12;:39;8888:37;;;;;;;;8914:1;;-1:-1:-1;;;;;8888:37:2;;;;;;;;;;;;8522:410;;:::o;9128:728:23:-;9284:15;9301;9329:22;9363:31;9373:9;9384;9363;:31::i;:::-;9328:66;;;;;;9404:17;9424:52;9464:11;9424:35;9452:6;9432:14;-1:-1:-1;;;;;9424:23:23;:27;;:35;;;;:::i;:52::-;9404:72;-1:-1:-1;9491:13:23;;9487:363;;9521:15;9538;9555:13;9570;9603:60;9619:9;9630;9641:21;9652:9;9641:10;:21::i;:::-;9603:15;:60::i;:::-;9520:143;;-1:-1:-1;9520:143:23;;-1:-1:-1;9520:143:23;-1:-1:-1;9520:143:23;-1:-1:-1;9721:47:23;9733:34;9755:11;9733:17;9520:143;9743:6;9733:9;:17::i;:34::-;9721:7;;:11;:47::i;:::-;9711:57;-1:-1:-1;9792:47:23;9804:34;9826:11;9804:17;:5;9814:6;9804:9;:17::i;:34::-;9792:7;;:11;:47::i;:::-;9782:57;;9487:363;;;;;9128:728;;;;;;;;;:::o;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:105:0;281:7;312:1;307;:6;;:14;;320:1;307:14;;;-1:-1:-1;316:1:0;;300:21;-1:-1:-1;223:105:0:o;399:104::-;457:7;487:1;483;:5;:13;;495:1;483:13;;162:208:21;317:45;;;;;;;;-1:-1:-1;;317:45:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;307:56;;;;;;162:208::o;1355:2580:19:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;1468:57;1450:75;-1:-1:-1;637:9:19;1543:28;;;1535:42;;;;;-1:-1:-1;;;1535:42:19;;;;;;;;;;;;-1:-1:-1;;;1535:42:19;;;;;;;;;;;;;;;1588:13;1614:3;1604:13;;:93;;-1:-1:-1;;;1604:93:19;;;1625:34;1604:93;1588:109;;;-1:-1:-1;1721:3:19;1711:13;;:18;1707:83;;1748:34;1740:42;1787:3;1739:51;1707:83;1814:3;1804:13;;:18;1800:83;;1841:34;1833:42;1880:3;1832:51;1800:83;1907:3;1897:13;;:18;1893:83;;1934:34;1926:42;1973:3;1925:51;1893:83;2000:4;1990:14;;:19;1986:84;;2028:34;2020:42;2067:3;2019:51;1986:84;2094:4;2084:14;;:19;2080:84;;2122:34;2114:42;2161:3;2113:51;2080:84;2188:4;2178:14;;:19;2174:84;;2216:34;2208:42;2255:3;2207:51;2174:84;2282:4;2272:14;;:19;2268:84;;2310:34;2302:42;2349:3;2301:51;2268:84;2376:5;2366:15;;:20;2362:85;;2405:34;2397:42;2444:3;2396:51;2362:85;2471:5;2461:15;;:20;2457:85;;2500:34;2492:42;2539:3;2491:51;2457:85;2566:5;2556:15;;:20;2552:85;;2595:34;2587:42;2634:3;2586:51;2552:85;2661:5;2651:15;;:20;2647:85;;2690:34;2682:42;2729:3;2681:51;2647:85;2756:6;2746:16;;:21;2742:86;;2786:34;2778:42;2825:3;2777:51;2742:86;2852:6;2842:16;;:21;2838:86;;2882:34;2874:42;2921:3;2873:51;2838:86;2948:6;2938:16;;:21;2934:86;;2978:34;2970:42;3017:3;2969:51;2934:86;3044:6;3034:16;;:21;3030:86;;3074:34;3066:42;3113:3;3065:51;3030:86;3140:7;3130:17;;:22;3126:86;;3171:33;3163:41;3209:3;3162:50;3126:86;3236:7;3226:17;;:22;3222:85;;3267:32;3259:40;3304:3;3258:49;3222:85;3331:7;3321:17;;:22;3317:83;;3362:30;3354:38;3397:3;3353:47;3317:83;3424:7;3414:17;;:22;3410:78;;3455:25;3447:33;3485:3;3446:42;3410:78;3510:1;3503:4;:8;;;3499:47;;;3541:5;-1:-1:-1;;3521:25:19;;;;;;3513:33;;3499:47;3905:7;3896:5;:17;:22;:30;;3925:1;3896:30;;;3921:1;3896:30;3879:48;;3889:2;3880:5;:11;;3879:48;3856:72;;1355:2580;;;;;:::o;2982:901:20:-;3185:17;3234:13;-1:-1:-1;;;;;3218:29:20;:13;-1:-1:-1;;;;;3218:29:20;;3214:98;;;3283:13;;3298;3214:98;3343:13;-1:-1:-1;;;;;3327:29:20;:12;-1:-1:-1;;;;;3327:29:20;;3323:554;;3384:61;3407:13;3422;3437:7;3384:22;:61::i;:::-;3372:73;;3323:554;;;3481:13;-1:-1:-1;;;;;3466:28:20;:12;-1:-1:-1;;;;;3466:28:20;;3462:415;;;3510:18;3531:60;3554:12;3568:13;3583:7;3531:22;:60::i;:::-;3510:81;;3605:18;3626:60;3649:13;3664:12;3678:7;3626:22;:60::i;:::-;3605:81;;3726:10;-1:-1:-1;;;;;3713:23:20;:10;-1:-1:-1;;;;;3713:23:20;;:49;;3752:10;3713:49;;;3739:10;3713:49;3701:61;;3462:415;;;;;3805:61;3828:13;3843;3858:7;3805:22;:61::i;:::-;3793:73;;3462:415;2982:901;;;;;;;:::o;6013:799::-;6193:15;6210;6257:13;-1:-1:-1;;;;;6241:29:20;:13;-1:-1:-1;;;;;6241:29:20;;6237:98;;;6306:13;;6321;6237:98;6366:13;-1:-1:-1;;;;;6350:29:20;:12;-1:-1:-1;;;;;6350:29:20;;6346:460;;6405:63;6428:13;6443;6458:9;6405:22;:63::i;:::-;6395:73;;6346:460;;;6504:13;-1:-1:-1;;;;;6489:28:20;:12;-1:-1:-1;;;;;6489:28:20;;6485:321;;;6543:62;6566:12;6580:13;6595:9;6543:22;:62::i;:::-;6533:72;;6629:62;6652:13;6667:12;6681:9;6629:22;:62::i;:::-;6619:72;;6485:321;;;6732:63;6755:13;6770;6785:9;6732:22;:63::i;:::-;6722:73;;6485:321;6013:799;;;;;;;:::o;18691:137:23:-;18745:7;-1:-1:-1;;;;;18771:22:23;;;18764:30;;;;-1:-1:-1;18819:1:23;18691:137::o;3581:193:5:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;3581:193;-1:-1:-1;;;;3581:193:5:o;1085:475:20:-;1233:17;1282:13;-1:-1:-1;;;;;1266:29:20;:13;-1:-1:-1;;;;;1266:29:20;;1262:98;;;1331:13;;1346;1262:98;1370:20;1393:63;1409:13;-1:-1:-1;;;;;1393:63:20;1424:13;-1:-1:-1;;;;;1393:63:20;-1:-1:-1;;;1393:15:20;:63::i;:::-;1370:86;;1473:80;1483:69;1499:7;1508:12;1538:13;1522;:29;-1:-1:-1;;;;;1483:69:20;:15;:69::i;:::-;1473:9;:80::i;1999:383::-;2147:17;2196:13;-1:-1:-1;;;;;2180:29:20;:13;-1:-1:-1;;;;;2180:29:20;;2176:98;;;2245:13;;2260;2176:98;2291:84;2301:73;2317:7;-1:-1:-1;;;2360:13:20;2344;:29;-1:-1:-1;;;;;2301:73:20;:15;:73::i;4241:498::-;4391:15;4438:13;-1:-1:-1;;;;;4422:29:20;:13;-1:-1:-1;;;;;4422:29:20;;4418:98;;;4487:13;;4502;4418:98;4719:13;-1:-1:-1;;;;;4546:186:20;:170;309:2:17;4579:45:20;;4587:9;-1:-1:-1;;;;;4579:18:20;:45;;4658:13;4642;:29;-1:-1:-1;;;;;4546:170:20;4689:13;-1:-1:-1;;;;;4546:170:20;:15;:170::i;:::-;:186;;;;;;;4241:498;-1:-1:-1;;;;4241:498:20:o;5097:375::-;5247:15;5294:13;-1:-1:-1;;;;;5278:29:20;:13;-1:-1:-1;;;;;5278:29:20;;5274:98;;;5343:13;;5358;5274:98;5390:75;5406:9;-1:-1:-1;;;;;5390:75:20;5433:13;5417;:29;-1:-1:-1;;;;;5390:75:20;-1:-1:-1;;;5390:15:20;:75::i;4608:523:5:-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:5;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:5:o;742:3776:18:-;854:14;;;-1:-1:-1;;1361:1:18;1358;1351:20;1393:9;;;;-1:-1:-1;1444:13:18;;;1428:14;;;;1424:34;;-1:-1:-1;1540:10:18;1536:179;;1588:1;1574:11;:15;1566:24;;;;;;-1:-1:-1;1641:23:18;;;;-1:-1:-1;1691:13:18;;1536:179;1842:5;1828:11;:19;1820:28;;;;;;2125:17;2201:11;2198:1;2195;2188:25;2553:12;2568;;;:26;;2688:22;;;;;3491:1;3472;:15;;3471:21;;3718:17;;;3714:21;;3707:28;3776:17;;;3772:21;;3765:28;3835:17;;;3831:21;;3824:28;3894:17;;;3890:21;;3883:28;3953:17;;;3949:21;;3942:28;4013:17;;;4009:21;;;4002:28;3060:12;;;;3056:23;;;3081:1;3052:31;2330:20;;;2319:32;;;3111:12;;;;2373:21;;;;2816:16;;;;3102:21;;;;4477:11;;;;;-1:-1:-1;;742:3776:18;;;;;:::o;507:110:20:-;608:1;-1:-1:-1;;;;;588:21:20;;;;580:30;;;;;726:413:5;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:5;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:5;;;;;;;;;;;;;;;;;7772:12;;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "acceptGovernance()": {
        "notice": "`setGovernance()` should be called by the existing governance address prior to calling this function."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "collectProtocol(uint256,uint256,address)": {
        "notice": "Used to collect accumulated protocol fees."
      },
      "constructor": {
        "details": "After deploying, strategy needs to be set via `setStrategy()`",
        "params": {
          "_maxTotalSupply": "Cap on total supply",
          "_pool": "Underlying Uniswap V3 pool",
          "_protocolFee": "Protocol fee expressed as multiple of 1e-6"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256,uint256,uint256,uint256,address)": {
        "details": "These tokens sit in the vault and are not used for liquidity on Uniswap until the next rebalance. Also note it's not necessary to check if user manipulated price to deposit cheaper, as the value of range orders can only by manipulated higher.",
        "notice": "Deposits tokens in proportion to the vault's current holdings.",
        "params": {
          "amount0Desired": "Max amount of token0 to deposit",
          "amount0Min": "Revert if resulting `amount0` is less than this",
          "amount1Desired": "Max amount of token1 to deposit",
          "amount1Min": "Revert if resulting `amount1` is less than this",
          "to": "Recipient of shares"
        },
        "returns": {
          "amount0": "Amount of token0 deposited",
          "amount1": "Amount of token1 deposited",
          "shares": "Number of shares minted"
        }
      },
      "emergencyBurn(int24,int24,uint128)": {
        "notice": "Removes liquidity in case of emergency."
      },
      "getBalance0()": {
        "notice": "Balance of token0 in vault not used in any position."
      },
      "getBalance1()": {
        "notice": "Balance of token1 in vault not used in any position."
      },
      "getPositionAmounts(int24,int24)": {
        "notice": "Amounts of token0 and token1 held in vault's position. Includes owed fees but excludes the proportion of fees that will be paid to the protocol. Doesn't include fees accrued since last poke."
      },
      "getTotalAmounts()": {
        "notice": "Calculates the vault's total holdings of token0 and token1 - in other words, how much of each token the vault would hold if it withdrew all its liquidity from Uniswap."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "rebalance(int256,uint160,int24,int24,int24,int24,int24,int24)": {
        "details": "Two orders are placed - a base order and a limit order. The base order is placed first with as much liquidity as possible. This order should use up all of one token, leaving only the other one. This excess amount is then placed as a single-sided bid or ask order.",
        "notice": "Updates vault's positions. Can only be called by the strategy."
      },
      "setGovernance(address)": {
        "notice": "Governance address is not updated until the new governance address has called `acceptGovernance()` to accept this responsibility."
      },
      "setMaxTotalSupply(uint256)": {
        "notice": "Used to change deposit cap for a guarded launch or to ensure vault doesn't grow too large relative to the pool. Cap is on total supply rather than amounts of token0 and token1 as those amounts fluctuate naturally over time."
      },
      "setProtocolFee(uint256)": {
        "notice": "Used to change the protocol fee charged on pool fees earned from Uniswap, expressed as multiple of 1e-6."
      },
      "setStrategy(address)": {
        "notice": "Used to set the strategy contract that determines the position ranges and calls rebalance(). Must be called after this vault is deployed."
      },
      "sweep(address,uint256,address)": {
        "notice": "Removes tokens accidentally sent to this vault."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "uniswapV3MintCallback(uint256,uint256,bytes)": {
        "details": "Callback for Uniswap V3 pool."
      },
      "uniswapV3SwapCallback(int256,int256,bytes)": {
        "details": "Callback for Uniswap V3 pool."
      },
      "withdraw(uint256,uint256,uint256,address)": {
        "notice": "Withdraws tokens in proportion to the vault's holdings.",
        "params": {
          "amount0Min": "Revert if resulting `amount0` is smaller than this",
          "amount1Min": "Revert if resulting `amount1` is smaller than this",
          "shares": "Shares burned by sender",
          "to": "Recipient of tokens"
        },
        "returns": {
          "amount0": "Amount of token0 sent to recipient",
          "amount1": "Amount of token1 sent to recipient"
        }
      }
    },
    "notice": "A vault that provides liquidity on Uniswap V3.",
    "title": "Alpha Vault",
    "version": 1
  },
  "offset": [
    960,
    22446
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87E5E083 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xC4A7761E GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDC2C256F GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDC2C256F EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xEAE989A2 EQ PUSH2 0x809 JUMPI DUP1 PUSH4 0xF39C38A0 EQ PUSH2 0x811 JUMPI DUP1 PUSH4 0xFA082743 EQ PUSH2 0x819 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x821 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xC4A7761E EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x6E1 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x6E9 JUMPI DUP1 PUSH4 0xD331BEF7 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0xD3487997 EQ PUSH2 0x729 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0xA8C62E76 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0xA8C62E76 EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xA91EF6EB EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xAB033EA9 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0xABBFFCB9 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0xB0E21E8A EQ PUSH2 0x6D1 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x87E5E083 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x888A9134 EQ PUSH2 0x5B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xA00FA77F EQ PUSH2 0x5C6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x5CE JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x41AEC538 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x41AEC538 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x51E87AF7 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x629D9405 EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x787DCE3D EQ PUSH2 0x539 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x33A100CA EQ PUSH2 0x428 JUMPI DUP1 PUSH4 0x365D0ED7 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x3F3E4C11 EQ PUSH2 0x4D6 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x16F0115B GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0x238EFCBC EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x2AB4D052 EQ PUSH2 0x402 JUMPI PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH4 0x430C130 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xF35BCAC EQ PUSH2 0x383 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x89D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x311 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH2 0xA5A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x367 PUSH2 0xA6A JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH2 0xA94 JUMP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xAFB JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x412 PUSH2 0xB89 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB92 JUMP JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF5B JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xFA9 JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0xFFA JUMP JUMPDEST PUSH2 0x38B PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x529 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113A JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1159 JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD DUP3 SIGNEXTEND SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD DUP2 SIGNEXTEND SWAP2 PUSH1 0xA0 DUP2 ADD CALLDATALOAD DUP3 SIGNEXTEND SWAP2 PUSH1 0xC0 DUP3 ADD CALLDATALOAD DUP2 SIGNEXTEND SWAP2 PUSH1 0xE0 ADD CALLDATALOAD SWAP1 SIGNEXTEND PUSH2 0x11EF JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x2AA PUSH2 0x1746 JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x17A7 JUMP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x367 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1824 JUMP JUMPDEST PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 ADD CALLDATALOAD SWAP1 SIGNEXTEND PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D5 JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 SIGNEXTEND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x1943 JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x658 PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x38B PUSH2 0x1B88 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x658 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x778 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x1F8F JUMP JUMPDEST PUSH2 0x3B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x209C JUMP JUMPDEST PUSH2 0x3B2 PUSH2 0x20C7 JUMP JUMPDEST PUSH2 0x367 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x38B PUSH2 0x20DC JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x837 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x85E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x892 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x20EC JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x8F6 SWAP1 DUP5 PUSH2 0x219B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x906 SWAP1 DUP4 PUSH2 0x219B JUMP JUMPDEST PUSH1 0xD SSTORE DUP3 ISZERO PUSH2 0x943 JUMPI PUSH2 0x943 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP6 PUSH2 0x21F8 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x97D JUMPI PUSH2 0x97D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP3 DUP5 PUSH2 0x21F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA0E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA0E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2C PUSH2 0xA25 PUSH2 0x224A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x224E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAE7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x70656E64696E67476F7665726E616E6365 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB08 DUP5 DUP5 DUP5 PUSH2 0x233A JUMP JUMPDEST PUSH2 0xB78 DUP5 PUSH2 0xB14 PUSH2 0x224A JUMP JUMPDEST PUSH2 0xB73 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3CCF PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0xB52 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0x224E JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBDE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0xC5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP8 ISZERO ISZERO DUP1 PUSH2 0xC70 JUMPI POP PUSH1 0x0 DUP8 GT JUMPDEST PUSH2 0xCC1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616D6F756E743044657369726564206F7220616D6F756E743144657369726564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCE2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0xD18 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x746F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD3A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x252C JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xD5C SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x252C JUMP JUMPDEST PUSH2 0xD66 DUP9 DUP9 PUSH2 0x25CC JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 PUSH2 0xDA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 DUP3 LT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A1826B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A18A6B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0xE67 JUMPI PUSH2 0xE67 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP6 PUSH2 0x26F8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEA2 JUMPI PUSH2 0xEA2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER ADDRESS DUP5 PUSH2 0x26F8 JUMP JUMPDEST PUSH2 0xEAC DUP5 DUP5 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 PUSH1 0x8 SLOAD PUSH2 0xF04 PUSH2 0xA8E JUMP JUMPDEST GT ISZERO PUSH2 0xF48 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x6D6178546F74616C537570706C79 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP SWAP6 POP SWAP6 POP SWAP6 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2C PUSH2 0xF68 PUSH2 0x224A JUMP JUMPDEST DUP5 PUSH2 0xB73 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0xF79 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A1 PUSH1 0xD SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x219B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xD0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A1 PUSH1 0xC SLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xF4240 DUP2 LT PUSH2 0x11EA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x70726F746F636F6C466565 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1247 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1296 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x7374726174656779 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x12A0 DUP7 DUP7 PUSH2 0x289C JUMP JUMPDEST PUSH2 0x12AA DUP5 DUP5 PUSH2 0x289C JUMP JUMPDEST PUSH2 0x12B4 DUP3 DUP3 PUSH2 0x289C JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x130F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1323 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x1339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP6 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x1387 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x3134B22AB83832B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x13CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x30B9B5A637BBB2B9 PUSH1 0xC1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH2 0x13F1 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x2A7C JUMP JUMPDEST POP POP PUSH1 0xB SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x141E SWAP3 POP PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 POP PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH2 0x2A7C JUMP JUMPDEST POP POP PUSH1 0xB SLOAD SWAP3 SWAP4 POP PUSH2 0x144A SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP4 POP PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND SWAP1 POP DUP5 PUSH2 0x2B4B JUMP JUMPDEST POP POP PUSH1 0xB SLOAD PUSH2 0x1472 SWAP3 POP PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 POP PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND DUP4 PUSH2 0x2B4B JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 PUSH2 0x1482 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x148E PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP PUSH32 0x210F60ADF1DB7A02E9DB9A49EC7C2EB2060C516CBCFD01A0C05288144738EE5D DUP4 DUP4 DUP4 PUSH2 0x14BC PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP6 SWAP1 SWAP6 SIGNEXTEND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 DUP11 ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x128ACB08 ADDRESS PUSH1 0x0 DUP15 SGT DUP1 PUSH2 0x152E JUMPI DUP15 PUSH1 0x0 SUB PUSH2 0x1530 JUMP JUMPDEST DUP15 JUMPDEST DUP15 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x15CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15D5 SWAP1 POP PUSH2 0x10C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DF PUSH2 0xFFA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x15F0 DUP11 DUP11 DUP6 DUP6 PUSH2 0x2DC6 JUMP JUMPDEST SWAP1 POP PUSH2 0x15FD DUP11 DUP11 DUP4 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x2 DUP13 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xA0 SHL NOT SWAP3 DUP15 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xB8 SHL MUL PUSH3 0xFFFFFF PUSH1 0xB8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE PUSH2 0x1643 PUSH2 0x10C5 JUMP JUMPDEST SWAP3 POP PUSH2 0x164D PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH1 0x0 PUSH2 0x165D DUP10 DUP10 DUP7 DUP7 PUSH2 0x2DC6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x166D DUP9 DUP9 DUP8 DUP8 PUSH2 0x2DC6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x16D7 JUMPI PUSH2 0x1694 DUP11 DUP11 DUP5 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x2 DUP13 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xD0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xD0 SHL NOT SWAP3 DUP15 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x16E2 DUP9 DUP9 DUP4 PUSH2 0x2E77 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x2 DUP11 DUP2 SIGNEXTEND PUSH3 0xFFFFFF SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0xD0 SHL MUL PUSH3 0xFFFFFF PUSH1 0xD0 SHL NOT SWAP3 DUP13 SWAP1 SIGNEXTEND SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xE8 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x6 SSTORE POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA0E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2C PUSH2 0x17BA PUSH2 0x224A JUMP JUMPDEST DUP5 PUSH2 0xB73 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3D8B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x17E4 PUSH2 0x224A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2C PUSH2 0x1831 PUSH2 0x224A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x184A DUP8 DUP8 PUSH2 0x2A7C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP SWAP3 POP PUSH2 0x185D DUP8 DUP8 DUP6 PUSH2 0x2F1E JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP2 SWAP7 POP SWAP5 POP PUSH1 0x0 SWAP1 PUSH2 0x1876 SWAP1 PUSH3 0xF4240 SWAP1 PUSH2 0x219B JUMP JUMPDEST SWAP1 POP PUSH2 0x18A2 PUSH2 0x189B PUSH3 0xF4240 PUSH2 0x1895 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND DUP6 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 PUSH2 0x302C JUMP JUMPDEST DUP8 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP6 POP PUSH2 0x18C8 PUSH2 0x18C1 PUSH3 0xF4240 PUSH2 0x1895 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP7 AND DUP6 PUSH2 0x2FD3 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1921 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x198F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 DUP6 DUP2 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE DUP5 SWAP1 SIGNEXTEND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 PUSH4 0xA34123A7 SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1A38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x9E3D67B PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 DUP6 DUP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE DUP5 SWAP1 SIGNEXTEND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 PUSH4 0x4F1EB3D8 SWAP3 PUSH1 0xA4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x1B26 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x1838 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1B52 SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV SWAP1 SIGNEXTEND PUSH2 0x1838 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1B6C DUP3 PUSH2 0x1B66 DUP7 PUSH2 0x1B66 PUSH2 0x10C5 JUMP JUMPDEST SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP6 POP PUSH2 0x1B7E DUP2 PUSH2 0x1B66 DUP6 PUSH2 0x1B66 PUSH2 0xFFA JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x6 SLOAD EQ ISZERO PUSH2 0x1C2B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE DUP6 PUSH2 0x1C6B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x736861726573 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1C8C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0x1CC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x746F PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CCC PUSH2 0xA8E JUMP JUMPDEST SWAP1 POP PUSH2 0x1CD8 CALLER DUP9 PUSH2 0x3093 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF0 DUP3 PUSH2 0x1895 DUP11 PUSH2 0x1CEA PUSH2 0x10C5 JUMP JUMPDEST SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D04 DUP4 PUSH2 0x1895 DUP12 PUSH2 0x1CEA PUSH2 0xFFA JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1D30 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB8 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP14 DUP9 PUSH2 0x318F JUMP JUMPDEST PUSH1 0xB SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1D5E SWAP1 PUSH1 0x1 PUSH1 0xD0 SHL DUP2 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xE8 SHL SWAP1 DIV SWAP1 SIGNEXTEND DUP16 DUP11 PUSH2 0x318F JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1D71 DUP3 PUSH2 0x1B66 DUP9 DUP8 PUSH2 0x2842 JUMP JUMPDEST SWAP9 POP PUSH2 0x1D81 DUP2 PUSH2 0x1B66 DUP8 DUP7 PUSH2 0x2842 JUMP JUMPDEST SWAP8 POP DUP12 DUP10 LT ISZERO PUSH2 0x1DC5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A1826B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP11 DUP9 LT ISZERO PUSH2 0x1E07 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x30B6B7BAB73A18A6B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP9 ISZERO PUSH2 0x1E41 JUMPI PUSH2 0x1E41 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP12 DUP12 PUSH2 0x21F8 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x1E7B JUMPI PUSH2 0x1E7B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP12 DUP11 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP15 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP12 SWAP1 MSTORE DUP1 DUP3 ADD DUP11 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 CALLER SWAP2 PUSH32 0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG3 POP POP POP POP POP POP POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ISZERO PUSH2 0x1F4F JUMPI PUSH2 0x1F4F PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x21F8 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x1F89 JUMPI PUSH2 0x1F89 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x21F8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FDB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x204F JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x2088 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x97D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SGT ISZERO PUSH2 0x215E JUMPI PUSH2 0x215E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x1F89 JUMPI PUSH2 0x1F89 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x21F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x97D SWAP1 DUP5 SWAP1 PUSH2 0x3235 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2293 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D3D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x22D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C40 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x237F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D18 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x23C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3BFB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23CF DUP4 DUP4 DUP4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x240C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C62 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x243B SWAP1 DUP3 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2524 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2516 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 DUP4 DUP4 PUSH2 0x2A7C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x97D JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA34123A7 DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x25DA PUSH2 0xA8E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x25E7 PUSH2 0x1AFB JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP3 PUSH1 0x0 EQ DUP1 PUSH2 0x25FA JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 PUSH2 0x2605 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x260B JUMPI INVALID JUMPDEST DUP3 PUSH2 0x2627 JUMPI DUP8 SWAP5 POP DUP7 SWAP4 POP PUSH2 0x2620 DUP6 DUP6 PUSH2 0x32E6 JUMP JUMPDEST SWAP6 POP PUSH2 0x26EE JUMP JUMPDEST DUP2 PUSH2 0x263D JUMPI DUP7 SWAP4 POP PUSH2 0x2620 DUP2 PUSH2 0x1895 DUP7 DUP7 PUSH2 0x2FD3 JUMP JUMPDEST DUP1 PUSH2 0x2653 JUMPI DUP8 SWAP5 POP PUSH2 0x2620 DUP3 PUSH2 0x1895 DUP8 DUP7 PUSH2 0x2FD3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2671 PUSH2 0x2662 DUP11 DUP5 PUSH2 0x2FD3 JUMP JUMPDEST PUSH2 0x266C DUP11 DUP7 PUSH2 0x2FD3 JUMP JUMPDEST PUSH2 0x32FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x26B0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x63726F7373 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x26C3 PUSH1 0x1 PUSH2 0x1B66 DUP5 PUSH2 0x1895 DUP6 DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP6 POP PUSH2 0x26D8 PUSH1 0x1 PUSH2 0x1B66 DUP6 PUSH2 0x1895 DUP6 DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP5 POP PUSH2 0x26EA DUP3 PUSH2 0x1895 DUP6 DUP2 DUP6 DUP10 PUSH2 0x2FD3 JUMP JUMPDEST SWAP7 POP POP JUMPDEST POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1F89 SWAP1 DUP6 SWAP1 PUSH2 0x3235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27AD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x27B9 PUSH1 0x0 DUP4 DUP4 PUSH2 0x97D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x27C6 SWAP1 DUP3 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x27EC SWAP1 DUP3 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x2 DUP3 DUP2 SIGNEXTEND SWAP1 DUP5 SWAP1 SIGNEXTEND SLT PUSH2 0x2910 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x3A34B1B5A637BBB2B9101E103A34B1B5AAB83832B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E7 NOT PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x2961 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x7469636B4C6F77657220746F6F206C6F77 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xE8D2C6D6AAE0E0CAE440E8DEDE40D0D2CED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x29C1 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x2A17 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7469636B4C6F7765722025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2A26 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x97D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7469636B55707065722025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x2A90 ADDRESS DUP10 DUP10 PUSH2 0x330C JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x514EA4BF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2AF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2B20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP13 SWAP2 SWAP12 POP SWAP10 POP SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP6 AND ISZERO PUSH2 0x2C17 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0xA34123A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x2 DUP10 DUP2 SIGNEXTEND PUSH1 0x4 DUP4 ADD MSTORE DUP9 SWAP1 SIGNEXTEND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x44 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 PUSH4 0xA34123A7 SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2BF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP5 POP SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x9E3D67B PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 DUP10 DUP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE DUP9 SWAP1 SIGNEXTEND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x64 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 PUSH4 0x4F1EB3D8 SWAP3 PUSH1 0xA4 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2CBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH2 0x2CF4 DUP3 DUP8 PUSH2 0x219B JUMP JUMPDEST SWAP4 POP PUSH2 0x2D00 DUP2 DUP7 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP4 POP PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP1 ISZERO PUSH2 0x2D71 JUMPI PUSH2 0x2D22 PUSH3 0xF4240 PUSH2 0x1895 DUP10 DUP5 PUSH2 0x2FD3 JUMP JUMPDEST SWAP3 POP PUSH2 0x2D35 PUSH3 0xF4240 PUSH2 0x1895 DUP9 DUP5 PUSH2 0x2FD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D41 DUP8 DUP5 PUSH2 0x219B JUMP JUMPDEST SWAP7 POP PUSH2 0x2D4D DUP7 DUP4 PUSH2 0x219B JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP7 POP PUSH2 0x2D5D SWAP1 DUP5 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x2D6D SWAP1 DUP4 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0xD SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x1AC56D7E866E3F5EA9AA92AA11758EAD39A0A5F013F3FEFB0F47CB9D008EDD27 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2E4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2E6D DUP2 PUSH2 0x2E5D DUP9 PUSH2 0x3362 JUMP JUMPDEST PUSH2 0x2E66 DUP9 PUSH2 0x3362 JUMP JUMPDEST DUP8 DUP8 PUSH2 0x3694 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND ISZERO PUSH2 0x97D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x3C8A7D8D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 DUP6 DUP2 SIGNEXTEND PUSH1 0x24 DUP4 ADD MSTORE DUP5 SWAP1 SIGNEXTEND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP4 AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA4 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 PUSH4 0x3C8A7D8D SWAP4 PUSH1 0xC4 DUP1 DUP3 ADD SWAP5 SWAP3 SWAP4 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2FA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2FC6 DUP2 PUSH2 0x2FB7 DUP9 PUSH2 0x3362 JUMP JUMPDEST PUSH2 0x2FC0 DUP9 PUSH2 0x3362 JUMP JUMPDEST DUP8 PUSH2 0x3758 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2FE2 JUMPI POP PUSH1 0x0 PUSH2 0xA30 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2FEF JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xB7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3CAE PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x3082 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x308B JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x30D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3CF7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30E4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x97D JUMP JUMPDEST PUSH2 0x3121 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C1E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x3147 SWAP1 DUP3 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x319E DUP8 DUP8 PUSH2 0x2A7C JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x31C6 DUP6 PUSH2 0x1895 DUP9 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH2 0x2FD3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x322A JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x31E7 DUP13 DUP13 PUSH2 0x31E2 DUP9 PUSH2 0x37F4 JUMP JUMPDEST PUSH2 0x2B4B JUMP JUMPDEST SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP SWAP1 POP PUSH2 0x3209 PUSH2 0x3202 DUP11 PUSH2 0x1895 DUP6 DUP15 PUSH2 0x2FD3 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP8 POP PUSH2 0x3223 PUSH2 0x321C DUP11 PUSH2 0x1895 DUP5 DUP15 PUSH2 0x2FD3 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x2842 JUMP JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x328A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x380B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x97D JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3D61 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x32F6 JUMPI DUP2 PUSH2 0xB7C JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x32F6 JUMPI DUP2 PUSH2 0xB7C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP5 SWAP1 SWAP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 SWAP4 DUP5 SIGNEXTEND PUSH1 0xE8 SWAP1 DUP2 SHL PUSH1 0x34 DUP8 ADD MSTORE SWAP3 SWAP1 SWAP4 SIGNEXTEND SWAP1 SWAP2 SHL PUSH1 0x37 DUP5 ADD MSTORE DUP1 MLOAD DUP1 DUP5 SUB PUSH1 0x1A ADD DUP2 MSTORE PUSH1 0x3A SWAP1 SWAP4 ADD SWAP1 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x3379 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x3381 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x33BF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x33D3 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x33E5 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3419 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x3438 JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x3457 JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x3476 JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x3495 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x34B4 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x34D3 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x34F3 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3513 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x3533 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x3553 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x3573 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x3593 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x35B3 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x35D3 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x35F4 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x3614 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x3633 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x3650 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x366B JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x3667 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x367F JUMPI PUSH1 0x1 PUSH2 0x3682 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x36B4 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x36DF JUMPI PUSH2 0x36D8 DUP6 DUP6 DUP6 PUSH2 0x3822 JUMP JUMPDEST SWAP1 POP PUSH2 0x374F JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x3741 JUMPI PUSH1 0x0 PUSH2 0x3706 DUP8 DUP7 DUP7 PUSH2 0x3822 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3715 DUP8 DUP10 DUP7 PUSH2 0x3885 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT PUSH2 0x3736 JUMPI DUP1 PUSH2 0x3738 JUMP JUMPDEST DUP2 JUMPDEST SWAP3 POP POP POP PUSH2 0x374F JUMP JUMPDEST PUSH2 0x374C DUP6 DUP6 DUP5 PUSH2 0x3885 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3779 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x37A4 JUMPI PUSH2 0x379D DUP6 DUP6 DUP6 PUSH2 0x38C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x37EB JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x37DD JUMPI PUSH2 0x37C9 DUP7 DUP6 DUP6 PUSH2 0x38C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x37D6 DUP6 DUP8 DUP6 PUSH2 0x392B JUMP JUMPDEST SWAP1 POP PUSH2 0x37EB JUMP JUMPDEST PUSH2 0x37E8 DUP6 DUP6 DUP6 PUSH2 0x392B JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 GT ISZERO PUSH2 0x3807 JUMPI INVALID JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x381A DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x396E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x3842 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH1 0x0 PUSH2 0x3865 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x3AC9 JUMP JUMPDEST SWAP1 POP PUSH2 0x374F PUSH2 0x3880 DUP5 DUP4 DUP9 DUP9 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AC9 JUMP JUMPDEST PUSH2 0x3B78 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x38A5 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x381A PUSH2 0x3880 DUP4 PUSH1 0x1 PUSH1 0x60 SHL DUP8 DUP8 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x38E2 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x391B PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3AC9 JUMP JUMPDEST DUP2 PUSH2 0x3922 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x394B JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x381A DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x3AC9 JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x39AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3C88 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x39B8 DUP6 PUSH2 0x3B8E JUMP JUMPDEST PUSH2 0x3A09 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3A47 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3A28 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3AA9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3AAE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3ABE DUP3 DUP3 DUP7 PUSH2 0x3B94 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP7 DUP7 MUL SWAP3 POP DUP3 DUP2 LT SWAP1 DUP4 SWAP1 SUB SUB SWAP1 POP DUP1 PUSH2 0x3AFF JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x3AF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0xB7C JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x3B0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD PUSH1 0x0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3BA3 JUMPI POP DUP2 PUSH2 0xB7C JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3BB3 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x24E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24D1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636541646472 PUSH6 0x73733A20696E PUSH20 0x756666696369656E742062616C616E636520666F PUSH19 0x2063616C6C536166654D6174683A206D756C74 PUSH10 0x706C69636174696F6E20 PUSH16 0x766572666C6F7745524332303A207472 PUSH2 0x6E73 PUSH7 0x657220616D6F75 PUSH15 0x74206578636565647320616C6C6F77 PUSH2 0x6E63 PUSH6 0x45524332303A KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656445524332303A2064656372656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726FA26469706673582212 KECCAK256 DUP9 0xD5 DUP13 DUP4 0xE2 0xAB 0xB5 0x5F PUSH18 0x9B87813ED884D6C65EB3628656307A85F5A7 PUSH19 0x225C55C664736F6C6343000706003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "CALLVALUE",
      "path": "23"
    },
    "6": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "REVERT",
      "path": "23"
    },
    "16": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "17": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "POP",
      "path": "23"
    },
    "18": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "21": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "LT",
      "path": "23"
    },
    "22": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "25": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "26": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "29": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "SHR",
      "path": "23"
    },
    "32": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "33": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x87E5E083"
    },
    "38": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "39": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x151"
    },
    "42": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "43": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "44": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC4A7761E"
    },
    "49": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "50": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC3"
    },
    "53": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "54": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "55": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDC2C256F"
    },
    "60": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "61": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "65": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "66": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDC2C256F"
    },
    "71": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "72": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7A5"
    },
    "75": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "76": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "77": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "83": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7DB"
    },
    "86": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "87": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "88": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xEAE989A2"
    },
    "93": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "94": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x809"
    },
    "97": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "98": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "99": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF39C38A0"
    },
    "104": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "105": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x811"
    },
    "108": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "109": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "110": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFA082743"
    },
    "115": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "116": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x819"
    },
    "119": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "120": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "121": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFA461E33"
    },
    "126": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "127": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x821"
    },
    "130": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "131": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "134": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "135": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "136": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "137": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xC4A7761E"
    },
    "142": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "143": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6D9"
    },
    "146": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "147": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "148": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD0C93A7C"
    },
    "153": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "154": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6E1"
    },
    "157": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "158": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "159": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD21220A7"
    },
    "164": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "165": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6E9"
    },
    "168": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "169": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "170": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD331BEF7"
    },
    "175": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "176": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6F1"
    },
    "179": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "180": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "181": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xD3487997"
    },
    "186": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "187": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x729"
    },
    "190": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "191": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "194": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "195": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "196": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "197": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA8C62E76"
    },
    "202": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "203": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x115"
    },
    "206": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "207": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "208": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA8C62E76"
    },
    "213": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "214": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5FA"
    },
    "217": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "218": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "219": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA9059CBB"
    },
    "224": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "225": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x602"
    },
    "228": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "229": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "230": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA91EF6EB"
    },
    "235": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "236": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x62E"
    },
    "239": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "240": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "241": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xAB033EA9"
    },
    "246": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "247": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x671"
    },
    "250": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "251": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "252": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xABBFFCB9"
    },
    "257": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "258": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x697"
    },
    "261": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "262": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "263": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xB0E21E8A"
    },
    "268": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "269": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6D1"
    },
    "272": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "273": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "276": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "277": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "278": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "279": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x87E5E083"
    },
    "284": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "285": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x556"
    },
    "288": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "289": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "290": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x888A9134"
    },
    "295": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "296": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5B6"
    },
    "299": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "300": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "301": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95D89B41"
    },
    "306": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "307": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5BE"
    },
    "310": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "311": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "312": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA00FA77F"
    },
    "317": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "318": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5C6"
    },
    "321": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "322": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "323": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA457C2D7"
    },
    "328": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "329": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5CE"
    },
    "332": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "333": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "336": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "337": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "338": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "339": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "344": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "345": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EA"
    },
    "348": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "349": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "350": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x41AEC538"
    },
    "355": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "356": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AE"
    },
    "359": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "360": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "361": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x41AEC538"
    },
    "366": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "367": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4F3"
    },
    "370": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "371": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "372": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x51E87AF7"
    },
    "377": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "378": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4FB"
    },
    "381": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "382": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "383": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x5AA6E675"
    },
    "388": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "389": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x503"
    },
    "392": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "393": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "394": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x629D9405"
    },
    "399": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "400": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x50B"
    },
    "403": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "404": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "405": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "410": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "411": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x513"
    },
    "414": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "415": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "416": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x787DCE3D"
    },
    "421": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "422": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x539"
    },
    "425": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "426": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "429": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "430": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "431": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "432": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x313CE567"
    },
    "437": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "438": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x40A"
    },
    "441": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "442": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "443": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x33A100CA"
    },
    "448": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "449": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x428"
    },
    "452": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "453": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "454": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x365D0ED7"
    },
    "459": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "460": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x44E"
    },
    "463": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "464": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "465": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x39509351"
    },
    "470": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "471": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4AA"
    },
    "474": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "475": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "476": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3F3E4C11"
    },
    "481": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "482": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4D6"
    },
    "485": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "486": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "489": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "490": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "491": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "492": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x16F0115B"
    },
    "497": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "GT",
      "path": "23"
    },
    "498": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x231"
    },
    "501": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "502": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "503": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x16F0115B"
    },
    "508": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "509": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A2"
    },
    "512": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "513": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "514": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x18160DDD"
    },
    "519": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "520": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3AA"
    },
    "523": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "524": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "525": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x238EFCBC"
    },
    "530": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "531": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3C4"
    },
    "534": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "535": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "536": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x23B872DD"
    },
    "541": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "542": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3CC"
    },
    "545": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "546": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "547": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x2AB4D052"
    },
    "552": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "553": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x402"
    },
    "556": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "557": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x269"
    },
    "560": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMP",
      "path": "23"
    },
    "561": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "562": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "563": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x430C130"
    },
    "568": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "569": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26E"
    },
    "572": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "573": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "574": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x6FDDE03"
    },
    "579": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "580": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A2"
    },
    "583": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "584": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "585": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x95EA7B3"
    },
    "590": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "591": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31F"
    },
    "594": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "595": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "596": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xDFE1681"
    },
    "601": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "602": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x35F"
    },
    "605": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "606": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "607": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xF35BCAC"
    },
    "612": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "EQ",
      "path": "23"
    },
    "613": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x383"
    },
    "616": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "617": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "618": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "620": {
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "DUP1",
      "path": "23"
    },
    "621": {
      "first_revert": true,
      "fn": null,
      "offset": [
        960,
        22446
      ],
      "op": "REVERT",
      "path": "23"
    },
    "622": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "623": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "626": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "628": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "DUP1",
      "path": "23"
    },
    "629": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "630": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "SUB",
      "path": "23"
    },
    "631": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "633": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "DUP2",
      "path": "23"
    },
    "634": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "LT",
      "path": "23"
    },
    "635": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "636": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x284"
    },
    "639": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "640": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "642": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "DUP1",
      "path": "23"
    },
    "643": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "REVERT",
      "path": "23"
    },
    "644": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "DUP1",
      "path": "23"
    },
    "647": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "648": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "649": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "651": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "DUP2",
      "path": "23"
    },
    "652": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "ADD",
      "path": "23"
    },
    "653": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "654": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "655": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "657": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "ADD",
      "path": "23"
    },
    "658": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "665": {
      "op": "SHL"
    },
    "666": {
      "op": "SUB"
    },
    "667": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "AND",
      "path": "23"
    },
    "668": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x89D"
    },
    "671": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMP",
      "path": "23"
    },
    "672": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "673": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "STOP",
      "path": "23"
    },
    "674": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "675": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA"
    },
    "678": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x982"
    },
    "681": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "682": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "683": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "685": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "686": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "687": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "689": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "690": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "691": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "692": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "693": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "694": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "695": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "696": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "698": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "699": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "700": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "701": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "702": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "703": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "704": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "705": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "706": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "707": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "708": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP6",
      "path": "2"
    },
    "709": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "710": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "711": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "713": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "714": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "716": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "717": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "718": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "719": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "LT",
      "path": "2"
    },
    "720": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "721": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E4"
    },
    "724": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "725": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "726": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "727": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "728": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "729": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "730": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "731": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "732": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "733": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "735": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "736": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CC"
    },
    "739": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "740": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "741": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "742": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "743": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "744": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "745": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "746": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "747": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "748": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "749": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "750": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "751": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "753": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "AND",
      "path": "2"
    },
    "754": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "755": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "756": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x311"
    },
    "759": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "760": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "761": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP3",
      "path": "2"
    },
    "762": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "763": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "764": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "765": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "767": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP4",
      "path": "2"
    },
    "768": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "770": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "771": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "774": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "EXP",
      "path": "2"
    },
    "775": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "776": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "NOT",
      "path": "2"
    },
    "777": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "AND",
      "path": "2"
    },
    "778": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP2",
      "path": "2"
    },
    "779": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "782": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "ADD",
      "path": "2"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "784": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "785": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "786": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "787": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "788": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "789": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "790": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "POP",
      "path": "2"
    },
    "791": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "794": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "DUP1",
      "path": "2"
    },
    "795": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "796": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SUB",
      "path": "2"
    },
    "797": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "798": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "RETURN",
      "path": "2"
    },
    "799": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "803": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "805": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "806": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "807": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SUB",
      "path": "2"
    },
    "808": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "810": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "811": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "LT",
      "path": "2"
    },
    "812": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "813": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x335"
    },
    "816": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "817": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "819": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "820": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "REVERT",
      "path": "2"
    },
    "821": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "822": {
      "op": "POP"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "op": "SUB"
    },
    "831": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "832": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "833": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "AND",
      "path": "2"
    },
    "834": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "837": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ADD",
      "path": "2"
    },
    "838": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "839": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA18"
    },
    "842": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "2"
    },
    "843": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "844": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "846": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP1",
      "path": "2"
    },
    "847": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "848": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "849": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "850": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "851": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP3",
      "path": "2"
    },
    "852": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "853": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "854": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "855": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "DUP2",
      "path": "2"
    },
    "856": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "857": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SUB",
      "path": "2"
    },
    "858": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "860": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "ADD",
      "path": "2"
    },
    "861": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "862": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "RETURN",
      "path": "2"
    },
    "863": {
      "offset": [
        1770,
        1800
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "864": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367"
    },
    "867": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA36"
    },
    "870": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1770,
        1800
      ],
      "op": "JUMP",
      "path": "23"
    },
    "871": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "872": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "874": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "DUP1",
      "path": "23"
    },
    "875": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "op": "SUB"
    },
    "884": {
      "offset": [
        1770,
        1800
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "885": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "886": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "AND",
      "path": "23"
    },
    "887": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "DUP3",
      "path": "23"
    },
    "888": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "889": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "890": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "891": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "DUP2",
      "path": "23"
    },
    "892": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "893": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "SUB",
      "path": "23"
    },
    "894": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "896": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "ADD",
      "path": "23"
    },
    "897": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "898": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "RETURN",
      "path": "23"
    },
    "899": {
      "offset": [
        2134,
        2157
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "900": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x38B"
    },
    "903": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA5A"
    },
    "906": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2134,
        2157
      ],
      "op": "JUMP",
      "path": "23"
    },
    "907": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "908": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "910": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "DUP1",
      "path": "23"
    },
    "911": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "912": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "914": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "915": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "916": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "917": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "918": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "DUP3",
      "path": "23"
    },
    "919": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "920": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "921": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "922": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "DUP2",
      "path": "23"
    },
    "923": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "924": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SUB",
      "path": "23"
    },
    "925": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "927": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "ADD",
      "path": "23"
    },
    "928": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "929": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "RETURN",
      "path": "23"
    },
    "930": {
      "offset": [
        1728,
        1764
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "931": {
      "fn": "ERC20.approve",
      "offset": [
        1728,
        1764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367"
    },
    "934": {
      "fn": "ERC20.approve",
      "offset": [
        1728,
        1764
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA6A"
    },
    "937": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1728,
        1764
      ],
      "op": "JUMP",
      "path": "23"
    },
    "938": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "939": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2"
    },
    "942": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA8E"
    },
    "945": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "946": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "947": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "949": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "DUP1",
      "path": "2"
    },
    "950": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "951": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "952": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "DUP3",
      "path": "2"
    },
    "953": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "954": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "955": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "956": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "DUP2",
      "path": "2"
    },
    "957": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "958": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SUB",
      "path": "2"
    },
    "959": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "961": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "ADD",
      "path": "2"
    },
    "962": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "963": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "RETURN",
      "path": "2"
    },
    "964": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22191,
        22339
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "965": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22191,
        22339
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "968": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22191,
        22339
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA94"
    },
    "971": {
      "fn": "AlphaVault.acceptGovernance",
      "jump": "i",
      "offset": [
        22191,
        22339
      ],
      "op": "JUMP",
      "path": "23"
    },
    "972": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "973": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "976": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "978": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP1",
      "path": "2"
    },
    "979": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "980": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SUB",
      "path": "2"
    },
    "981": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "983": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "984": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "LT",
      "path": "2"
    },
    "985": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "986": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E2"
    },
    "989": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "990": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "992": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP1",
      "path": "2"
    },
    "993": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "REVERT",
      "path": "2"
    },
    "994": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "995": {
      "op": "POP"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1002": {
      "op": "SHL"
    },
    "1003": {
      "op": "SUB"
    },
    "1004": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1005": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1006": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "AND",
      "path": "2"
    },
    "1008": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1009": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1011": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1012": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "ADD",
      "path": "2"
    },
    "1013": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1014": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1015": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1016": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "AND",
      "path": "2"
    },
    "1017": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1018": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1020": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "ADD",
      "path": "2"
    },
    "1021": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1022": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAFB"
    },
    "1025": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1026": {
      "offset": [
        1915,
        1944
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1915,
        1944
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "1030": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1915,
        1944
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB83"
    },
    "1033": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        1915,
        1944
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1034": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1035": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x412"
    },
    "1038": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB89"
    },
    "1041": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1042": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1043": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1045": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1046": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1047": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1049": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1050": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1051": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "AND",
      "path": "2"
    },
    "1052": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1053": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1054": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1055": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1056": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1057": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1058": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SUB",
      "path": "2"
    },
    "1059": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1061": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "ADD",
      "path": "2"
    },
    "1062": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1063": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "RETURN",
      "path": "2"
    },
    "1064": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1065": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1068": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1070": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1071": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1072": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "SUB",
      "path": "23"
    },
    "1073": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1075": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1076": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "LT",
      "path": "23"
    },
    "1077": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1078": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x43E"
    },
    "1081": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1082": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1084": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1085": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1086": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "op": "SUB"
    },
    "1097": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "AND",
      "path": "23"
    },
    "1098": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB92"
    },
    "1101": {
      "fn": "AlphaVault.setStrategy",
      "jump": "i",
      "offset": [
        20570,
        20671
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1102": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1103": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x48C"
    },
    "1106": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1108": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1109": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1110": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SUB",
      "path": "23"
    },
    "1111": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "1113": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1114": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "LT",
      "path": "23"
    },
    "1115": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1116": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x464"
    },
    "1119": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1120": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1122": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1123": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1124": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1127": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1128": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1129": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1131": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1132": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1133": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1134": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1135": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1137": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1138": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1139": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1140": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1141": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1143": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1144": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1145": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1146": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1147": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "1149": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1150": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1157": {
      "op": "SHL"
    },
    "1158": {
      "op": "SUB"
    },
    "1159": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "AND",
      "path": "23"
    },
    "1160": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC00"
    },
    "1163": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1164": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1165": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1167": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1168": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1169": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1170": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1171": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1172": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1174": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1175": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1176": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1177": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1178": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1179": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1180": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1181": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1182": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1183": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1184": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1185": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1186": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1187": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1188": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SUB",
      "path": "23"
    },
    "1189": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1191": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "ADD",
      "path": "23"
    },
    "1192": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1193": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "RETURN",
      "path": "23"
    },
    "1194": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1195": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1198": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1200": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1201": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1202": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "SUB",
      "path": "2"
    },
    "1203": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1205": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1206": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "LT",
      "path": "2"
    },
    "1207": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1208": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C0"
    },
    "1211": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1212": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1214": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1215": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1216": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1224": {
      "op": "SHL"
    },
    "1225": {
      "op": "SUB"
    },
    "1226": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1227": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1228": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "AND",
      "path": "2"
    },
    "1229": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1230": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1232": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "ADD",
      "path": "2"
    },
    "1233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1234": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF5B"
    },
    "1237": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1238": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1239": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1242": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1244": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1245": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1246": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "SUB",
      "path": "23"
    },
    "1247": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1249": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1250": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "LT",
      "path": "23"
    },
    "1251": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1252": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4EC"
    },
    "1255": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1256": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1258": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1259": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1260": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1263": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFA9"
    },
    "1266": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "jump": "i",
      "offset": [
        21267,
        21392
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1267": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16933,
        17067
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1268": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16933,
        17067
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "1271": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16933,
        17067
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFA"
    },
    "1274": {
      "fn": "AlphaVault.getBalance1",
      "jump": "i",
      "offset": [
        16933,
        17067
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1275": {
      "offset": [
        2105,
        2128
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1276": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x38B"
    },
    "1279": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10A6"
    },
    "1282": {
      "fn": "AlphaVault.getBalance1",
      "jump": "i",
      "offset": [
        2105,
        2128
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1283": {
      "offset": [
        1979,
        2004
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1284": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        1979,
        2004
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367"
    },
    "1287": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        1979,
        2004
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10B6"
    },
    "1290": {
      "fn": "AlphaVault.getBalance1",
      "jump": "i",
      "offset": [
        1979,
        2004
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1291": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16709,
        16843
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1292": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16709,
        16843
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "1295": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16709,
        16843
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10C5"
    },
    "1298": {
      "fn": "AlphaVault.getBalance0",
      "jump": "i",
      "offset": [
        16709,
        16843
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1299": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1300": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2"
    },
    "1303": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1305": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1306": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1307": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "SUB",
      "path": "2"
    },
    "1308": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1310": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1311": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "LT",
      "path": "2"
    },
    "1312": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1313": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x529"
    },
    "1316": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1317": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1319": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1320": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1321": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1322": {
      "op": "POP"
    },
    "1323": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "SUB"
    },
    "1332": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "AND",
      "path": "2"
    },
    "1333": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x113A"
    },
    "1336": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1337": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1338": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1341": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1343": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1344": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1345": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "SUB",
      "path": "23"
    },
    "1346": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1348": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1349": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "LT",
      "path": "23"
    },
    "1350": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1351": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x54F"
    },
    "1354": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1355": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1357": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1358": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1359": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1362": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1159"
    },
    "1365": {
      "fn": "AlphaVault.setProtocolFee",
      "jump": "i",
      "offset": [
        20820,
        20985
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1366": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1367": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1370": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1372": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1373": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1374": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SUB",
      "path": "23"
    },
    "1375": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x100"
    },
    "1378": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1379": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "LT",
      "path": "23"
    },
    "1380": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1381": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x56D"
    },
    "1384": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1385": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1387": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1388": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1389": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1392": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1393": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1400": {
      "op": "SHL"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1404": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1405": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1406": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1407": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "AND",
      "path": "23"
    },
    "1408": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1409": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1411": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1412": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1413": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1414": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "1416": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1417": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1418": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1419": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1420": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1422": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1423": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1424": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1425": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1426": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1427": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1428": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "1430": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1431": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1432": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1433": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1434": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1435": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1436": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "1438": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1439": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1440": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1441": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1442": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1443": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1444": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC0"
    },
    "1446": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1447": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1448": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1449": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1450": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1451": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1452": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "1454": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "ADD",
      "path": "23"
    },
    "1455": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1456": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1457": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1458": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11EF"
    },
    "1461": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10253,
        12725
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1462": {
      "offset": [
        2077,
        2099
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1463": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x38B"
    },
    "1466": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1736"
    },
    "1469": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        2077,
        2099
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1470": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1471": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA"
    },
    "1474": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1746"
    },
    "1477": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1478": {
      "offset": [
        2204,
        2239
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1479": {
      "fn": "ERC20.symbol",
      "offset": [
        2204,
        2239
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "1482": {
      "fn": "ERC20.symbol",
      "offset": [
        2204,
        2239
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x17A7"
    },
    "1485": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2204,
        2239
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1487": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1490": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1494": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "SUB",
      "path": "2"
    },
    "1495": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1497": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1498": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "LT",
      "path": "2"
    },
    "1499": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1500": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E4"
    },
    "1503": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1504": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1506": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1507": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1508": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1519": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1520": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "AND",
      "path": "2"
    },
    "1521": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1522": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1524": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "ADD",
      "path": "2"
    },
    "1525": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1526": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17AD"
    },
    "1529": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1530": {
      "offset": [
        1950,
        1973
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1531": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1950,
        1973
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367"
    },
    "1534": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1950,
        1973
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1815"
    },
    "1537": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        1950,
        1973
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1538": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1539": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34B"
    },
    "1542": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1544": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1545": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1546": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "SUB",
      "path": "2"
    },
    "1547": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1549": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1550": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "LT",
      "path": "2"
    },
    "1551": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1552": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x618"
    },
    "1555": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1556": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1558": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1559": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1560": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "op": "SUB"
    },
    "1570": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1571": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1572": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "AND",
      "path": "2"
    },
    "1573": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1574": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1576": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "ADD",
      "path": "2"
    },
    "1577": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "1578": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1824"
    },
    "1581": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1582": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1583": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x658"
    },
    "1586": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1588": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1589": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1590": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SUB",
      "path": "23"
    },
    "1591": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1593": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1594": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "LT",
      "path": "23"
    },
    "1595": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1596": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x644"
    },
    "1599": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1600": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1602": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1603": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1604": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1607": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1608": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "1610": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1611": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1612": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1613": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1614": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1616": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "ADD",
      "path": "23"
    },
    "1617": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1618": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1619": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1620": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1838"
    },
    "1623": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1624": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1625": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1627": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1628": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1629": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1630": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1631": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1632": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1634": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1635": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "ADD",
      "path": "23"
    },
    "1636": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1637": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1638": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1639": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1640": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1641": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1642": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1643": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1644": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1645": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SUB",
      "path": "23"
    },
    "1646": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "ADD",
      "path": "23"
    },
    "1647": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1648": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "RETURN",
      "path": "23"
    },
    "1649": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1650": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1653": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1655": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1656": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1657": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "SUB",
      "path": "23"
    },
    "1658": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1660": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1661": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "LT",
      "path": "23"
    },
    "1662": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1663": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x687"
    },
    "1666": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1667": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1669": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1670": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1671": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1672": {
      "op": "POP"
    },
    "1673": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1680": {
      "op": "SHL"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "AND",
      "path": "23"
    },
    "1683": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18D5"
    },
    "1686": {
      "fn": "AlphaVault.setGovernance",
      "jump": "i",
      "offset": [
        21929,
        22045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1687": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1688": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1691": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1693": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1694": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1695": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SUB",
      "path": "23"
    },
    "1696": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1698": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1699": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "LT",
      "path": "23"
    },
    "1700": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1701": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x6AD"
    },
    "1704": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1705": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1707": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1708": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1709": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1712": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1713": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "1715": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1716": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1717": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1718": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1719": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1721": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1722": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "ADD",
      "path": "23"
    },
    "1723": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1724": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1725": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1726": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "1727": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1728": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1730": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "ADD",
      "path": "23"
    },
    "1731": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "AND",
      "path": "23"
    },
    "1741": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1943"
    },
    "1744": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "i",
      "offset": [
        21469,
        21755
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1745": {
      "offset": [
        1883,
        1909
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1746": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1883,
        1909
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "1749": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1883,
        1909
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AF5"
    },
    "1752": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "i",
      "offset": [
        1883,
        1909
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1753": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1754": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x658"
    },
    "1757": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AFB"
    },
    "1760": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        15330,
        15766
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1761": {
      "offset": [
        1842,
        1876
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1762": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1842,
        1876
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x38B"
    },
    "1765": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1842,
        1876
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B88"
    },
    "1768": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        1842,
        1876
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1769": {
      "offset": [
        1806,
        1836
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1770": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1806,
        1836
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367"
    },
    "1773": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1806,
        1836
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BAC"
    },
    "1776": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        1806,
        1836
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1777": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1778": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x658"
    },
    "1781": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1783": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1784": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1785": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SUB",
      "path": "23"
    },
    "1786": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "1788": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1789": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "LT",
      "path": "23"
    },
    "1790": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1791": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x707"
    },
    "1794": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1795": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1797": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1798": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1799": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1800": {
      "op": "POP"
    },
    "1801": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1802": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1803": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1804": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1806": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1807": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1808": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1809": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1810": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1812": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1813": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1814": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1815": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1816": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1818": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "ADD",
      "path": "23"
    },
    "1819": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "AND",
      "path": "23"
    },
    "1829": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1BD0"
    },
    "1832": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        7577,
        9050
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1833": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1834": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1837": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1839": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1840": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1841": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SUB",
      "path": "23"
    },
    "1842": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1844": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1845": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "LT",
      "path": "23"
    },
    "1846": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1847": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x73F"
    },
    "1850": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1851": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1853": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1854": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1855": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1856": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1857": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1858": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1859": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1861": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1862": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1863": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1864": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1865": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1866": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1867": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1868": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1870": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1871": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1872": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1874": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1875": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1876": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1877": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "1883": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1884": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "GT",
      "path": "23"
    },
    "1885": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1886": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x766"
    },
    "1889": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1890": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1892": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1893": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1894": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1895": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1896": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1897": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1898": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1900": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1901": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1902": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "GT",
      "path": "23"
    },
    "1903": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1904": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x778"
    },
    "1907": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1908": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1910": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1911": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1912": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1913": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1914": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1915": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1916": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1918": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1919": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1920": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1921": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1923": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1924": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "MUL",
      "path": "23"
    },
    "1925": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1926": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ADD",
      "path": "23"
    },
    "1927": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "GT",
      "path": "23"
    },
    "1928": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "1934": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1935": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "GT",
      "path": "23"
    },
    "1936": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "OR",
      "path": "23"
    },
    "1937": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1938": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x79A"
    },
    "1941": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1942": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1944": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1945": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1946": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1947": {
      "op": "POP"
    },
    "1948": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1949": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1950": {
      "op": "POP"
    },
    "1951": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1EE0"
    },
    "1956": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1957": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1958": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "1961": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "1963": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1964": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "1965": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "SUB",
      "path": "23"
    },
    "1966": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "1968": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1969": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "LT",
      "path": "23"
    },
    "1970": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1971": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7BB"
    },
    "1974": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1975": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1977": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1978": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "REVERT",
      "path": "23"
    },
    "1979": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1990": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1991": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1992": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "AND",
      "path": "23"
    },
    "1993": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1994": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1996": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1997": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "ADD",
      "path": "23"
    },
    "1998": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "1999": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2000": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2002": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2003": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2004": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "ADD",
      "path": "23"
    },
    "2005": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "2006": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "AND",
      "path": "23"
    },
    "2007": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F8F"
    },
    "2010": {
      "fn": "AlphaVault.sweep",
      "jump": "i",
      "offset": [
        20161,
        20381
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2011": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2012": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B2"
    },
    "2015": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2017": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2018": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2019": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "SUB",
      "path": "2"
    },
    "2020": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2023": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "LT",
      "path": "2"
    },
    "2024": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2025": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7F1"
    },
    "2028": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2029": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2031": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2032": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2033": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2034": {
      "op": "POP"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2044": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "2045": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2046": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "AND",
      "path": "2"
    },
    "2047": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2048": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2050": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "ADD",
      "path": "2"
    },
    "2051": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "2052": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "AND",
      "path": "2"
    },
    "2053": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x209C"
    },
    "2056": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2057": {
      "offset": [
        2163,
        2198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2058": {
      "fn": "ERC20.allowance",
      "offset": [
        2163,
        2198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3B2"
    },
    "2061": {
      "fn": "ERC20.allowance",
      "offset": [
        2163,
        2198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20C7"
    },
    "2064": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2163,
        2198
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2065": {
      "offset": [
        2010,
        2042
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2066": {
      "fn": "ERC20.allowance",
      "offset": [
        2010,
        2042
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x367"
    },
    "2069": {
      "fn": "ERC20.allowance",
      "offset": [
        2010,
        2042
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20CD"
    },
    "2072": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2010,
        2042
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2073": {
      "offset": [
        2049,
        2071
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2074": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x38B"
    },
    "2077": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20DC"
    },
    "2080": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2049,
        2071
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2081": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2082": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A0"
    },
    "2085": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2087": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2088": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "2089": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SUB",
      "path": "23"
    },
    "2090": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2092": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2093": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "LT",
      "path": "23"
    },
    "2094": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2095": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x837"
    },
    "2098": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2099": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2101": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2102": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2103": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2104": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2105": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "2106": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2107": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2109": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2110": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2111": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "2112": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2113": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2114": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2115": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2116": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "2118": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2119": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2120": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2122": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2123": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2124": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "2125": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "2131": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2132": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "GT",
      "path": "23"
    },
    "2133": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2134": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x85E"
    },
    "2137": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2138": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2140": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2141": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2142": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2143": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2144": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2145": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2146": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2148": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2149": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2150": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "GT",
      "path": "23"
    },
    "2151": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2152": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x870"
    },
    "2155": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2156": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2158": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2159": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2160": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2161": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2162": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "2163": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2164": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2166": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2167": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2168": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2169": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2171": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2172": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "MUL",
      "path": "23"
    },
    "2173": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2174": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ADD",
      "path": "23"
    },
    "2175": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "GT",
      "path": "23"
    },
    "2176": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH5",
      "path": "23",
      "value": "0x100000000"
    },
    "2182": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2183": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "GT",
      "path": "23"
    },
    "2184": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "OR",
      "path": "23"
    },
    "2185": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2186": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x892"
    },
    "2189": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2190": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "2192": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2193": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2194": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2195": {
      "op": "POP"
    },
    "2196": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2197": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "2198": {
      "op": "POP"
    },
    "2199": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2200": {
      "op": "POP"
    },
    "2201": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x20EC"
    },
    "2204": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "jump": "i",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2205": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2206": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "2208": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "2218": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2219": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "2220": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8E9"
    },
    "2223": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2224": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2226": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2227": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2228": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2236": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2237": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2239": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2241": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2242": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "2243": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2244": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "2246": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2248": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2249": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "2250": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2251": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2267": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2268": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "2269": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2270": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2271": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2272": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2273": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2274": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2275": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "2276": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2278": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "2279": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2280": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2281": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2282": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19852,
        19872
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 0,
      "value": "0xC"
    },
    "2284": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19852,
        19872
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2285": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19852,
        19885
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8F6"
    },
    "2288": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19852,
        19885
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2289": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19877,
        19884
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2290": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19852,
        19876
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "2293": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        19852,
        19885
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2294": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19852,
        19885
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2295": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19829,
        19849
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "2297": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19829,
        19885
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2298": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19918,
        19938
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 1,
      "value": "0xD"
    },
    "2300": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19918,
        19938
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2301": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19918,
        19951
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x906"
    },
    "2304": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19918,
        19951
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2305": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19943,
        19950
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2306": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19918,
        19942
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "2309": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        19918,
        19951
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2310": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19918,
        19951
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2311": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19895,
        19915
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "2313": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19895,
        19951
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2314": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19965,
        19976
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2315": {
      "branch": 215,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19965,
        19976
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2316": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19961,
        20010
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x943"
    },
    "2319": {
      "branch": 215,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19961,
        20010
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2320": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19978,
        20010
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 2,
      "value": "0x943"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "op": "SUB"
    },
    "2331": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19978,
        19984
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2364": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19978,
        19997
      ],
      "op": "AND",
      "path": "23"
    },
    "2365": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19998,
        20000
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2366": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20002,
        20009
      ],
      "op": "DUP6",
      "path": "23"
    },
    "2367": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19978,
        19997
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "2370": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        19978,
        20010
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2371": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19978,
        20010
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2372": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20024,
        20035
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2373": {
      "branch": 216,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20024,
        20035
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "2374": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20020,
        20069
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x97D"
    },
    "2377": {
      "branch": 216,
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20020,
        20069
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2378": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20037,
        20069
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 3,
      "value": "0x97D"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2387": {
      "op": "SHL"
    },
    "2388": {
      "op": "SUB"
    },
    "2389": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20037,
        20043
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2422": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20037,
        20056
      ],
      "op": "AND",
      "path": "23"
    },
    "2423": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20057,
        20059
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2424": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20061,
        20068
      ],
      "op": "DUP5",
      "path": "23"
    },
    "2425": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20037,
        20056
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "2428": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "i",
      "offset": [
        20037,
        20069
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2429": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        20037,
        20069
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2430": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "POP",
      "path": "23"
    },
    "2431": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "POP",
      "path": "23"
    },
    "2432": {
      "fn": "AlphaVault.collectProtocol",
      "offset": [
        19694,
        20076
      ],
      "op": "POP",
      "path": "23"
    },
    "2433": {
      "fn": "AlphaVault.collectProtocol",
      "jump": "o",
      "offset": [
        19694,
        20076
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2434": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2435": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x3"
    },
    "2437": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2438": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2439": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2441": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2442": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2443": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2445": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2447": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2451": {
      "op": "NOT"
    },
    "2452": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2455": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2457": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2458": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "2"
    },
    "2459": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2460": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "2"
    },
    "2461": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2462": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2463": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2464": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "2"
    },
    "2465": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2466": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2467": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2468": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "2"
    },
    "2469": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2470": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2471": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2472": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2473": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2474": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "2"
    },
    "2475": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2476": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "2"
    },
    "2477": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2478": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2479": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2480": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2481": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2482": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2483": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2484": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2485": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2486": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2487": {
      "fn": "ERC20.name",
      "offset": [
        2213,
        2226
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2489": {
      "fn": "ERC20.name",
      "offset": [
        2213,
        2226
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2490": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2491": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2492": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2493": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2494": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2495": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2496": {
      "fn": "ERC20.name",
      "offset": [
        2245,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2497": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2498": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2499": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2500": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0E"
    },
    "2503": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2504": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2505": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2507": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "LT",
      "path": "2"
    },
    "2508": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E3"
    },
    "2511": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2512": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2515": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2516": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2517": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2518": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DIV",
      "path": "2"
    },
    "2519": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MUL",
      "path": "2"
    },
    "2520": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2521": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2522": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2523": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2525": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2526": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2527": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0E"
    },
    "2530": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2531": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2532": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2533": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2534": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2535": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2536": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2538": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2539": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2541": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2543": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2544": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2545": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2546": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2547": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2548": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2549": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2550": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2551": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2553": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2554": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2555": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2558": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2559": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2560": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "GT",
      "path": "2"
    },
    "2561": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F1"
    },
    "2564": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2565": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2566": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2567": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SUB",
      "path": "2"
    },
    "2568": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2570": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "AND",
      "path": "2"
    },
    "2571": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2572": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "ADD",
      "path": "2"
    },
    "2573": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2574": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2575": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2576": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2577": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2578": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2579": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2580": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2581": {
      "fn": "ERC20.name",
      "offset": [
        2238,
        2250
      ],
      "op": "POP",
      "path": "2"
    },
    "2582": {
      "fn": "ERC20.name",
      "offset": [
        2168,
        2257
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2583": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2168,
        2257
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2584": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2585": {
      "fn": "ERC20.approve",
      "offset": [
        4327,
        4331
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2587": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4382
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0xA2C"
    },
    "2590": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA25"
    },
    "2593": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "2596": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4352,
        4364
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2597": {
      "fn": "ERC20.approve",
      "offset": [
        4352,
        4364
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2598": {
      "fn": "ERC20.approve",
      "offset": [
        4366,
        4373
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2599": {
      "fn": "ERC20.approve",
      "offset": [
        4375,
        4381
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2600": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4351
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224E"
    },
    "2603": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4343,
        4382
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2604": {
      "fn": "ERC20.approve",
      "offset": [
        4343,
        4382
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2605": {
      "op": "POP"
    },
    "2606": {
      "fn": "ERC20.approve",
      "offset": [
        4399,
        4403
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x1"
    },
    "2608": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2609": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2610": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2611": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "POP",
      "path": "2"
    },
    "2612": {
      "fn": "ERC20.approve",
      "offset": [
        4244,
        4410
      ],
      "op": "POP",
      "path": "2"
    },
    "2613": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4244,
        4410
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2614": {
      "offset": [
        1770,
        1800
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2615": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2648": {
      "fn": "ERC20.approve",
      "offset": [
        1770,
        1800
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2649": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        1770,
        1800
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2650": {
      "offset": [
        2134,
        2157
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2651": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "2653": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2658": {
      "op": "SHL"
    },
    "2659": {
      "offset": [
        2134,
        2157
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2660": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "DIV",
      "path": "23"
    },
    "2661": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2663": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "2664": {
      "fn": "ERC20.approve",
      "offset": [
        2134,
        2157
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2665": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2134,
        2157
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2666": {
      "offset": [
        1728,
        1764
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2667": {
      "fn": "ERC20.approve",
      "offset": [
        1728,
        1764
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "2700": {
      "fn": "ERC20.approve",
      "offset": [
        1728,
        1764
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2701": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        1728,
        1764
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2702": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2703": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3322,
        3334
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x2"
    },
    "2705": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3322,
        3334
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2706": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3235,
        3341
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2707": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3235,
        3341
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2708": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22191,
        22339
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2709": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22260,
        22277
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 8,
      "value": "0xB"
    },
    "2711": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22260,
        22277
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2718": {
      "op": "SHL"
    },
    "2719": {
      "op": "SUB"
    },
    "2720": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22260,
        22277
      ],
      "op": "AND",
      "path": "23"
    },
    "2721": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22246,
        22256
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2722": {
      "branch": 217,
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22246,
        22277
      ],
      "op": "EQ",
      "path": "23"
    },
    "2723": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xAE7"
    },
    "2726": {
      "branch": 217,
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2727": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2729": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2730": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2737": {
      "op": "SHL"
    },
    "2738": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2739": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2740": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2742": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2744": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2745": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "ADD",
      "path": "23"
    },
    "2746": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2747": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "2749": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "2751": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2752": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "ADD",
      "path": "23"
    },
    "2753": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2754": {
      "op": "PUSH17",
      "value": "0x70656E64696E67476F7665726E616E6365"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "2777": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2778": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "ADD",
      "path": "23"
    },
    "2779": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2780": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2781": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2782": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2783": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2784": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2785": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "SUB",
      "path": "23"
    },
    "2786": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "2788": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "ADD",
      "path": "23"
    },
    "2789": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2790": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "REVERT",
      "path": "23"
    },
    "2791": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22238,
        22299
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2792": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22319
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 9,
      "value": "0xA"
    },
    "2794": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22332
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2795": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22332
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "op": "NOT"
    },
    "2805": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22332
      ],
      "op": "AND",
      "path": "23"
    },
    "2806": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22322,
        22332
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2807": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22332
      ],
      "op": "OR",
      "path": "23"
    },
    "2808": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22332
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2809": {
      "fn": "AlphaVault.acceptGovernance",
      "offset": [
        22309,
        22332
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "2810": {
      "fn": "AlphaVault.acceptGovernance",
      "jump": "o",
      "offset": [
        22191,
        22339
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2811": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2812": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4983,
        4987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2814": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5035
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xB08"
    },
    "2817": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5009,
        5015
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2818": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5017,
        5026
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2819": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5028,
        5034
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2820": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233A"
    },
    "2823": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4999,
        5035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2824": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2825": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5166
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0xB78"
    },
    "2828": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5054,
        5060
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2829": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB14"
    },
    "2832": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5072
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "2835": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5062,
        5074
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2836": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5062,
        5074
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2837": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB73"
    },
    "2840": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5114,
        5120
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2841": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2843": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2844": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2845": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2847": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "ADD",
      "path": "2"
    },
    "2848": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2850": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2851": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2852": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "2854": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2855": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2856": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2858": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "ADD",
      "path": "2"
    },
    "2859": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CCF"
    },
    "2862": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x28"
    },
    "2864": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2865": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "op": "SUB"
    },
    "2874": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP11",
      "path": "2"
    },
    "2875": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "AND",
      "path": "2"
    },
    "2876": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2878": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2879": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2880": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2881": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2883": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2885": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2886": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2889": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2890": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5095
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2891": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB52"
    },
    "2894": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5106
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "2897": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5096,
        5108
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2898": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5096,
        5108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2905": {
      "op": "SHL"
    },
    "2906": {
      "op": "SUB"
    },
    "2907": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "AND",
      "path": "2"
    },
    "2908": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2909": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2910": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2912": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2913": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "ADD",
      "path": "2"
    },
    "2914": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2915": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2916": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2917": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2918": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2920": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "ADD",
      "path": "2"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2923": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2924": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2925": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5109
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2926": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2927": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2495"
    },
    "2930": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5076,
        5165
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2931": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5076,
        5165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2932": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5053
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224E"
    },
    "2935": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5045,
        5166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2936": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5045,
        5166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2937": {
      "op": "POP"
    },
    "2938": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5183,
        5187
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "2940": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2941": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2942": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2943": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "2"
    },
    "2944": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "2"
    },
    "2945": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4877,
        5194
      ],
      "op": "POP",
      "path": "2"
    },
    "2946": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4877,
        5194
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2947": {
      "offset": [
        1915,
        1944
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2948": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1915,
        1944
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "2950": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1915,
        1944
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2951": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1915,
        1944
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2952": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        1915,
        1944
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2953": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2954": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x5"
    },
    "2956": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2957": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2959": {
      "fn": "ERC20.decimals",
      "offset": [
        3159,
        3168
      ],
      "op": "AND",
      "path": "2"
    },
    "2960": {
      "fn": "ERC20.decimals",
      "offset": [
        3086,
        3175
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2961": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3086,
        3175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2962": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20570,
        20671
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2963": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "2965": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "SUB"
    },
    "2974": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "2975": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "2976": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "2977": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xBDE"
    },
    "2980": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2981": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2983": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "2984": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2993": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2994": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2996": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2998": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2999": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "3000": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3001": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "3003": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3005": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3006": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "3007": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3008": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3021": {
      "op": "SHL"
    },
    "3022": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3024": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3025": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "3026": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3027": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3028": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3029": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3030": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3031": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3032": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "3033": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3035": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "3036": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3037": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3038": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3039": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20652
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 14,
      "value": "0x9"
    },
    "3041": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3042": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3049": {
      "op": "SHL"
    },
    "3050": {
      "op": "SUB"
    },
    "3051": {
      "op": "NOT"
    },
    "3052": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "AND",
      "path": "23"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "op": "SUB"
    },
    "3061": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3062": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3063": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3064": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "AND",
      "path": "23"
    },
    "3065": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3066": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3067": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3068": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "OR",
      "path": "23"
    },
    "3069": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3070": {
      "fn": "AlphaVault.setStrategy",
      "offset": [
        20644,
        20664
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3071": {
      "fn": "AlphaVault.setStrategy",
      "jump": "o",
      "offset": [
        20570,
        20671
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3072": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3073": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4092,
        4106
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3075": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4120,
        4135
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3076": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4149,
        4164
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3078": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3080": {
      "offset": [
        2277,
        2284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3082": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2277,
        2284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3083": {
      "offset": [
        2277,
        2296
      ],
      "op": "EQ",
      "path": "7"
    },
    "3084": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2277,
        2296
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3085": {
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC5D"
    },
    "3088": {
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3089": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3091": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3092": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3099": {
      "op": "SHL"
    },
    "3100": {
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3101": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3102": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3104": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3106": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3107": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "3108": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3109": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3111": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "3113": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3114": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "3115": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3116": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3149": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "3151": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3152": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "3153": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3154": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3155": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3156": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3157": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3158": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3159": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SUB",
      "path": "7"
    },
    "3160": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "3162": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "3163": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3164": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "REVERT",
      "path": "7"
    },
    "3165": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3166": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3168": {
      "offset": [
        2407,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3170": {
      "offset": [
        2407,
        2425
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3171": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4215
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 15
    },
    "3172": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4215
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3173": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4215
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3174": {
      "branch": 218,
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4215
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3175": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4237
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xC70"
    },
    "3178": {
      "branch": 218,
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4237
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3179": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4237
      ],
      "op": "POP",
      "path": "23"
    },
    "3180": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4236,
        4237
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "3182": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4219,
        4233
      ],
      "op": "DUP8",
      "path": "23"
    },
    "3183": {
      "branch": 219,
      "fn": "AlphaVault.deposit",
      "offset": [
        4219,
        4237
      ],
      "op": "GT",
      "path": "23"
    },
    "3184": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4197,
        4237
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3185": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCC1"
    },
    "3188": {
      "branch": 219,
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3189": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3191": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3192": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3201": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3202": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3204": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3206": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3207": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "ADD",
      "path": "23"
    },
    "3208": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3209": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3210": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3211": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3213": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3214": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "ADD",
      "path": "23"
    },
    "3215": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3216": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x616D6F756E743044657369726564206F7220616D6F756E743144657369726564"
    },
    "3249": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3251": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3252": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "ADD",
      "path": "23"
    },
    "3253": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3254": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3255": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3256": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3257": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3258": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3259": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "SUB",
      "path": "23"
    },
    "3260": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3262": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "ADD",
      "path": "23"
    },
    "3263": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3264": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3265": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4189,
        4274
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "SUB"
    },
    "3274": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4308
      ],
      "op": "DUP5",
      "path": "23",
      "statement": 16
    },
    "3275": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4308
      ],
      "op": "AND",
      "path": "23"
    },
    "3276": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4308
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3277": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4308
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3278": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4308
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3279": {
      "branch": 220,
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4308
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3280": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4331
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCE2"
    },
    "3283": {
      "branch": 220,
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4331
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3284": {
      "op": "POP"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3291": {
      "op": "SHL"
    },
    "3292": {
      "op": "SUB"
    },
    "3293": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4312,
        4331
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3294": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4312,
        4331
      ],
      "op": "AND",
      "path": "23"
    },
    "3295": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4326,
        4330
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3296": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4312,
        4331
      ],
      "op": "EQ",
      "path": "23"
    },
    "3297": {
      "branch": 221,
      "fn": "AlphaVault.deposit",
      "offset": [
        4312,
        4331
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3298": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4292,
        4331
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3299": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD18"
    },
    "3302": {
      "branch": 221,
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3303": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3305": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3306": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3307": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3315": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3316": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3318": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3320": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3321": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "ADD",
      "path": "23"
    },
    "3322": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3323": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3325": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3327": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3328": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "ADD",
      "path": "23"
    },
    "3329": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3330": {
      "op": "PUSH2",
      "value": "0x746F"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "3335": {
      "op": "SHL"
    },
    "3336": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3338": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3339": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "ADD",
      "path": "23"
    },
    "3340": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3341": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3342": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3343": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3344": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3345": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3346": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "SUB",
      "path": "23"
    },
    "3347": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3349": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "ADD",
      "path": "23"
    },
    "3350": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3351": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3352": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4284,
        4338
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3353": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 17,
      "value": "0xB"
    },
    "3355": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3356": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4418,
        4445
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD3A"
    },
    "3359": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4418,
        4445
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3366": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "DIV",
      "path": "23"
    },
    "3367": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3369": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3370": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3371": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3372": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4424,
        4433
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3377": {
      "op": "SHL"
    },
    "3378": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4435,
        4444
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3379": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4435,
        4444
      ],
      "op": "DIV",
      "path": "23"
    },
    "3380": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4435,
        4444
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3381": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4435,
        4444
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3382": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4418,
        4423
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x252C"
    },
    "3385": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4418,
        4445
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3386": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4418,
        4445
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3387": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 18,
      "value": "0xB"
    },
    "3389": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3390": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4455,
        4484
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xD5C"
    },
    "3393": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4455,
        4484
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3400": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "DIV",
      "path": "23"
    },
    "3401": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "3403": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3404": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3405": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3406": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4461,
        4471
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "3411": {
      "op": "SHL"
    },
    "3412": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4473,
        4483
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3413": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4473,
        4483
      ],
      "op": "DIV",
      "path": "23"
    },
    "3414": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4473,
        4483
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3415": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4473,
        4483
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "3416": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4455,
        4460
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x252C"
    },
    "3419": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4455,
        4484
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3420": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4455,
        4484
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3421": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4586,
        4639
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 19,
      "value": "0xD66"
    },
    "3424": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4608,
        4622
      ],
      "op": "DUP9",
      "path": "23"
    },
    "3425": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4624,
        4638
      ],
      "op": "DUP9",
      "path": "23"
    },
    "3426": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4586,
        4607
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25CC"
    },
    "3429": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4586,
        4639
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3430": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4586,
        4639
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3431": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4557,
        4639
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3432": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4557,
        4639
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "3433": {
      "op": "POP"
    },
    "3434": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4557,
        4639
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4557,
        4639
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "branch": 222,
      "fn": "AlphaVault.deposit",
      "offset": [
        4657,
        4667
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 20
    },
    "3439": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDA8"
    },
    "3442": {
      "branch": 222,
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3443": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3445": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3446": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3453": {
      "op": "SHL"
    },
    "3454": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3455": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3456": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3458": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3460": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3461": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "ADD",
      "path": "23"
    },
    "3462": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3463": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "3465": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3467": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3468": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "ADD",
      "path": "23"
    },
    "3469": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3470": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3479": {
      "op": "SHL"
    },
    "3480": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3482": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3483": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "ADD",
      "path": "23"
    },
    "3484": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3485": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3486": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3487": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3488": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3489": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3490": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "SUB",
      "path": "23"
    },
    "3491": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3493": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "ADD",
      "path": "23"
    },
    "3494": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3495": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3496": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4649,
        4678
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3497": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4707,
        4717
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 21
    },
    "3498": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4696,
        4703
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3499": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4696,
        4717
      ],
      "op": "LT",
      "path": "23"
    },
    "3500": {
      "branch": 223,
      "fn": "AlphaVault.deposit",
      "offset": [
        4696,
        4717
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3501": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xDEA"
    },
    "3504": {
      "branch": 223,
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3505": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3507": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3508": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3517": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3518": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3520": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3522": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3523": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "ADD",
      "path": "23"
    },
    "3524": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3525": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "3527": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3529": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3530": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "ADD",
      "path": "23"
    },
    "3531": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3532": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A1826B4B7"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3545": {
      "op": "SHL"
    },
    "3546": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3548": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3549": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "ADD",
      "path": "23"
    },
    "3550": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3551": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3552": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3553": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3554": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3555": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3556": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "SUB",
      "path": "23"
    },
    "3557": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3559": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "ADD",
      "path": "23"
    },
    "3560": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3561": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3562": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4688,
        4732
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3563": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4761,
        4771
      ],
      "op": "DUP5",
      "path": "23",
      "statement": 22
    },
    "3564": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4750,
        4757
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3565": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4750,
        4771
      ],
      "op": "LT",
      "path": "23"
    },
    "3566": {
      "branch": 224,
      "fn": "AlphaVault.deposit",
      "offset": [
        4750,
        4771
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3567": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE2C"
    },
    "3570": {
      "branch": 224,
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3571": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3573": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3574": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3581": {
      "op": "SHL"
    },
    "3582": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3583": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3584": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3586": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3588": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3589": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "ADD",
      "path": "23"
    },
    "3590": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3591": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "3593": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3595": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3596": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "ADD",
      "path": "23"
    },
    "3597": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3598": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A18A6B4B7"
    },
    "3609": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3611": {
      "op": "SHL"
    },
    "3612": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3614": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3615": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "ADD",
      "path": "23"
    },
    "3616": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3617": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3618": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3619": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3620": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3621": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3622": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "SUB",
      "path": "23"
    },
    "3623": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3625": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "ADD",
      "path": "23"
    },
    "3626": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3627": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3628": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4742,
        4786
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3629": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4839,
        4850
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3630": {
      "branch": 225,
      "fn": "AlphaVault.deposit",
      "offset": [
        4839,
        4850
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3631": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4835,
        4911
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xE67"
    },
    "3634": {
      "branch": 225,
      "fn": "AlphaVault.deposit",
      "offset": [
        4835,
        4911
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3635": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4852,
        4911
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 23,
      "value": "0xE67"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3644": {
      "op": "SHL"
    },
    "3645": {
      "op": "SUB"
    },
    "3646": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4852,
        4858
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "3679": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4852,
        4875
      ],
      "op": "AND",
      "path": "23"
    },
    "3680": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4876,
        4886
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3681": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4896,
        4900
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3682": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4903,
        4910
      ],
      "op": "DUP6",
      "path": "23"
    },
    "3683": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4852,
        4875
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26F8"
    },
    "3686": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4852,
        4911
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3687": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4852,
        4911
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3688": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4925,
        4936
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3689": {
      "branch": 226,
      "fn": "AlphaVault.deposit",
      "offset": [
        4925,
        4936
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3690": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4921,
        4997
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xEA2"
    },
    "3693": {
      "branch": 226,
      "fn": "AlphaVault.deposit",
      "offset": [
        4921,
        4997
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3694": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4938,
        4997
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 24,
      "value": "0xEA2"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3703": {
      "op": "SHL"
    },
    "3704": {
      "op": "SUB"
    },
    "3705": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4938,
        4944
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "3738": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4938,
        4961
      ],
      "op": "AND",
      "path": "23"
    },
    "3739": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4962,
        4972
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3740": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4982,
        4986
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "3741": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4989,
        4996
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3742": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4938,
        4961
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26F8"
    },
    "3745": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        4938,
        4997
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3746": {
      "fn": "AlphaVault.deposit",
      "offset": [
        4938,
        4997
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3747": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5044,
        5061
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 25,
      "value": "0xEAC"
    },
    "3750": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5050,
        5052
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3751": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5054,
        5060
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3752": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5044,
        5049
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2752"
    },
    "3755": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        5044,
        5061
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3756": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5044,
        5061
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3757": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 26,
      "value": "0x40"
    },
    "3759": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3760": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3761": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3762": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3763": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3764": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3766": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3767": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "ADD",
      "path": "23"
    },
    "3768": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3769": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3770": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3771": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3772": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3773": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "ADD",
      "path": "23"
    },
    "3774": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP4",
      "path": "23"
    },
    "3775": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3776": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3777": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3778": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "SUB"
    },
    "3787": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP7",
      "path": "23"
    },
    "3788": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "AND",
      "path": "23"
    },
    "3789": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3790": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5084,
        5094
      ],
      "op": "CALLER",
      "path": "23"
    },
    "3791": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5084,
        5094
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3792": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x4E2CA0515ED1AEF1395F66B5303BB5D6F1BF9D61A353FA53F73F8AC9973FA9F6"
    },
    "3825": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3826": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3827": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3828": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SUB",
      "path": "23"
    },
    "3829": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "3831": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "ADD",
      "path": "23"
    },
    "3832": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3833": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5076,
        5125
      ],
      "op": "LOG3",
      "path": "23"
    },
    "3834": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5160,
        5174
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 27,
      "value": "0x8"
    },
    "3836": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5160,
        5174
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3837": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5143,
        5156
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF04"
    },
    "3840": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5143,
        5154
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA8E"
    },
    "3843": {
      "fn": "AlphaVault.deposit",
      "jump": "i",
      "offset": [
        5143,
        5156
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3844": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5143,
        5156
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3845": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5143,
        5174
      ],
      "op": "GT",
      "path": "23"
    },
    "3846": {
      "branch": 227,
      "fn": "AlphaVault.deposit",
      "offset": [
        5143,
        5174
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "3847": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xF48"
    },
    "3850": {
      "branch": 227,
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "3851": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3853": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3854": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3855": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3861": {
      "op": "SHL"
    },
    "3862": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3863": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3864": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3866": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "3868": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3869": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "ADD",
      "path": "23"
    },
    "3870": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3871": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE"
    },
    "3873": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "3875": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3876": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "ADD",
      "path": "23"
    },
    "3877": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3878": {
      "op": "PUSH14",
      "value": "0x6D6178546F74616C537570706C79"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "3895": {
      "op": "SHL"
    },
    "3896": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "3898": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3899": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "ADD",
      "path": "23"
    },
    "3900": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3901": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3902": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "3903": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3904": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3905": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3906": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "SUB",
      "path": "23"
    },
    "3907": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "3909": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "ADD",
      "path": "23"
    },
    "3910": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3911": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "REVERT",
      "path": "23"
    },
    "3912": {
      "fn": "AlphaVault.deposit",
      "offset": [
        5135,
        5193
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3913": {
      "offset": [
        1645,
        1646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3915": {
      "offset": [
        2580,
        2587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "3917": {
      "offset": [
        2580,
        2602
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3918": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2580,
        2602
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3919": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2580,
        2602
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3920": {
      "fn": "AlphaVault.deposit",
      "offset": [
        2580,
        2602
      ],
      "op": "POP",
      "path": "7"
    },
    "3921": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "3922": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "POP",
      "path": "23"
    },
    "3923": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "3924": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "POP",
      "path": "23"
    },
    "3925": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "3926": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "3927": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "POP",
      "path": "23"
    },
    "3928": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "POP",
      "path": "23"
    },
    "3929": {
      "fn": "AlphaVault.deposit",
      "offset": [
        3844,
        5200
      ],
      "op": "POP",
      "path": "23"
    },
    "3930": {
      "fn": "AlphaVault.deposit",
      "jump": "o",
      "offset": [
        3844,
        5200
      ],
      "op": "JUMP",
      "path": "23"
    },
    "3931": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5589,
        5804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3932": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5677,
        5681
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3934": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5693,
        5776
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0xA2C"
    },
    "3937": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF68"
    },
    "3940": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5712
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "3943": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5702,
        5714
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5702,
        5714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3945": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5716,
        5723
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3946": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB73"
    },
    "3949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5764,
        5774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3950": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5736
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3952": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3954": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF79"
    },
    "3957": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "3960": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5737,
        5749
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3961": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5737,
        5749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3968": {
      "op": "SHL"
    },
    "3969": {
      "op": "SUB"
    },
    "3970": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3971": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3972": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "AND",
      "path": "2"
    },
    "3973": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3974": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3975": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3977": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3978": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3979": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "ADD",
      "path": "2"
    },
    "3980": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3981": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3982": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3983": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3984": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3986": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3987": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3988": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "ADD",
      "path": "2"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3991": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3992": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3993": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5750
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3994": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3995": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "DUP13",
      "path": "2"
    },
    "3996": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "AND",
      "path": "2"
    },
    "3997": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3998": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3999": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4000": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4001": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4002": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4003": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4004": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4005": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5725,
        5763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2842"
    },
    "4008": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5725,
        5775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4009": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21267,
        21392
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4010": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4012": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4019": {
      "op": "SHL"
    },
    "4020": {
      "op": "SUB"
    },
    "4021": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "4022": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4023": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "4024": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFF5"
    },
    "4027": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4028": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4030": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4031": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4032": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4038": {
      "op": "SHL"
    },
    "4039": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4040": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4041": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4043": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4045": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4046": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4047": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4048": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4050": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4052": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4053": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4054": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4055": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4068": {
      "op": "SHL"
    },
    "4069": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4071": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4072": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4073": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4074": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4075": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4076": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4077": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4078": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4079": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "4080": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4082": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4083": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4084": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4085": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4086": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21353,
        21367
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 29,
      "value": "0x8"
    },
    "4088": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "offset": [
        21353,
        21385
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "4089": {
      "fn": "AlphaVault.setMaxTotalSupply",
      "jump": "o",
      "offset": [
        21267,
        21392
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4090": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16933,
        17067
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4091": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16977,
        16984
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4093": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17060
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 30,
      "value": "0x10A1"
    },
    "4096": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17039,
        17059
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "4098": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17039,
        17059
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4099": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17009
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4138": {
      "op": "SHL"
    },
    "4139": {
      "op": "SUB"
    },
    "4140": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17019
      ],
      "op": "AND",
      "path": "23"
    },
    "4141": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17019
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "4146": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17028,
        17032
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "4147": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4149": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4150": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4151": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "4156": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "AND",
      "path": "23"
    },
    "4157": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4159": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "SHL",
      "path": "23"
    },
    "4160": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4161": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4162": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4164": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ADD",
      "path": "23"
    },
    "4165": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4166": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "op": "SUB"
    },
    "4175": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "AND",
      "path": "23"
    },
    "4176": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4177": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4178": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4180": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ADD",
      "path": "23"
    },
    "4181": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4182": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4183": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4184": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4186": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4188": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4189": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4190": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4191": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "SUB",
      "path": "23"
    },
    "4192": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4193": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4194": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4195": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4196": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4197": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4198": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4199": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x106F"
    },
    "4202": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4203": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4205": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4206": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4207": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4208": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4209": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "GAS",
      "path": "23"
    },
    "4210": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "4211": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4212": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4213": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4214": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1083"
    },
    "4217": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4218": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4219": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4221": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4222": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4223": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4224": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4226": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4227": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4228": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4229": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4230": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4231": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "POP",
      "path": "23"
    },
    "4232": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4234": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4235": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4236": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4238": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4239": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "LT",
      "path": "23"
    },
    "4240": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4241": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1099"
    },
    "4244": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4245": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4247": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4248": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4249": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4250": {
      "op": "POP"
    },
    "4251": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4252": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17034
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4253": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17038
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "4256": {
      "fn": "AlphaVault.getBalance1",
      "jump": "i",
      "offset": [
        17003,
        17060
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4257": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        17003,
        17060
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4258": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16996,
        17060
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4259": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16996,
        17060
      ],
      "op": "POP",
      "path": "23"
    },
    "4260": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        16933,
        17067
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4261": {
      "fn": "AlphaVault.getBalance1",
      "jump": "o",
      "offset": [
        16933,
        17067
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4262": {
      "offset": [
        2105,
        2128
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4263": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4265": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4270": {
      "op": "SHL"
    },
    "4271": {
      "offset": [
        2105,
        2128
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4272": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "DIV",
      "path": "23"
    },
    "4273": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "4275": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4276": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        2105,
        2128
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4277": {
      "fn": "AlphaVault.getBalance1",
      "jump": "o",
      "offset": [
        2105,
        2128
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4278": {
      "offset": [
        1979,
        2004
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4279": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        1979,
        2004
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4281": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        1979,
        2004
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4288": {
      "op": "SHL"
    },
    "4289": {
      "op": "SUB"
    },
    "4290": {
      "offset": [
        1979,
        2004
      ],
      "op": "AND",
      "path": "23"
    },
    "4291": {
      "fn": "AlphaVault.getBalance1",
      "offset": [
        1979,
        2004
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4292": {
      "fn": "AlphaVault.getBalance1",
      "jump": "o",
      "offset": [
        1979,
        2004
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4293": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16709,
        16843
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4294": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16753,
        16760
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4296": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16836
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 31,
      "value": "0x10A1"
    },
    "4299": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16815,
        16835
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "4301": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16815,
        16835
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4302": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16785
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "op": "SUB"
    },
    "4343": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16795
      ],
      "op": "AND",
      "path": "23"
    },
    "4344": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16795
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x70A08231"
    },
    "4349": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16804,
        16808
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "4350": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4352": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4353": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4354": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "4359": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "AND",
      "path": "23"
    },
    "4360": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4362": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "SHL",
      "path": "23"
    },
    "4363": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4364": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4365": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4367": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "ADD",
      "path": "23"
    },
    "4368": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4369": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4376": {
      "op": "SHL"
    },
    "4377": {
      "op": "SUB"
    },
    "4378": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "AND",
      "path": "23"
    },
    "4379": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4380": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4381": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4383": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "ADD",
      "path": "23"
    },
    "4384": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "4385": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "POP",
      "path": "23"
    },
    "4386": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "POP",
      "path": "23"
    },
    "4387": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4389": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4391": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4392": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4393": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4394": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "SUB",
      "path": "23"
    },
    "4395": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4396": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4397": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4398": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4399": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4400": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4401": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4402": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x106F"
    },
    "4405": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4406": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4408": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4409": {
      "fn": "AlphaVault.getBalance0",
      "offset": [
        16779,
        16810
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4410": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "op": "SUB"
    },
    "4419": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 32
    },
    "4420": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "AND",
      "path": "2"
    },
    "4421": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3473,
        3480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4423": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4424": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4425": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4426": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4428": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4429": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4430": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4431": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4433": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4434": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4435": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3499,
        3517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4436": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4437": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4438": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4439": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3399,
        3524
      ],
      "op": "POP",
      "path": "2"
    },
    "4440": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3399,
        3524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4441": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20820,
        20985
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4442": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4444": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4451": {
      "op": "SHL"
    },
    "4452": {
      "op": "SUB"
    },
    "4453": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "4454": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4455": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "4456": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11A5"
    },
    "4459": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4460": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4462": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4463": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4464": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4470": {
      "op": "SHL"
    },
    "4471": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4472": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4473": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4475": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4477": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4478": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4479": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4480": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "4482": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4484": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4485": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4486": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4487": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4500": {
      "op": "SHL"
    },
    "4501": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4503": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4504": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4505": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4506": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4507": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4508": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4509": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4510": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4511": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "4512": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4514": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "4515": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4516": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4517": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4518": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20923,
        20926
      ],
      "op": "PUSH3",
      "path": "23",
      "statement": 33,
      "value": "0xF4240"
    },
    "4522": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20908,
        20920
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4523": {
      "branch": 228,
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20908,
        20926
      ],
      "op": "LT",
      "path": "23"
    },
    "4524": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x11EA"
    },
    "4527": {
      "branch": 228,
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4528": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4530": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4531": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4532": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4540": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4541": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4543": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4545": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4546": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "ADD",
      "path": "23"
    },
    "4547": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4548": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "4550": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4552": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4553": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "ADD",
      "path": "23"
    },
    "4554": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4555": {
      "op": "PUSH11",
      "value": "0x70726F746F636F6C466565"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4569": {
      "op": "SHL"
    },
    "4570": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4572": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4573": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "ADD",
      "path": "23"
    },
    "4574": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4575": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4576": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4577": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4578": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4579": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4580": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "SUB",
      "path": "23"
    },
    "4581": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4583": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "ADD",
      "path": "23"
    },
    "4584": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4585": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4586": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20900,
        20942
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4587": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20952,
        20963
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 34,
      "value": "0x7"
    },
    "4589": {
      "fn": "AlphaVault.setProtocolFee",
      "offset": [
        20952,
        20978
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "4590": {
      "fn": "AlphaVault.setProtocolFee",
      "jump": "o",
      "offset": [
        20820,
        20985
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4591": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10253,
        12725
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4592": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4594": {
      "offset": [
        2277,
        2284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4596": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2277,
        2284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4597": {
      "offset": [
        2277,
        2296
      ],
      "op": "EQ",
      "path": "7"
    },
    "4598": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2277,
        2296
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4599": {
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1247"
    },
    "4602": {
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4603": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4605": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4606": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4607": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4611": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4613": {
      "op": "SHL"
    },
    "4614": {
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4615": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4616": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4618": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4620": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4621": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4622": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4623": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "4625": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "4627": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4628": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4629": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4630": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "4663": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "4665": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4666": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4667": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4668": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4669": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4670": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4671": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4672": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4673": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SUB",
      "path": "7"
    },
    "4674": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "4676": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "4677": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4678": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "REVERT",
      "path": "7"
    },
    "4679": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4680": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4682": {
      "offset": [
        2407,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "4684": {
      "offset": [
        2407,
        2425
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4685": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10546,
        10554
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 35,
      "value": "0x9"
    },
    "4687": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10546,
        10554
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "op": "SUB"
    },
    "4696": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10546,
        10554
      ],
      "op": "AND",
      "path": "23"
    },
    "4697": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10532,
        10542
      ],
      "op": "CALLER",
      "path": "23"
    },
    "4698": {
      "branch": 229,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10532,
        10554
      ],
      "op": "EQ",
      "path": "23"
    },
    "4699": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1296"
    },
    "4702": {
      "branch": 229,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4703": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4705": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4706": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4713": {
      "op": "SHL"
    },
    "4714": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4715": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4716": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4718": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4720": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4721": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "ADD",
      "path": "23"
    },
    "4722": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4723": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "4725": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4727": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4728": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "ADD",
      "path": "23"
    },
    "4729": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4730": {
      "op": "PUSH8",
      "value": "0x7374726174656779"
    },
    "4739": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4741": {
      "op": "SHL"
    },
    "4742": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4744": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4745": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "ADD",
      "path": "23"
    },
    "4746": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4747": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4748": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4749": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4750": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4751": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4752": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "SUB",
      "path": "23"
    },
    "4753": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4755": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "ADD",
      "path": "23"
    },
    "4756": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4757": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4758": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10524,
        10567
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4759": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10577,
        10612
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 36,
      "value": "0x12A0"
    },
    "4762": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10589,
        10599
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4763": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10601,
        10611
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4764": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10577,
        10588
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x289C"
    },
    "4767": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10577,
        10612
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4768": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10577,
        10612
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4769": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10622,
        10655
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 37,
      "value": "0x12AA"
    },
    "4772": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10634,
        10643
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4773": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10645,
        10654
      ],
      "op": "DUP5",
      "path": "23"
    },
    "4774": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10622,
        10633
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x289C"
    },
    "4777": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10622,
        10655
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4778": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10622,
        10655
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4779": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10665,
        10698
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 38,
      "value": "0x12B4"
    },
    "4782": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10677,
        10686
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4783": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10688,
        10697
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4784": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10665,
        10676
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x289C"
    },
    "4787": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        10665,
        10698
      ],
      "op": "JUMP",
      "path": "23"
    },
    "4788": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10665,
        10698
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4789": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10712,
        10722
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4791": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10740
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4830": {
      "op": "SHL"
    },
    "4831": {
      "op": "SUB"
    },
    "4832": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10746
      ],
      "op": "AND",
      "path": "23"
    },
    "4833": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10746
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3850C7BD"
    },
    "4838": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4840": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4841": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4842": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "4847": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "AND",
      "path": "23"
    },
    "4848": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4850": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "SHL",
      "path": "23"
    },
    "4851": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4852": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4853": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4855": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ADD",
      "path": "23"
    },
    "4856": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4858": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4860": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4861": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4862": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP4",
      "path": "23"
    },
    "4863": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "SUB",
      "path": "23"
    },
    "4864": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4865": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP7",
      "path": "23"
    },
    "4866": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4867": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "4868": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4869": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4870": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4871": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x130F"
    },
    "4874": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4875": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4877": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4878": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4879": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4880": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "POP",
      "path": "23"
    },
    "4881": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "GAS",
      "path": "23"
    },
    "4882": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "4883": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4884": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4885": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4886": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1323"
    },
    "4889": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4890": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4891": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4893": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4894": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "4895": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4896": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4898": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4899": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4900": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "POP",
      "path": "23"
    },
    "4901": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "POP",
      "path": "23"
    },
    "4902": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "POP",
      "path": "23"
    },
    "4903": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "POP",
      "path": "23"
    },
    "4904": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4906": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4907": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "4908": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "4910": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4911": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "LT",
      "path": "23"
    },
    "4912": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4913": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1339"
    },
    "4916": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4917": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "4919": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4920": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4921": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "4922": {
      "op": "POP"
    },
    "4923": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4925": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "ADD",
      "path": "23"
    },
    "4926": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4927": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10736,
        10748
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4928": {
      "op": "POP"
    },
    "4929": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 39,
      "value": "0x2"
    },
    "4931": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4932": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4933": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4934": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4935": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "DUP6",
      "path": "23"
    },
    "4936": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4937": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "4938": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "SGT",
      "path": "23"
    },
    "4939": {
      "branch": 230,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10766,
        10783
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "4940": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1387"
    },
    "4943": {
      "branch": 230,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "4944": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "4946": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "DUP1",
      "path": "23"
    },
    "4947": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4954": {
      "op": "SHL"
    },
    "4955": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4956": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4957": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "4959": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "4961": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4962": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "ADD",
      "path": "23"
    },
    "4963": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4964": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "4966": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "4968": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4969": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "ADD",
      "path": "23"
    },
    "4970": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4971": {
      "op": "PUSH8",
      "value": "0x3134B22AB83832B9"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "4985": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "DUP3",
      "path": "23"
    },
    "4986": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "ADD",
      "path": "23"
    },
    "4987": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "4988": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4989": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "4990": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4991": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "DUP2",
      "path": "23"
    },
    "4992": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4993": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "SUB",
      "path": "23"
    },
    "4994": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "4996": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "ADD",
      "path": "23"
    },
    "4997": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "4998": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "REVERT",
      "path": "23"
    },
    "4999": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10758,
        10796
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5000": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10826,
        10830
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 40
    },
    "5001": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10814,
        10830
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5003": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10814,
        10830
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5004": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10814,
        10823
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5005": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10814,
        10830
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5007": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10814,
        10830
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5008": {
      "branch": 231,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10814,
        10830
      ],
      "op": "SGT",
      "path": "23"
    },
    "5009": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13CC"
    },
    "5012": {
      "branch": 231,
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5013": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5015": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5016": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5023": {
      "op": "SHL"
    },
    "5024": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5025": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5026": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5028": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5030": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5031": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "ADD",
      "path": "23"
    },
    "5032": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5033": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "5035": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "5037": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5038": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "ADD",
      "path": "23"
    },
    "5039": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5040": {
      "op": "PUSH8",
      "value": "0x30B9B5A637BBB2B9"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "5051": {
      "op": "SHL"
    },
    "5052": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "5054": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5055": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "ADD",
      "path": "23"
    },
    "5056": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5057": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5058": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5059": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5060": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5061": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5062": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "SUB",
      "path": "23"
    },
    "5063": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "5065": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "ADD",
      "path": "23"
    },
    "5066": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5067": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5068": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10806,
        10843
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5069": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "5071": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5072": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10977,
        10998
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5074": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10977,
        10998
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5075": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11010,
        11041
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x13F1"
    },
    "5078": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11010,
        11041
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5083": {
      "op": "SHL"
    },
    "5084": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5085": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "DIV",
      "path": "23"
    },
    "5086": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5088": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5089": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5090": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5091": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11020,
        11029
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "5096": {
      "op": "SHL"
    },
    "5097": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11031,
        11040
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5098": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11031,
        11040
      ],
      "op": "DIV",
      "path": "23"
    },
    "5099": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11031,
        11040
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5100": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11031,
        11040
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5101": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11010,
        11019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7C"
    },
    "5104": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11010,
        11041
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5105": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11010,
        11041
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "POP"
    },
    "5108": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "5110": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5111": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10976,
        11041
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5112": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        10976,
        11041
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5113": {
      "op": "POP"
    },
    "5114": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11056,
        11078
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5116": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11056,
        11078
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5117": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11090,
        11123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x141E"
    },
    "5120": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11090,
        11123
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5124": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5126": {
      "op": "SHL"
    },
    "5127": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5128": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "DIV",
      "path": "23"
    },
    "5129": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5131": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5132": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5133": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5134": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11100,
        11110
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5135": {
      "op": "POP"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5140": {
      "op": "SHL"
    },
    "5141": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11112,
        11122
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5142": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11112,
        11122
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5143": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11112,
        11122
      ],
      "op": "DIV",
      "path": "23"
    },
    "5144": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11112,
        11122
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5145": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11112,
        11122
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5146": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11090,
        11099
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7C"
    },
    "5149": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11090,
        11123
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5150": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11090,
        11123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "op": "POP"
    },
    "5153": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 41,
      "value": "0xB"
    },
    "5155": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5156": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11055,
        11123
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5157": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11055,
        11123
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5158": {
      "op": "POP"
    },
    "5159": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11137,
        11189
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x144A"
    },
    "5162": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11137,
        11189
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5167": {
      "op": "SHL"
    },
    "5168": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5169": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "DIV",
      "path": "23"
    },
    "5170": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5172": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5173": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5174": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5175": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11153,
        11162
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "5181": {
      "op": "SHL"
    },
    "5182": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11164,
        11173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5183": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11164,
        11173
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5184": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11164,
        11173
      ],
      "op": "DIV",
      "path": "23"
    },
    "5185": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11164,
        11173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5186": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11164,
        11173
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5187": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11164,
        11173
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5188": {
      "op": "POP"
    },
    "5189": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11175,
        11188
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5190": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11137,
        11152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B4B"
    },
    "5193": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11137,
        11189
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5194": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11137,
        11189
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5195": {
      "op": "POP"
    },
    "5196": {
      "op": "POP"
    },
    "5197": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 42,
      "value": "0xB"
    },
    "5199": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5200": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1472"
    },
    "5203": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5204": {
      "op": "POP"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5209": {
      "op": "SHL"
    },
    "5210": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5211": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "DIV",
      "path": "23"
    },
    "5212": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5214": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5215": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5216": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5217": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11219,
        11229
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5218": {
      "op": "POP"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5223": {
      "op": "SHL"
    },
    "5224": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11231,
        11241
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5225": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11231,
        11241
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5226": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11231,
        11241
      ],
      "op": "DIV",
      "path": "23"
    },
    "5227": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11231,
        11241
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5228": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11231,
        11241
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5229": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11243,
        11257
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5230": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11218
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B4B"
    },
    "5233": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11203,
        11258
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5234": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5235": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "POP",
      "path": "23"
    },
    "5236": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "POP",
      "path": "23"
    },
    "5237": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "POP",
      "path": "23"
    },
    "5238": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11203,
        11258
      ],
      "op": "POP",
      "path": "23"
    },
    "5239": {
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "5240": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "5241": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11334,
        11350
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5243": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11353,
        11366
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1482"
    },
    "5246": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11353,
        11364
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10C5"
    },
    "5249": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11353,
        11366
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5250": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11353,
        11366
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5251": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11334,
        11366
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5252": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11334,
        11366
      ],
      "op": "POP",
      "path": "23"
    },
    "5253": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11376,
        11392
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5255": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11395,
        11408
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x148E"
    },
    "5258": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11395,
        11406
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFA"
    },
    "5261": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11395,
        11408
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5262": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11395,
        11408
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5263": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11376,
        11408
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5264": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11376,
        11408
      ],
      "op": "POP",
      "path": "23"
    },
    "5265": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 43,
      "value": "0x210F60ADF1DB7A02E9DB9A49EC7C2EB2060C516CBCFD01A0C05288144738EE5D"
    },
    "5298": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11432,
        11436
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5299": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11438,
        11446
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5300": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11448,
        11456
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5301": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11458,
        11471
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x14BC"
    },
    "5304": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11458,
        11469
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA8E"
    },
    "5307": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11458,
        11471
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5308": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11458,
        11471
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5309": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5311": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5312": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5313": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5315": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5316": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5317": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5318": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5319": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5320": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5321": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5323": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5324": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "ADD",
      "path": "23"
    },
    "5325": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5326": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5327": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5328": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5329": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5330": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5331": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "ADD",
      "path": "23"
    },
    "5332": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5333": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5334": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5335": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5336": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "5338": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5339": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "ADD",
      "path": "23"
    },
    "5340": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5341": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5342": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5343": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5344": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5345": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SUB",
      "path": "23"
    },
    "5346": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "5348": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "ADD",
      "path": "23"
    },
    "5349": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5350": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11423,
        11472
      ],
      "op": "LOG1",
      "path": "23"
    },
    "5351": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11487,
        11502
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5352": {
      "branch": 232,
      "fn": "AlphaVault.rebalance",
      "offset": [
        11487,
        11502
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5353": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11483,
        11805
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15E2"
    },
    "5356": {
      "branch": 232,
      "fn": "AlphaVault.rebalance",
      "offset": [
        11483,
        11805
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5363": {
      "op": "SHL"
    },
    "5364": {
      "op": "SUB"
    },
    "5365": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11522
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 44,
      "value": "0x0"
    },
    "5398": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11527
      ],
      "op": "AND",
      "path": "23"
    },
    "5399": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11527
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x128ACB08"
    },
    "5404": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11553,
        11557
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "5405": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11589,
        11590
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5407": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11576,
        11590
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5408": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11576,
        11590
      ],
      "op": "SGT",
      "path": "23"
    },
    "5409": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11576,
        11590
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5410": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11608,
        11649
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x152E"
    },
    "5413": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11608,
        11649
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5414": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11639,
        11649
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5415": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11638,
        11649
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5417": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11638,
        11649
      ],
      "op": "SUB",
      "path": "23"
    },
    "5418": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11608,
        11649
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1530"
    },
    "5421": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11608,
        11649
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5422": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11608,
        11649
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5423": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11625,
        11635
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5424": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11608,
        11649
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5425": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11667,
        11684
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5426": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5428": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5429": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5430": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "5435": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "AND",
      "path": "23"
    },
    "5436": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "5438": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "SHL",
      "path": "23"
    },
    "5439": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5440": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5441": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "5443": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5444": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5445": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5452": {
      "op": "SHL"
    },
    "5453": {
      "op": "SUB"
    },
    "5454": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "AND",
      "path": "23"
    },
    "5455": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5456": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5457": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5459": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5460": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5461": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5462": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5463": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5464": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5465": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5467": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5468": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5469": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5470": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5471": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5473": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5474": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5481": {
      "op": "SHL"
    },
    "5482": {
      "op": "SUB"
    },
    "5483": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "AND",
      "path": "23"
    },
    "5484": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5485": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5486": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5488": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5489": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5490": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5492": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5493": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5494": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5495": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "SUB",
      "path": "23"
    },
    "5496": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5497": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5498": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5500": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5501": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "5502": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "5504": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ADD",
      "path": "23"
    },
    "5505": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "5506": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5507": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5508": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5509": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5510": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5511": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5512": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5514": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5515": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5516": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5517": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5518": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "SUB",
      "path": "23"
    },
    "5519": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5520": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5522": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5523": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5524": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "5525": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5526": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5527": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5528": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15A0"
    },
    "5531": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5532": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5534": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5535": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5536": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5537": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5538": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "GAS",
      "path": "23"
    },
    "5539": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "CALL",
      "path": "23"
    },
    "5540": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5541": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5542": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5543": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15B4"
    },
    "5546": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5547": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5548": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5550": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5551": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "5552": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5553": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5555": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5556": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5557": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5558": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5559": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5560": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "POP",
      "path": "23"
    },
    "5561": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5563": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "5564": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "5565": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "5567": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5568": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "LT",
      "path": "23"
    },
    "5569": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5570": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15CA"
    },
    "5573": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5574": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5576": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5577": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "REVERT",
      "path": "23"
    },
    "5578": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11518,
        11718
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11743,
        11756
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 45,
      "value": "0x15D5"
    },
    "5583": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11743,
        11756
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5584": {
      "op": "POP"
    },
    "5585": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11743,
        11754
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10C5"
    },
    "5588": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11743,
        11756
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5589": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11743,
        11756
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5590": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11732,
        11756
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5591": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11732,
        11756
      ],
      "op": "POP",
      "path": "23"
    },
    "5592": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11781,
        11794
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 46,
      "value": "0x15DF"
    },
    "5595": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11781,
        11792
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFA"
    },
    "5598": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11781,
        11794
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5599": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11781,
        11794
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5600": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11770,
        11794
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5601": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11770,
        11794
      ],
      "op": "POP",
      "path": "23"
    },
    "5602": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11483,
        11805
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5603": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11854,
        11871
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5605": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11874,
        11938
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x15F0"
    },
    "5608": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11895,
        11905
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5609": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11907,
        11917
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5610": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11919,
        11927
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5611": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11929,
        11937
      ],
      "op": "DUP6",
      "path": "23"
    },
    "5612": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11874,
        11894
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC6"
    },
    "5615": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11874,
        11938
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5616": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11874,
        11938
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5617": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11854,
        11938
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5618": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11854,
        11938
      ],
      "op": "POP",
      "path": "23"
    },
    "5619": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11948,
        11997
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 47,
      "value": "0x15FD"
    },
    "5622": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11963,
        11973
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5623": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11975,
        11985
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5624": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11987,
        11996
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5625": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11948,
        11962
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E77"
    },
    "5628": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        11948,
        11997
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5629": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        11948,
        11997
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5630": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12008,
        12017
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 48,
      "value": "0xB"
    },
    "5632": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5633": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5634": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5636": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5637": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5638": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5639": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xFFFFFF"
    },
    "5643": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5644": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5645": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "AND",
      "path": "23"
    },
    "5646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5650": {
      "op": "SHL"
    },
    "5651": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "MUL",
      "path": "23"
    },
    "5652": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5658": {
      "op": "SHL"
    },
    "5659": {
      "op": "NOT"
    },
    "5660": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5661": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5662": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5663": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5664": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5665": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5666": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "AND",
      "path": "23"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "5671": {
      "op": "SHL"
    },
    "5672": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "MUL",
      "path": "23"
    },
    "5673": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "5679": {
      "op": "SHL"
    },
    "5680": {
      "op": "NOT"
    },
    "5681": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5682": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5683": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "AND",
      "path": "23"
    },
    "5684": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5685": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5686": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5687": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "OR",
      "path": "23"
    },
    "5688": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "AND",
      "path": "23"
    },
    "5689": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "OR",
      "path": "23"
    },
    "5690": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5691": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12007,
        12056
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5692": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12078,
        12091
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 49,
      "value": "0x1643"
    },
    "5695": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12078,
        12089
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10C5"
    },
    "5698": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        12078,
        12091
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5699": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12078,
        12091
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5700": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12067,
        12091
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5701": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12067,
        12091
      ],
      "op": "POP",
      "path": "23"
    },
    "5702": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12112,
        12125
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 50,
      "value": "0x164D"
    },
    "5705": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12112,
        12123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFA"
    },
    "5708": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        12112,
        12125
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5709": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12112,
        12125
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5710": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12101,
        12125
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5711": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12101,
        12125
      ],
      "op": "POP",
      "path": "23"
    },
    "5712": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12214,
        12234
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5714": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12237,
        12299
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x165D"
    },
    "5717": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12258,
        12267
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5718": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12269,
        12278
      ],
      "op": "DUP10",
      "path": "23"
    },
    "5719": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12280,
        12288
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5720": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12290,
        12298
      ],
      "op": "DUP7",
      "path": "23"
    },
    "5721": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12237,
        12257
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC6"
    },
    "5724": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        12237,
        12299
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5725": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12237,
        12299
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5726": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12214,
        12299
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5727": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12214,
        12299
      ],
      "op": "POP",
      "path": "23"
    },
    "5728": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12309,
        12329
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "5730": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12332,
        12394
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x166D"
    },
    "5733": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12353,
        12362
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5734": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12364,
        12373
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5735": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12375,
        12383
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5736": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12385,
        12393
      ],
      "op": "DUP8",
      "path": "23"
    },
    "5737": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12332,
        12352
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2DC6"
    },
    "5740": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        12332,
        12394
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5741": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12332,
        12394
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5742": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12309,
        12394
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5743": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12309,
        12394
      ],
      "op": "POP",
      "path": "23"
    },
    "5744": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12423,
        12435
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5751": {
      "op": "SHL"
    },
    "5752": {
      "op": "SUB"
    },
    "5753": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12408,
        12435
      ],
      "op": "AND",
      "path": "23"
    },
    "5754": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12408,
        12420
      ],
      "op": "DUP3",
      "path": "23"
    },
    "5755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5761": {
      "op": "SHL"
    },
    "5762": {
      "op": "SUB"
    },
    "5763": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12408,
        12435
      ],
      "op": "AND",
      "path": "23"
    },
    "5764": {
      "branch": 233,
      "fn": "AlphaVault.rebalance",
      "offset": [
        12408,
        12435
      ],
      "op": "GT",
      "path": "23"
    },
    "5765": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "5766": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x16D7"
    },
    "5769": {
      "branch": 233,
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "5770": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12451,
        12501
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 51,
      "value": "0x1694"
    },
    "5773": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12466,
        12475
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5774": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12477,
        12486
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5775": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12488,
        12500
      ],
      "op": "DUP5",
      "path": "23"
    },
    "5776": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12451,
        12465
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E77"
    },
    "5779": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        12451,
        12501
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5780": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12451,
        12501
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5781": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12516,
        12526
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 52,
      "value": "0xB"
    },
    "5783": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5784": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5785": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5787": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5788": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5789": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5790": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xFFFFFF"
    },
    "5794": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5795": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5796": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "AND",
      "path": "23"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5801": {
      "op": "SHL"
    },
    "5802": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "MUL",
      "path": "23"
    },
    "5803": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5807": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5809": {
      "op": "SHL"
    },
    "5810": {
      "op": "NOT"
    },
    "5811": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5812": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "DUP15",
      "path": "23"
    },
    "5813": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5814": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5815": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5816": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5817": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "AND",
      "path": "23"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5822": {
      "op": "SHL"
    },
    "5823": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "MUL",
      "path": "23"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5830": {
      "op": "SHL"
    },
    "5831": {
      "op": "SUB"
    },
    "5832": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5833": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5834": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "AND",
      "path": "23"
    },
    "5835": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5836": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5837": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5838": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "OR",
      "path": "23"
    },
    "5839": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "AND",
      "path": "23"
    },
    "5840": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "OR",
      "path": "23"
    },
    "5841": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5842": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12515,
        12564
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5843": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1721"
    },
    "5846": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5847": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5848": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12595,
        12645
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 53,
      "value": "0x16E2"
    },
    "5851": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12610,
        12619
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5852": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12621,
        12630
      ],
      "op": "DUP9",
      "path": "23"
    },
    "5853": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12632,
        12644
      ],
      "op": "DUP4",
      "path": "23"
    },
    "5854": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12595,
        12609
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E77"
    },
    "5857": {
      "fn": "AlphaVault.rebalance",
      "jump": "i",
      "offset": [
        12595,
        12645
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5858": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12595,
        12645
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5859": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12660,
        12670
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 54,
      "value": "0xB"
    },
    "5861": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "DUP1",
      "path": "23"
    },
    "5862": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5863": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5865": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "DUP11",
      "path": "23"
    },
    "5866": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5867": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5868": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xFFFFFF"
    },
    "5872": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5873": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5874": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "AND",
      "path": "23"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "MUL",
      "path": "23"
    },
    "5881": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "5885": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "5887": {
      "op": "SHL"
    },
    "5888": {
      "op": "NOT"
    },
    "5889": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5890": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "DUP13",
      "path": "23"
    },
    "5891": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5892": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5893": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5894": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "5895": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "AND",
      "path": "23"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "MUL",
      "path": "23"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "5908": {
      "op": "SHL"
    },
    "5909": {
      "op": "SUB"
    },
    "5910": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5911": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "5912": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "AND",
      "path": "23"
    },
    "5913": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5914": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5915": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "5916": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "OR",
      "path": "23"
    },
    "5917": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "AND",
      "path": "23"
    },
    "5918": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "OR",
      "path": "23"
    },
    "5919": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5920": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12659,
        12708
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "5921": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        12404,
        12719
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5922": {
      "op": "POP"
    },
    "5923": {
      "op": "POP"
    },
    "5924": {
      "offset": [
        1645,
        1646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "5926": {
      "offset": [
        2580,
        2587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "5928": {
      "offset": [
        2580,
        2602
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "5929": {
      "op": "POP"
    },
    "5930": {
      "op": "POP"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "op": "POP"
    },
    "5933": {
      "op": "POP"
    },
    "5934": {
      "op": "POP"
    },
    "5935": {
      "op": "POP"
    },
    "5936": {
      "op": "POP"
    },
    "5937": {
      "op": "POP"
    },
    "5938": {
      "op": "POP"
    },
    "5939": {
      "op": "POP"
    },
    "5940": {
      "op": "POP"
    },
    "5941": {
      "fn": "AlphaVault.rebalance",
      "jump": "o",
      "offset": [
        10253,
        12725
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5942": {
      "offset": [
        2077,
        2099
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "5943": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "5945": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "5950": {
      "op": "SHL"
    },
    "5951": {
      "offset": [
        2077,
        2099
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "5952": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "DIV",
      "path": "23"
    },
    "5953": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "5955": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "5956": {
      "fn": "AlphaVault.rebalance",
      "offset": [
        2077,
        2099
      ],
      "op": "DUP2",
      "path": "23"
    },
    "5957": {
      "fn": "AlphaVault.rebalance",
      "jump": "o",
      "offset": [
        2077,
        2099
      ],
      "op": "JUMP",
      "path": "23"
    },
    "5958": {
      "fn": "ERC20.symbol",
      "offset": [
        2370,
        2463
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5959": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 55,
      "value": "0x4"
    },
    "5961": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5962": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5963": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5965": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5966": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5967": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5969": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5971": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5975": {
      "op": "NOT"
    },
    "5976": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "5979": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5981": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5982": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "AND",
      "path": "2"
    },
    "5983": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5984": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "2"
    },
    "5985": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5986": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5987": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5988": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "AND",
      "path": "2"
    },
    "5989": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5990": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5991": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "5992": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "2"
    },
    "5993": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5994": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5995": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "5996": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5997": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5998": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "2"
    },
    "5999": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6000": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "2"
    },
    "6001": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6002": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "6003": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6004": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "6005": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6006": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6007": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6008": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6009": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6010": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6011": {
      "fn": "ERC20.symbol",
      "offset": [
        2417,
        2430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6013": {
      "fn": "ERC20.symbol",
      "offset": [
        2417,
        2430
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6014": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6015": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6016": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6017": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6018": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6019": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "6020": {
      "fn": "ERC20.symbol",
      "offset": [
        2449,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6021": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6022": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6023": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6024": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0E"
    },
    "6027": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6028": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6029": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6031": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "LT",
      "path": "2"
    },
    "6032": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E3"
    },
    "6035": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6036": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "6039": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6040": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6041": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6042": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DIV",
      "path": "2"
    },
    "6043": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MUL",
      "path": "2"
    },
    "6044": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6045": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6046": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6047": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6049": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "2"
    },
    "6050": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6051": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA0E"
    },
    "6054": {
      "fn": "ERC20.symbol",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6055": {
      "offset": [
        2204,
        2239
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6056": {
      "fn": "ERC20.symbol",
      "offset": [
        2204,
        2239
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "6058": {
      "fn": "ERC20.symbol",
      "offset": [
        2204,
        2239
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6059": {
      "fn": "ERC20.symbol",
      "offset": [
        2204,
        2239
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6060": {
      "fn": "ERC20.symbol",
      "jump": "o",
      "offset": [
        2204,
        2239
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6061": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6291,
        6557
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6062": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6384,
        6388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6064": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6400,
        6529
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 56,
      "value": "0xA2C"
    },
    "6067": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17BA"
    },
    "6070": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6419
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "6073": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6409,
        6421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6074": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6409,
        6421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6075": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6423,
        6430
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6076": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB73"
    },
    "6079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6471,
        6486
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6080": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "ADD",
      "path": "2"
    },
    "6087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "6093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6097": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "ADD",
      "path": "2"
    },
    "6098": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D8B"
    },
    "6101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "6103": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6104": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "6105": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6107": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6109": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6456
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E4"
    },
    "6112": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6454
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "6115": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6444,
        6456
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6116": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6444,
        6456
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6123": {
      "op": "SHL"
    },
    "6124": {
      "op": "SUB"
    },
    "6125": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "AND",
      "path": "2"
    },
    "6128": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6129": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6130": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6132": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6133": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6134": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "ADD",
      "path": "2"
    },
    "6135": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6136": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6137": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6138": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6139": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6142": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6143": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "ADD",
      "path": "2"
    },
    "6144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6146": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6147": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6148": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6457
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6149": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6150": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "DUP14",
      "path": "2"
    },
    "6151": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "AND",
      "path": "2"
    },
    "6152": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6153": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6154": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6155": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6156": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6157": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6158": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6159": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6466
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6160": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6161": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6432,
        6470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2495"
    },
    "6164": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6432,
        6528
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6165": {
      "offset": [
        1950,
        1973
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6166": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1950,
        1973
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x9"
    },
    "6168": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1950,
        1973
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6175": {
      "op": "SHL"
    },
    "6176": {
      "op": "SUB"
    },
    "6177": {
      "offset": [
        1950,
        1973
      ],
      "op": "AND",
      "path": "23"
    },
    "6178": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        1950,
        1973
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6179": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        1950,
        1973
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6180": {
      "fn": "ERC20.transfer",
      "offset": [
        3727,
        3899
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6181": {
      "fn": "ERC20.transfer",
      "offset": [
        3813,
        3817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6183": {
      "fn": "ERC20.transfer",
      "offset": [
        3829,
        3871
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0xA2C"
    },
    "6186": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1831"
    },
    "6189": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3849
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x224A"
    },
    "6192": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3839,
        3851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6193": {
      "fn": "ERC20.transfer",
      "offset": [
        3839,
        3851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6194": {
      "fn": "ERC20.transfer",
      "offset": [
        3853,
        3862
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6195": {
      "fn": "ERC20.transfer",
      "offset": [
        3864,
        3870
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6196": {
      "fn": "ERC20.transfer",
      "offset": [
        3829,
        3838
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233A"
    },
    "6199": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3829,
        3871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6200": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6201": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16115,
        16130
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6203": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16132,
        16147
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6204": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16164,
        16181
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6206": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16187,
        16206
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6207": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16208,
        16227
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6209": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16243,
        16274
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x184A"
    },
    "6212": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16253,
        16262
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6213": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16264,
        16273
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6214": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16243,
        16252
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7C"
    },
    "6217": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16243,
        16274
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6218": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16243,
        16274
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6219": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6220": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "POP",
      "path": "23"
    },
    "6221": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6222": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "POP",
      "path": "23"
    },
    "6223": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "POP",
      "path": "23"
    },
    "6224": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "POP",
      "path": "23"
    },
    "6225": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6226": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16163,
        16274
      ],
      "op": "POP",
      "path": "23"
    },
    "6227": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16305,
        16358
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 58,
      "value": "0x185D"
    },
    "6230": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16326,
        16335
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6231": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16337,
        16346
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6232": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16348,
        16357
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6233": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16305,
        16325
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F1E"
    },
    "6236": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16305,
        16358
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6237": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16305,
        16358
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6238": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16442,
        16453
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "6240": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16442,
        16453
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6241": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16284,
        16358
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6242": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16284,
        16358
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "6243": {
      "op": "POP"
    },
    "6244": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16284,
        16358
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6245": {
      "op": "POP"
    },
    "6246": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16403,
        16422
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6248": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16403,
        16422
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6249": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16425,
        16454
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1876"
    },
    "6252": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16425,
        16454
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6253": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16433,
        16436
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "6257": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16433,
        16436
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6258": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16425,
        16441
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "6261": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16425,
        16454
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6262": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16425,
        16454
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6263": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16403,
        16454
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6264": {
      "op": "POP"
    },
    "6265": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16474,
        16533
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 59,
      "value": "0x18A2"
    },
    "6268": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16532
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x189B"
    },
    "6271": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16528,
        16531
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "6275": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16523
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6284": {
      "op": "SHL"
    },
    "6285": {
      "op": "SUB"
    },
    "6286": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16506
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6287": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16506
      ],
      "op": "AND",
      "path": "23"
    },
    "6288": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16403,
        16454
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6289": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16510
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "6292": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16486,
        16523
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6293": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16523
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6294": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16527
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6295": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16527
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x302C"
    },
    "6298": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16486,
        16532
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6299": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16486,
        16532
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6300": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16474,
        16481
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6301": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16474,
        16481
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6302": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16474,
        16485
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "6305": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16474,
        16533
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6306": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16474,
        16533
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6307": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16464,
        16533
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "6308": {
      "op": "POP"
    },
    "6309": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16553,
        16612
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 60,
      "value": "0x18C8"
    },
    "6312": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16565,
        16611
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x18C1"
    },
    "6315": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16607,
        16610
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "6319": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16565,
        16602
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6326": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6328": {
      "op": "SHL"
    },
    "6329": {
      "op": "SUB"
    },
    "6330": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16565,
        16585
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6331": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16565,
        16585
      ],
      "op": "AND",
      "path": "23"
    },
    "6332": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16590,
        16601
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6333": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16565,
        16589
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "6336": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16565,
        16602
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6337": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16565,
        16611
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6338": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16553,
        16560
      ],
      "op": "DUP7",
      "path": "23"
    },
    "6339": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16553,
        16560
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6340": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16553,
        16564
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "6343": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "i",
      "offset": [
        16553,
        16612
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6344": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16553,
        16612
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6345": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16543,
        16612
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "6346": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16543,
        16612
      ],
      "op": "POP",
      "path": "23"
    },
    "6347": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "6348": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "6349": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "6350": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "6351": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6352": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "6353": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6354": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6355": {
      "fn": "AlphaVault.getPositionAmounts",
      "offset": [
        16008,
        16619
      ],
      "op": "POP",
      "path": "23"
    },
    "6356": {
      "fn": "AlphaVault.getPositionAmounts",
      "jump": "o",
      "offset": [
        16008,
        16619
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6357": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        21929,
        22045
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6358": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "6360": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6365": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6367": {
      "op": "SHL"
    },
    "6368": {
      "op": "SUB"
    },
    "6369": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "6370": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "6371": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "6372": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1921"
    },
    "6375": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6376": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6378": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6379": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6386": {
      "op": "SHL"
    },
    "6387": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6388": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6389": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6391": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6393": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6394": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6395": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6396": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "6398": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6400": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6401": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6402": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6403": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6416": {
      "op": "SHL"
    },
    "6417": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6419": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6420": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6421": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6422": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6423": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6424": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6425": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6426": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6427": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "6428": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6430": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6431": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6432": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6433": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6434": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22024
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 61,
      "value": "0xB"
    },
    "6436": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6437": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6444": {
      "op": "SHL"
    },
    "6445": {
      "op": "SUB"
    },
    "6446": {
      "op": "NOT"
    },
    "6447": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "AND",
      "path": "23"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6454": {
      "op": "SHL"
    },
    "6455": {
      "op": "SUB"
    },
    "6456": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6457": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6458": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6459": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "AND",
      "path": "23"
    },
    "6460": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6461": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6462": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6463": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "OR",
      "path": "23"
    },
    "6464": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6465": {
      "fn": "AlphaVault.setGovernance",
      "offset": [
        22007,
        22038
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "6466": {
      "fn": "AlphaVault.setGovernance",
      "jump": "o",
      "offset": [
        21929,
        22045
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6467": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21469,
        21755
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6468": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "6470": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6477": {
      "op": "SHL"
    },
    "6478": {
      "op": "SUB"
    },
    "6479": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "6480": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "6481": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "6482": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x198F"
    },
    "6485": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6486": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6488": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6489": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6496": {
      "op": "SHL"
    },
    "6497": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6498": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6499": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "6501": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6503": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6504": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6505": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6506": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "6508": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6510": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6511": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6512": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6513": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "6524": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "6526": {
      "op": "SHL"
    },
    "6527": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6529": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6530": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6531": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6532": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6533": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6534": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6535": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6536": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6537": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "6538": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6540": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "6541": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6542": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6543": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6544": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 62,
      "value": "0x40"
    },
    "6546": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6547": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6548": {
      "op": "PUSH4",
      "value": "0xA34123A7"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6555": {
      "op": "SHL"
    },
    "6556": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6557": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6558": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6560": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6561": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6562": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6563": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6565": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6566": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ADD",
      "path": "23"
    },
    "6567": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6568": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6569": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6570": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6571": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6573": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6574": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ADD",
      "path": "23"
    },
    "6575": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6582": {
      "op": "SHL"
    },
    "6583": {
      "op": "SUB"
    },
    "6584": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6585": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "AND",
      "path": "23"
    },
    "6586": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6588": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6589": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ADD",
      "path": "23"
    },
    "6590": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6591": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6592": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6599": {
      "op": "SHL"
    },
    "6600": {
      "op": "SUB"
    },
    "6601": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21613
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "6634": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21618
      ],
      "op": "AND",
      "path": "23"
    },
    "6635": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21618
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6636": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21618
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "6641": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21618
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6642": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6644": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6645": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6646": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ADD",
      "path": "23"
    },
    "6647": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6648": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6649": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6650": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6651": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "SUB",
      "path": "23"
    },
    "6652": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ADD",
      "path": "23"
    },
    "6653": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6656": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21618
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6657": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6658": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "6659": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6660": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6661": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6662": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A0E"
    },
    "6665": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6666": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6668": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6669": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6670": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6671": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "POP",
      "path": "23"
    },
    "6672": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "GAS",
      "path": "23"
    },
    "6673": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "CALL",
      "path": "23"
    },
    "6674": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6675": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6676": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6677": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A22"
    },
    "6680": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6681": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6682": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6684": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6685": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "6686": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6687": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6689": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6690": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6691": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "POP",
      "path": "23"
    },
    "6692": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "POP",
      "path": "23"
    },
    "6693": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "POP",
      "path": "23"
    },
    "6694": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "POP",
      "path": "23"
    },
    "6695": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6697": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6698": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6699": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6701": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6702": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "LT",
      "path": "23"
    },
    "6703": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6704": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1A38"
    },
    "6707": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6708": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6710": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6711": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6712": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6713": {
      "op": "POP"
    },
    "6714": {
      "op": "POP"
    },
    "6715": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21609,
        21651
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6717": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 63
    },
    "6718": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6719": {
      "op": "PUSH4",
      "value": "0x9E3D67B"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "6726": {
      "op": "SHL"
    },
    "6727": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6728": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6729": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21682,
        21686
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "6730": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "6732": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6733": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6734": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6735": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6737": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP6",
      "path": "23"
    },
    "6738": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6739": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6740": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "6742": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP4",
      "path": "23"
    },
    "6743": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6744": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6745": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP5",
      "path": "23"
    },
    "6746": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6747": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6748": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "6750": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6751": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6752": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6759": {
      "op": "SHL"
    },
    "6760": {
      "op": "SUB"
    },
    "6761": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "6763": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6764": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6765": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6766": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6767": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6768": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x84"
    },
    "6770": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6771": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6772": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "6773": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6774": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6781": {
      "op": "SHL"
    },
    "6782": {
      "op": "SUB"
    },
    "6783": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21665
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "6816": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21673
      ],
      "op": "AND",
      "path": "23"
    },
    "6817": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21673
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6818": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21673
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4F1EB3D8"
    },
    "6823": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21673
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "6824": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA4"
    },
    "6826": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6827": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6828": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6829": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6830": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6831": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP3",
      "path": "23"
    },
    "6832": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6833": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "SUB",
      "path": "23"
    },
    "6834": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ADD",
      "path": "23"
    },
    "6835": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6838": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21673
      ],
      "op": "DUP8",
      "path": "23"
    },
    "6839": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6840": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "6841": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6842": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6843": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6844": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AC4"
    },
    "6847": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6848": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6850": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6851": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6852": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6853": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "POP",
      "path": "23"
    },
    "6854": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "GAS",
      "path": "23"
    },
    "6855": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "CALL",
      "path": "23"
    },
    "6856": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6857": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6858": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6859": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AD8"
    },
    "6862": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6863": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6864": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6866": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6867": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "6868": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6869": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6871": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6872": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6873": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "POP",
      "path": "23"
    },
    "6874": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "POP",
      "path": "23"
    },
    "6875": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "POP",
      "path": "23"
    },
    "6876": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "POP",
      "path": "23"
    },
    "6877": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6879": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "6880": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "6881": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "6883": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6884": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "LT",
      "path": "23"
    },
    "6885": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "6886": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AEE"
    },
    "6889": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "6890": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6892": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "DUP1",
      "path": "23"
    },
    "6893": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "REVERT",
      "path": "23"
    },
    "6894": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        21661,
        21748
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6895": {
      "op": "POP"
    },
    "6896": {
      "op": "POP"
    },
    "6897": {
      "op": "POP"
    },
    "6898": {
      "op": "POP"
    },
    "6899": {
      "op": "POP"
    },
    "6900": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "o",
      "offset": [
        21469,
        21755
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6901": {
      "offset": [
        1883,
        1909
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6902": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1883,
        1909
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "6904": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1883,
        1909
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6905": {
      "fn": "AlphaVault.emergencyBurn",
      "offset": [
        1883,
        1909
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6906": {
      "fn": "AlphaVault.emergencyBurn",
      "jump": "o",
      "offset": [
        1883,
        1909
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6907": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6908": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "6910": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6911": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6913": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6914": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6915": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6916": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6917": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6918": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6919": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15387,
        15401
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6920": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15474,
        15514
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B26"
    },
    "6923": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15474,
        15514
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6930": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "DIV",
      "path": "23"
    },
    "6931": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6933": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6934": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6935": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6936": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15493,
        15502
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "6941": {
      "op": "SHL"
    },
    "6942": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15504,
        15513
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6943": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15504,
        15513
      ],
      "op": "DIV",
      "path": "23"
    },
    "6944": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15504,
        15513
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6945": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15504,
        15513
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6946": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15474,
        15492
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1838"
    },
    "6949": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        15474,
        15514
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6950": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15474,
        15514
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6951": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "6953": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "6954": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15429,
        15514
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6955": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15429,
        15514
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "6956": {
      "op": "POP"
    },
    "6957": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15429,
        15514
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6958": {
      "op": "POP"
    },
    "6959": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15525,
        15545
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "6961": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15525,
        15545
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6962": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15525,
        15545
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6963": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15525,
        15545
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6964": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15583,
        15625
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B52"
    },
    "6967": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15583,
        15625
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6970": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6972": {
      "op": "SHL"
    },
    "6973": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6974": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "DIV",
      "path": "23"
    },
    "6975": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "6977": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6978": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "DUP2",
      "path": "23"
    },
    "6979": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6980": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15602,
        15612
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6983": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "6985": {
      "op": "SHL"
    },
    "6986": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15614,
        15624
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6987": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15614,
        15624
      ],
      "op": "DIV",
      "path": "23"
    },
    "6988": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15614,
        15624
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "6989": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15614,
        15624
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "6990": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15583,
        15601
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1838"
    },
    "6993": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        15583,
        15625
      ],
      "op": "JUMP",
      "path": "23"
    },
    "6994": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15583,
        15625
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "6995": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15524,
        15625
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6996": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15524,
        15625
      ],
      "op": "POP",
      "path": "23"
    },
    "6997": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15524,
        15625
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "6998": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15524,
        15625
      ],
      "op": "POP",
      "path": "23"
    },
    "6999": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15692
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 64,
      "value": "0x1B6C"
    },
    "7002": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15679,
        15691
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7003": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15674
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "7006": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15662,
        15673
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7007": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15657
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "7010": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15655
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10C5"
    },
    "7013": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        15644,
        15657
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7014": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15657
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7015": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15661
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7016": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15661
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "7019": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        15644,
        15674
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7020": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15644,
        15692
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7021": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15635,
        15692
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "7022": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15635,
        15692
      ],
      "op": "POP",
      "path": "23"
    },
    "7023": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15711,
        15759
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 65,
      "value": "0x1B7E"
    },
    "7026": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15746,
        15758
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7027": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15711,
        15741
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "7030": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15729,
        15740
      ],
      "op": "DUP6",
      "path": "23"
    },
    "7031": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15711,
        15724
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "7034": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15711,
        15722
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFA"
    },
    "7037": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "i",
      "offset": [
        15711,
        15724
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7038": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15711,
        15759
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7039": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15702,
        15759
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "7040": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15702,
        15759
      ],
      "op": "POP",
      "path": "23"
    },
    "7041": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "POP",
      "path": "23"
    },
    "7042": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "POP",
      "path": "23"
    },
    "7043": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "POP",
      "path": "23"
    },
    "7044": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "POP",
      "path": "23"
    },
    "7045": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7046": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        15330,
        15766
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7047": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "o",
      "offset": [
        15330,
        15766
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7048": {
      "offset": [
        1842,
        1876
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7049": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1842,
        1876
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7082": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1842,
        1876
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7083": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "o",
      "offset": [
        1842,
        1876
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7084": {
      "offset": [
        1806,
        1836
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7085": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1806,
        1836
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7118": {
      "fn": "AlphaVault.getTotalAmounts",
      "offset": [
        1806,
        1836
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7119": {
      "fn": "AlphaVault.getTotalAmounts",
      "jump": "o",
      "offset": [
        1806,
        1836
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7120": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7121": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7741,
        7756
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7123": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7758,
        7773
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7124": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "7126": {
      "offset": [
        2277,
        2284
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7128": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2277,
        2284
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7129": {
      "offset": [
        2277,
        2296
      ],
      "op": "EQ",
      "path": "7"
    },
    "7130": {
      "branch": 290,
      "fn": "AlphaVault.withdraw",
      "offset": [
        2277,
        2296
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7131": {
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C2B"
    },
    "7134": {
      "branch": 290,
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7135": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7137": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7138": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7145": {
      "op": "SHL"
    },
    "7146": {
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7147": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7148": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7150": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7152": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7153": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "7154": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7155": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "7157": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "7159": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7160": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "7161": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7162": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "7195": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "7197": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7198": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "7199": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7200": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7201": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7202": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7203": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7204": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7205": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SUB",
      "path": "7"
    },
    "7206": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "7208": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "ADD",
      "path": "7"
    },
    "7209": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7210": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7211": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2269,
        2332
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7212": {
      "offset": [
        1688,
        1689
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "7214": {
      "offset": [
        2407,
        2414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7216": {
      "offset": [
        2407,
        2425
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7217": {
      "branch": 234,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7793,
        7803
      ],
      "op": "DUP6",
      "path": "23",
      "statement": 66
    },
    "7218": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C6B"
    },
    "7221": {
      "branch": 234,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7222": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7224": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7225": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7232": {
      "op": "SHL"
    },
    "7233": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7234": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7235": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7237": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7239": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7240": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "ADD",
      "path": "23"
    },
    "7241": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7242": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x6"
    },
    "7244": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7246": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7247": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "ADD",
      "path": "23"
    },
    "7248": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7249": {
      "op": "PUSH6",
      "value": "0x736861726573"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7258": {
      "op": "SHL"
    },
    "7259": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7261": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7262": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "ADD",
      "path": "23"
    },
    "7263": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7264": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7265": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7266": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7267": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7268": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7269": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "SUB",
      "path": "23"
    },
    "7270": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7272": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "ADD",
      "path": "23"
    },
    "7273": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7274": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7275": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7785,
        7814
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7282": {
      "op": "SHL"
    },
    "7283": {
      "op": "SUB"
    },
    "7284": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7848
      ],
      "op": "DUP4",
      "path": "23",
      "statement": 67
    },
    "7285": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7848
      ],
      "op": "AND",
      "path": "23"
    },
    "7286": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7848
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7287": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7848
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7288": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7848
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7289": {
      "branch": 235,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7848
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7290": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7871
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C8C"
    },
    "7293": {
      "branch": 235,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7871
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7294": {
      "op": "POP"
    },
    "7295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7301": {
      "op": "SHL"
    },
    "7302": {
      "op": "SUB"
    },
    "7303": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7852,
        7871
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7304": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7852,
        7871
      ],
      "op": "AND",
      "path": "23"
    },
    "7305": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7866,
        7870
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "7306": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7852,
        7871
      ],
      "op": "EQ",
      "path": "23"
    },
    "7307": {
      "branch": 236,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7852,
        7871
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7308": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7832,
        7871
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7309": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CC2"
    },
    "7312": {
      "branch": 236,
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7313": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7315": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7316": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7323": {
      "op": "SHL"
    },
    "7324": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7325": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7326": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7328": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7330": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7331": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "ADD",
      "path": "23"
    },
    "7332": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7333": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "7335": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7337": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7338": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "ADD",
      "path": "23"
    },
    "7339": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7340": {
      "op": "PUSH2",
      "value": "0x746F"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "7345": {
      "op": "SHL"
    },
    "7346": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7348": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7349": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "ADD",
      "path": "23"
    },
    "7350": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7351": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7352": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7353": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7354": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7355": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7356": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "SUB",
      "path": "23"
    },
    "7357": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7359": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "ADD",
      "path": "23"
    },
    "7360": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7361": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7362": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7824,
        7878
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7363": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7888,
        7907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7365": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7910,
        7923
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CCC"
    },
    "7368": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7910,
        7921
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA8E"
    },
    "7371": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        7910,
        7923
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7372": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7910,
        7923
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7373": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7888,
        7923
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7374": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7888,
        7923
      ],
      "op": "POP",
      "path": "23"
    },
    "7375": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7957,
        7982
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 68,
      "value": "0x1CD8"
    },
    "7378": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7963,
        7973
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7379": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7975,
        7981
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7380": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7957,
        7962
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3093"
    },
    "7383": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        7957,
        7982
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7384": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7957,
        7982
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7385": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8060,
        8081
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7387": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8126
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CF0"
    },
    "7390": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8114,
        8125
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7391": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8109
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "7394": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8102,
        8108
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7395": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8097
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CEA"
    },
    "7398": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8095
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x10C5"
    },
    "7401": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8084,
        8097
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7402": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8097
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7403": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8101
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7404": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8101
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "7407": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8084,
        8109
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7408": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8084,
        8126
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7409": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8060,
        8126
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7410": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8060,
        8126
      ],
      "op": "POP",
      "path": "23"
    },
    "7411": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8136,
        8157
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7413": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8160,
        8202
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D04"
    },
    "7416": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8190,
        8201
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7417": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8160,
        8185
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "7420": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8178,
        8184
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7421": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8160,
        8173
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1CEA"
    },
    "7424": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8160,
        8171
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFA"
    },
    "7427": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8160,
        8173
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7428": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8160,
        8202
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7429": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "7431": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7432": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8136,
        8202
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7433": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8136,
        8202
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7434": {
      "op": "POP"
    },
    "7435": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8276,
        8295
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7437": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8276,
        8295
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7438": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8276,
        8295
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7439": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8276,
        8295
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7440": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8332,
        8394
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D30"
    },
    "7443": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8332,
        8394
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7448": {
      "op": "SHL"
    },
    "7449": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7450": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "DIV",
      "path": "23"
    },
    "7451": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "7453": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7454": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7455": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7456": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8352,
        8361
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7459": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "7461": {
      "op": "SHL"
    },
    "7462": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8363,
        8372
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7463": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8363,
        8372
      ],
      "op": "DIV",
      "path": "23"
    },
    "7464": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8363,
        8372
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7465": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8363,
        8372
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7466": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8374,
        8380
      ],
      "op": "DUP14",
      "path": "23"
    },
    "7467": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8382,
        8393
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7468": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8332,
        8351
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x318F"
    },
    "7471": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8332,
        8394
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7472": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8332,
        8394
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7473": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "7475": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "7476": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8275,
        8394
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7477": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8275,
        8394
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "7478": {
      "op": "POP"
    },
    "7479": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8275,
        8394
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7480": {
      "op": "POP"
    },
    "7481": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8405,
        8425
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7483": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8405,
        8425
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7484": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8405,
        8425
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7485": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8405,
        8425
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7486": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8463,
        8527
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1D5E"
    },
    "7489": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8463,
        8527
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7496": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "DIV",
      "path": "23"
    },
    "7497": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "7499": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7500": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7501": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7502": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8483,
        8493
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "7507": {
      "op": "SHL"
    },
    "7508": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8495,
        8505
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7509": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8495,
        8505
      ],
      "op": "DIV",
      "path": "23"
    },
    "7510": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8495,
        8505
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7511": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8495,
        8505
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "7512": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8507,
        8513
      ],
      "op": "DUP16",
      "path": "23"
    },
    "7513": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8515,
        8526
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7514": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8463,
        8482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x318F"
    },
    "7517": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8463,
        8527
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7518": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8463,
        8527
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7519": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8404,
        8527
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7520": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8404,
        8527
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7521": {
      "op": "POP"
    },
    "7522": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8404,
        8527
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7523": {
      "op": "POP"
    },
    "7524": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8598,
        8646
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 69,
      "value": "0x1D71"
    },
    "7527": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8404,
        8527
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7528": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8598,
        8628
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "7531": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8598,
        8611
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7532": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8616,
        8627
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7533": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8598,
        8615
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "7536": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8598,
        8628
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7537": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8598,
        8646
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7538": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8588,
        8646
      ],
      "op": "SWAP9",
      "path": "23"
    },
    "7539": {
      "op": "POP"
    },
    "7540": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8666,
        8714
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 70,
      "value": "0x1D81"
    },
    "7543": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8701,
        8713
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7544": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8666,
        8696
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "7547": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8666,
        8679
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7548": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8684,
        8695
      ],
      "op": "DUP7",
      "path": "23"
    },
    "7549": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8666,
        8683
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "7552": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8666,
        8696
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7553": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8666,
        8714
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7554": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8656,
        8714
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "7555": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8656,
        8714
      ],
      "op": "POP",
      "path": "23"
    },
    "7556": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8743,
        8753
      ],
      "op": "DUP12",
      "path": "23",
      "statement": 71
    },
    "7557": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8732,
        8739
      ],
      "op": "DUP10",
      "path": "23"
    },
    "7558": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8732,
        8753
      ],
      "op": "LT",
      "path": "23"
    },
    "7559": {
      "branch": 237,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8732,
        8753
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7560": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1DC5"
    },
    "7563": {
      "branch": 237,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7564": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7566": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7567": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7568": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7574": {
      "op": "SHL"
    },
    "7575": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7576": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7577": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7579": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7581": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7582": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "ADD",
      "path": "23"
    },
    "7583": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7584": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "7586": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7588": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7589": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "ADD",
      "path": "23"
    },
    "7590": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7591": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A1826B4B7"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7604": {
      "op": "SHL"
    },
    "7605": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7607": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7608": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "ADD",
      "path": "23"
    },
    "7609": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7610": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7611": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7612": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7613": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7614": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7615": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "SUB",
      "path": "23"
    },
    "7616": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7618": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "ADD",
      "path": "23"
    },
    "7619": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7620": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7621": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8724,
        8768
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7622": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8797,
        8807
      ],
      "op": "DUP11",
      "path": "23",
      "statement": 72
    },
    "7623": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8786,
        8793
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7624": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8786,
        8807
      ],
      "op": "LT",
      "path": "23"
    },
    "7625": {
      "branch": 238,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8786,
        8807
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7626": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E07"
    },
    "7629": {
      "branch": 238,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7630": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "7632": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7633": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7640": {
      "op": "SHL"
    },
    "7641": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7642": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7643": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7645": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "7647": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7648": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "ADD",
      "path": "23"
    },
    "7649": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7650": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "7652": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "7654": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7655": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "ADD",
      "path": "23"
    },
    "7656": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7657": {
      "op": "PUSH10",
      "value": "0x30B6B7BAB73A18A6B4B7"
    },
    "7668": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "7670": {
      "op": "SHL"
    },
    "7671": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "7673": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7674": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "ADD",
      "path": "23"
    },
    "7675": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7676": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7677": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7678": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7679": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7680": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7681": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "SUB",
      "path": "23"
    },
    "7682": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "7684": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "ADD",
      "path": "23"
    },
    "7685": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7686": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7687": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8778,
        8822
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7688": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8873,
        8884
      ],
      "op": "DUP9",
      "path": "23"
    },
    "7689": {
      "branch": 239,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8873,
        8884
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7690": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8869,
        8918
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E41"
    },
    "7693": {
      "branch": 239,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8869,
        8918
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7694": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8886,
        8918
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 73,
      "value": "0x1E41"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7703": {
      "op": "SHL"
    },
    "7704": {
      "op": "SUB"
    },
    "7705": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8886,
        8892
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7738": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8886,
        8905
      ],
      "op": "AND",
      "path": "23"
    },
    "7739": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8906,
        8908
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7740": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8910,
        8917
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7741": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8886,
        8905
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "7744": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8886,
        8918
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7745": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8886,
        8918
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7746": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8932,
        8943
      ],
      "op": "DUP8",
      "path": "23"
    },
    "7747": {
      "branch": 240,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8932,
        8943
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7748": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8928,
        8977
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1E7B"
    },
    "7751": {
      "branch": 240,
      "fn": "AlphaVault.withdraw",
      "offset": [
        8928,
        8977
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7752": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8945,
        8977
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 74,
      "value": "0x1E7B"
    },
    "7755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7761": {
      "op": "SHL"
    },
    "7762": {
      "op": "SUB"
    },
    "7763": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8945,
        8951
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7796": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8945,
        8964
      ],
      "op": "AND",
      "path": "23"
    },
    "7797": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8965,
        8967
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7798": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8969,
        8976
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7799": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8945,
        8964
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "7802": {
      "fn": "AlphaVault.withdraw",
      "jump": "i",
      "offset": [
        8945,
        8977
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7803": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8945,
        8977
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7804": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 75,
      "value": "0x40"
    },
    "7806": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7807": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7808": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP15",
      "path": "23"
    },
    "7809": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7810": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7811": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "7813": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7814": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "ADD",
      "path": "23"
    },
    "7815": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP12",
      "path": "23"
    },
    "7816": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7817": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7818": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7819": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP3",
      "path": "23"
    },
    "7820": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "ADD",
      "path": "23"
    },
    "7821": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP11",
      "path": "23"
    },
    "7822": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7823": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "7824": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7825": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "7826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7832": {
      "op": "SHL"
    },
    "7833": {
      "op": "SUB"
    },
    "7834": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP13",
      "path": "23"
    },
    "7835": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "AND",
      "path": "23"
    },
    "7836": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7837": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        9002,
        9012
      ],
      "op": "CALLER",
      "path": "23"
    },
    "7838": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        9002,
        9012
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7839": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0xEBFF2602B3F468259E1E99F613FED6691F3A6526EFFE6EF3E768BA7AE7A36C4F"
    },
    "7872": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "7873": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "DUP2",
      "path": "23"
    },
    "7874": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7875": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SUB",
      "path": "23"
    },
    "7876": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "7878": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "ADD",
      "path": "23"
    },
    "7879": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "7880": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        8993,
        9043
      ],
      "op": "LOG3",
      "path": "23"
    },
    "7881": {
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7882": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7883": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7884": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7885": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7886": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7887": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2436,
        2437
      ],
      "op": "POP",
      "path": "7"
    },
    "7888": {
      "offset": [
        1645,
        1646
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7890": {
      "offset": [
        2580,
        2587
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "7892": {
      "offset": [
        2580,
        2602
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7893": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2580,
        2602
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7894": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2580,
        2602
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "7895": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        2580,
        2602
      ],
      "op": "POP",
      "path": "7"
    },
    "7896": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "7897": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "POP",
      "path": "23"
    },
    "7898": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "7899": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "7900": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "POP",
      "path": "23"
    },
    "7901": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "POP",
      "path": "23"
    },
    "7902": {
      "fn": "AlphaVault.withdraw",
      "offset": [
        7577,
        9050
      ],
      "op": "POP",
      "path": "23"
    },
    "7903": {
      "fn": "AlphaVault.withdraw",
      "jump": "o",
      "offset": [
        7577,
        9050
      ],
      "op": "JUMP",
      "path": "23"
    },
    "7904": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7905": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19029,
        19039
      ],
      "op": "CALLER",
      "path": "23",
      "statement": 76
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7910": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7912": {
      "op": "SHL"
    },
    "7913": {
      "op": "SUB"
    },
    "7914": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19051,
        19055
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "7947": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19029,
        19056
      ],
      "op": "AND",
      "path": "23"
    },
    "7948": {
      "branch": 241,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19029,
        19056
      ],
      "op": "EQ",
      "path": "23"
    },
    "7949": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19021,
        19057
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F15"
    },
    "7952": {
      "branch": 241,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19021,
        19057
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7953": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19021,
        19057
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "7955": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19021,
        19057
      ],
      "op": "DUP1",
      "path": "23"
    },
    "7956": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19021,
        19057
      ],
      "op": "REVERT",
      "path": "23"
    },
    "7957": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19021,
        19057
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "7958": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19071,
        19082
      ],
      "op": "DUP4",
      "path": "23"
    },
    "7959": {
      "branch": 242,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19071,
        19082
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "7960": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19067,
        19124
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F4F"
    },
    "7963": {
      "branch": 242,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19067,
        19124
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "7964": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19084,
        19124
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 77,
      "value": "0x1F4F"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7973": {
      "op": "SHL"
    },
    "7974": {
      "op": "SUB"
    },
    "7975": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19084,
        19090
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "8008": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19084,
        19103
      ],
      "op": "AND",
      "path": "23"
    },
    "8009": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19104,
        19114
      ],
      "op": "CALLER",
      "path": "23"
    },
    "8010": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19116,
        19123
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8011": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19084,
        19103
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "8014": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        19084,
        19124
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8015": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19084,
        19124
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8016": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19138,
        19149
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8017": {
      "branch": 243,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19138,
        19149
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8018": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19134,
        19191
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F89"
    },
    "8021": {
      "branch": 243,
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19134,
        19191
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8022": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19151,
        19191
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 78,
      "value": "0x1F89"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8031": {
      "op": "SHL"
    },
    "8032": {
      "op": "SUB"
    },
    "8033": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19151,
        19157
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "8066": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19151,
        19170
      ],
      "op": "AND",
      "path": "23"
    },
    "8067": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19171,
        19181
      ],
      "op": "CALLER",
      "path": "23"
    },
    "8068": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19183,
        19190
      ],
      "op": "DUP6",
      "path": "23"
    },
    "8069": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19151,
        19170
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "8072": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "i",
      "offset": [
        19151,
        19191
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8073": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        19151,
        19191
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8074": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "POP",
      "path": "23"
    },
    "8075": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "POP",
      "path": "23"
    },
    "8076": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "POP",
      "path": "23"
    },
    "8077": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "offset": [
        18877,
        19198
      ],
      "op": "POP",
      "path": "23"
    },
    "8078": {
      "fn": "AlphaVault.uniswapV3MintCallback",
      "jump": "o",
      "offset": [
        18877,
        19198
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8079": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20161,
        20381
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8080": {
      "offset": [
        22401,
        22411
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "8082": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22401,
        22411
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8089": {
      "op": "SHL"
    },
    "8090": {
      "op": "SUB"
    },
    "8091": {
      "offset": [
        22401,
        22411
      ],
      "op": "AND",
      "path": "23"
    },
    "8092": {
      "offset": [
        22387,
        22397
      ],
      "op": "CALLER",
      "path": "23"
    },
    "8093": {
      "offset": [
        22387,
        22411
      ],
      "op": "EQ",
      "path": "23"
    },
    "8094": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FDB"
    },
    "8097": {
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8098": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8100": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8101": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8108": {
      "op": "SHL"
    },
    "8109": {
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8110": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8111": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8113": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8115": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8116": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "8117": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8118": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA"
    },
    "8120": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "8122": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8123": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "8124": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8125": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "8138": {
      "op": "SHL"
    },
    "8139": {
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "8141": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8142": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "8143": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8144": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8145": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8146": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8147": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8148": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8149": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "SUB",
      "path": "23"
    },
    "8150": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "8152": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "ADD",
      "path": "23"
    },
    "8153": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8154": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8155": {
      "fn": "AlphaVault.sweep",
      "offset": [
        22379,
        22426
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8156": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20299,
        20305
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 79,
      "value": "0x0"
    },
    "8189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8195": {
      "op": "SHL"
    },
    "8196": {
      "op": "SUB"
    },
    "8197": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20305
      ],
      "op": "AND",
      "path": "23"
    },
    "8198": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20295
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8205": {
      "op": "SHL"
    },
    "8206": {
      "op": "SUB"
    },
    "8207": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20305
      ],
      "op": "AND",
      "path": "23"
    },
    "8208": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20305
      ],
      "op": "EQ",
      "path": "23"
    },
    "8209": {
      "branch": 244,
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20305
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8210": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20324
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8211": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20324
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8212": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20324
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x204F"
    },
    "8215": {
      "branch": 244,
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20324
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8216": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20324
      ],
      "op": "POP",
      "path": "23"
    },
    "8217": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20318,
        20324
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "8250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "op": "SUB"
    },
    "8258": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20309,
        20324
      ],
      "op": "AND",
      "path": "23"
    },
    "8259": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20309,
        20314
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8266": {
      "op": "SHL"
    },
    "8267": {
      "op": "SUB"
    },
    "8268": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20309,
        20324
      ],
      "op": "AND",
      "path": "23"
    },
    "8269": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20309,
        20324
      ],
      "op": "EQ",
      "path": "23"
    },
    "8270": {
      "branch": 245,
      "fn": "AlphaVault.sweep",
      "offset": [
        20309,
        20324
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8271": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20290,
        20324
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8272": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2088"
    },
    "8275": {
      "branch": 245,
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8276": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "8278": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8279": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8286": {
      "op": "SHL"
    },
    "8287": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8288": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8289": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "8291": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "8293": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8294": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "ADD",
      "path": "23"
    },
    "8295": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8296": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "8298": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "8300": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8301": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "ADD",
      "path": "23"
    },
    "8302": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8303": {
      "op": "PUSH5",
      "value": "0x3A37B5B2B7"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "8311": {
      "op": "SHL"
    },
    "8312": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "8314": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8315": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "ADD",
      "path": "23"
    },
    "8316": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "8317": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8318": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "8319": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8320": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8321": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8322": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "SUB",
      "path": "23"
    },
    "8323": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "8325": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "ADD",
      "path": "23"
    },
    "8326": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8327": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8328": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20282,
        20334
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8329": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20344,
        20374
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 80,
      "value": "0x97D"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8338": {
      "op": "SHL"
    },
    "8339": {
      "op": "SUB"
    },
    "8340": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20344,
        20362
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8341": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20344,
        20362
      ],
      "op": "AND",
      "path": "23"
    },
    "8342": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20363,
        20365
      ],
      "op": "DUP3",
      "path": "23"
    },
    "8343": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20367,
        20373
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8344": {
      "fn": "AlphaVault.sweep",
      "offset": [
        20344,
        20362
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "8347": {
      "fn": "AlphaVault.sweep",
      "jump": "i",
      "offset": [
        20344,
        20374
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8348": {
      "fn": "ERC20.allowance",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8355": {
      "op": "SHL"
    },
    "8356": {
      "op": "SUB"
    },
    "8357": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 81
    },
    "8358": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8359": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "AND",
      "path": "2"
    },
    "8360": {
      "fn": "ERC20.allowance",
      "offset": [
        4046,
        4053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8362": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8363": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8364": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8365": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8367": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8369": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8370": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8371": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8372": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8374": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8375": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8376": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4090
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8377": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8378": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8379": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8380": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "AND",
      "path": "2"
    },
    "8381": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8382": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8383": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8384": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8385": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8386": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8387": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8388": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8389": {
      "fn": "ERC20.allowance",
      "offset": [
        4072,
        4099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8390": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3957,
        4106
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8391": {
      "offset": [
        2163,
        2198
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8392": {
      "fn": "ERC20.allowance",
      "offset": [
        2163,
        2198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "8394": {
      "fn": "ERC20.allowance",
      "offset": [
        2163,
        2198
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8395": {
      "fn": "ERC20.allowance",
      "offset": [
        2163,
        2198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8396": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2163,
        2198
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8397": {
      "offset": [
        2010,
        2042
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8398": {
      "fn": "ERC20.allowance",
      "offset": [
        2010,
        2042
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "8400": {
      "fn": "ERC20.allowance",
      "offset": [
        2010,
        2042
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8407": {
      "op": "SHL"
    },
    "8408": {
      "op": "SUB"
    },
    "8409": {
      "offset": [
        2010,
        2042
      ],
      "op": "AND",
      "path": "23"
    },
    "8410": {
      "fn": "ERC20.allowance",
      "offset": [
        2010,
        2042
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8411": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2010,
        2042
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8412": {
      "offset": [
        2049,
        2071
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8413": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xB"
    },
    "8415": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "8416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8420": {
      "op": "SHL"
    },
    "8421": {
      "offset": [
        2049,
        2071
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "8422": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "DIV",
      "path": "23"
    },
    "8423": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "8425": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "8426": {
      "fn": "ERC20.allowance",
      "offset": [
        2049,
        2071
      ],
      "op": "DUP2",
      "path": "23"
    },
    "8427": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2049,
        2071
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8428": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19247,
        19614
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8429": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19407,
        19417
      ],
      "op": "CALLER",
      "path": "23",
      "statement": 82
    },
    "8430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8436": {
      "op": "SHL"
    },
    "8437": {
      "op": "SUB"
    },
    "8438": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19429,
        19433
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "8471": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19407,
        19434
      ],
      "op": "AND",
      "path": "23"
    },
    "8472": {
      "branch": 246,
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19407,
        19434
      ],
      "op": "EQ",
      "path": "23"
    },
    "8473": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19399,
        19435
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2121"
    },
    "8476": {
      "branch": 246,
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19399,
        19435
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8477": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19399,
        19435
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8479": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19399,
        19435
      ],
      "op": "DUP1",
      "path": "23"
    },
    "8480": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19399,
        19435
      ],
      "op": "REVERT",
      "path": "23"
    },
    "8481": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19399,
        19435
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8482": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19464,
        19465
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8484": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19449,
        19461
      ],
      "op": "DUP5",
      "path": "23"
    },
    "8485": {
      "branch": 247,
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19449,
        19465
      ],
      "op": "SGT",
      "path": "23"
    },
    "8486": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19445,
        19521
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8487": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19445,
        19521
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x215E"
    },
    "8490": {
      "branch": 247,
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19445,
        19521
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8491": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19467,
        19521
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 83,
      "value": "0x215E"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8500": {
      "op": "SHL"
    },
    "8501": {
      "op": "SUB"
    },
    "8502": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19467,
        19473
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "8535": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19467,
        19486
      ],
      "op": "AND",
      "path": "23"
    },
    "8536": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19487,
        19497
      ],
      "op": "CALLER",
      "path": "23"
    },
    "8537": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19507,
        19519
      ],
      "op": "DUP7",
      "path": "23"
    },
    "8538": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19467,
        19486
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "8541": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "jump": "i",
      "offset": [
        19467,
        19521
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8542": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19467,
        19521
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "8543": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19550,
        19551
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "8545": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19535,
        19547
      ],
      "op": "DUP4",
      "path": "23"
    },
    "8546": {
      "branch": 248,
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19535,
        19551
      ],
      "op": "SGT",
      "path": "23"
    },
    "8547": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19531,
        19607
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "8548": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19531,
        19607
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1F89"
    },
    "8551": {
      "branch": 248,
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19531,
        19607
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "8552": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19553,
        19607
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 84,
      "value": "0x1F89"
    },
    "8555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8561": {
      "op": "SHL"
    },
    "8562": {
      "op": "SUB"
    },
    "8563": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19553,
        19559
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "8596": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19553,
        19572
      ],
      "op": "AND",
      "path": "23"
    },
    "8597": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19573,
        19583
      ],
      "op": "CALLER",
      "path": "23"
    },
    "8598": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19593,
        19605
      ],
      "op": "DUP6",
      "path": "23"
    },
    "8599": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "offset": [
        19553,
        19572
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x21F8"
    },
    "8602": {
      "fn": "AlphaVault.uniswapV3SwapCallback",
      "jump": "i",
      "offset": [
        19553,
        19607
      ],
      "op": "JUMP",
      "path": "23"
    },
    "8603": {
      "fn": "SafeMath.sub",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8604": {
      "fn": "SafeMath.sub",
      "offset": [
        3194,
        3201
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "8606": {
      "fn": "SafeMath.sub",
      "offset": [
        3226,
        3227
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 85
    },
    "8607": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3222
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8608": {
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "GT",
      "path": "1"
    },
    "8609": {
      "branch": 293,
      "fn": "SafeMath.sub",
      "offset": [
        3221,
        3227
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8610": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21F2"
    },
    "8613": {
      "branch": 293,
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "8614": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "8616": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP1",
      "path": "1"
    },
    "8617": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8624": {
      "op": "SHL"
    },
    "8625": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8626": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8627": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "8629": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "8631": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8632": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8633": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8634": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1E"
    },
    "8636": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "8638": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8639": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8640": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8641": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "8674": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "8676": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP3",
      "path": "1"
    },
    "8677": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8678": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "8679": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8680": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "8681": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8682": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "DUP2",
      "path": "1"
    },
    "8683": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8684": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SUB",
      "path": "1"
    },
    "8685": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "8687": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "ADD",
      "path": "1"
    },
    "8688": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8689": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "REVERT",
      "path": "1"
    },
    "8690": {
      "fn": "SafeMath.sub",
      "offset": [
        3213,
        3262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "8691": {
      "op": "POP"
    },
    "8692": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 86
    },
    "8693": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SUB",
      "path": "1"
    },
    "8694": {
      "fn": "SafeMath.sub",
      "offset": [
        3279,
        3284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "8695": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        3136,
        3291
      ],
      "op": "JUMP",
      "path": "1"
    },
    "8696": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        704,
        879
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8697": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 87,
      "value": "0x40"
    },
    "8699": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8700": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8707": {
      "op": "SHL"
    },
    "8708": {
      "op": "SUB"
    },
    "8709": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8710": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "4"
    },
    "8711": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "8713": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8714": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8715": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8716": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "8718": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8720": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8721": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8723": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8724": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8725": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8726": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8727": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8728": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SUB",
      "path": "4"
    },
    "8729": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8730": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8731": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8732": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8733": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8734": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "8736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8737": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8738": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8739": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8740": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8741": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8742": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8744": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8745": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "ADD",
      "path": "4"
    },
    "8746": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8754": {
      "op": "SHL"
    },
    "8755": {
      "op": "SUB"
    },
    "8756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "AND",
      "path": "4"
    },
    "8757": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "8762": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8764": {
      "op": "SHL"
    },
    "8765": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "OR",
      "path": "4"
    },
    "8766": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8767": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        871
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8768": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97D"
    },
    "8771": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        872
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8772": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8773": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        806,
        811
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8774": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        786,
        805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3235"
    },
    "8777": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        786,
        872
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8778": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "8779": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 88
    },
    "8780": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "8781": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "6"
    },
    "8782": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8789": {
      "op": "SHL"
    },
    "8790": {
      "op": "SUB"
    },
    "8791": {
      "fn": "ERC20._approve",
      "offset": [
        9456,
        9475
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 89
    },
    "8792": {
      "branch": 267,
      "fn": "ERC20._approve",
      "offset": [
        9456,
        9475
      ],
      "op": "AND",
      "path": "2"
    },
    "8793": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2293"
    },
    "8796": {
      "branch": 267,
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8797": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8799": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8800": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8806": {
      "op": "SHL"
    },
    "8807": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8808": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8809": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8811": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8812": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8813": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8814": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8816": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8817": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8818": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8819": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SUB",
      "path": "2"
    },
    "8820": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8821": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8822": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "8824": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8825": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8826": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8828": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8829": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8830": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D3D"
    },
    "8833": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "8835": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8836": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8837": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8839": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "ADD",
      "path": "2"
    },
    "8840": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8841": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "POP",
      "path": "2"
    },
    "8842": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "POP",
      "path": "2"
    },
    "8843": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8845": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8846": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8847": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8848": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SUB",
      "path": "2"
    },
    "8849": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8850": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8851": {
      "fn": "ERC20._approve",
      "offset": [
        9448,
        9516
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8858": {
      "op": "SHL"
    },
    "8859": {
      "op": "SUB"
    },
    "8860": {
      "fn": "ERC20._approve",
      "offset": [
        9534,
        9555
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 90
    },
    "8861": {
      "branch": 268,
      "fn": "ERC20._approve",
      "offset": [
        9534,
        9555
      ],
      "op": "AND",
      "path": "2"
    },
    "8862": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22D8"
    },
    "8865": {
      "branch": 268,
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8866": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8868": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8875": {
      "op": "SHL"
    },
    "8876": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8877": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8878": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8880": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8881": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8882": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8883": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8885": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8886": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8887": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8888": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SUB",
      "path": "2"
    },
    "8889": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8890": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8891": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "8893": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8894": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8895": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8897": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8898": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8899": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C40"
    },
    "8902": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "8904": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8905": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "8906": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8908": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "8909": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8910": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "POP",
      "path": "2"
    },
    "8911": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "POP",
      "path": "2"
    },
    "8912": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8914": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8915": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8916": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8917": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SUB",
      "path": "2"
    },
    "8918": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8919": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8920": {
      "fn": "ERC20._approve",
      "offset": [
        9526,
        9594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8927": {
      "op": "SHL"
    },
    "8928": {
      "op": "SUB"
    },
    "8929": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 91
    },
    "8930": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8931": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "AND",
      "path": "2"
    },
    "8932": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8934": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8935": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8936": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8937": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8939": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8941": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8942": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8943": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8944": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8946": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8947": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8948": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9623
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8949": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8950": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8951": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "AND",
      "path": "2"
    },
    "8952": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8953": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8954": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8955": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "8956": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8957": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8958": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8959": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8960": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8961": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8962": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8963": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8964": {
      "fn": "ERC20._approve",
      "offset": [
        9605,
        9641
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8965": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 92
    },
    "8966": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8967": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8968": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8969": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8970": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8971": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8972": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "9005": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9006": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9007": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9008": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SUB",
      "path": "2"
    },
    "9009": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9010": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9011": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "ADD",
      "path": "2"
    },
    "9012": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9013": {
      "fn": "ERC20._approve",
      "offset": [
        9656,
        9688
      ],
      "op": "LOG3",
      "path": "2"
    },
    "9014": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "2"
    },
    "9015": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "2"
    },
    "9016": {
      "fn": "ERC20._approve",
      "offset": [
        9355,
        9695
      ],
      "op": "POP",
      "path": "2"
    },
    "9017": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9355,
        9695
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9018": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9025": {
      "op": "SHL"
    },
    "9026": {
      "op": "SUB"
    },
    "9027": {
      "fn": "ERC20._transfer",
      "offset": [
        7136,
        7156
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 93
    },
    "9028": {
      "branch": 269,
      "fn": "ERC20._transfer",
      "offset": [
        7136,
        7156
      ],
      "op": "AND",
      "path": "2"
    },
    "9029": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x237F"
    },
    "9032": {
      "branch": 269,
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9033": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9035": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9036": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9042": {
      "op": "SHL"
    },
    "9043": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9044": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9045": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9047": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "9048": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9049": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9050": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9052": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "9053": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9054": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9055": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SUB",
      "path": "2"
    },
    "9056": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9057": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9058": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "9060": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9061": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9062": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9064": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "9065": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9066": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D18"
    },
    "9069": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x25"
    },
    "9071": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9072": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "9073": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9075": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "ADD",
      "path": "2"
    },
    "9076": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9077": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "POP",
      "path": "2"
    },
    "9078": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "POP",
      "path": "2"
    },
    "9079": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9081": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9082": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9083": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9084": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SUB",
      "path": "2"
    },
    "9085": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9086": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9087": {
      "fn": "ERC20._transfer",
      "offset": [
        7128,
        7198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9094": {
      "op": "SHL"
    },
    "9095": {
      "op": "SUB"
    },
    "9096": {
      "fn": "ERC20._transfer",
      "offset": [
        7216,
        7239
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 94
    },
    "9097": {
      "branch": 270,
      "fn": "ERC20._transfer",
      "offset": [
        7216,
        7239
      ],
      "op": "AND",
      "path": "2"
    },
    "9098": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C4"
    },
    "9101": {
      "branch": 270,
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9102": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9104": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9111": {
      "op": "SHL"
    },
    "9112": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9113": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9114": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9116": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "9117": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9118": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9119": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9121": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "9122": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9123": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9124": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SUB",
      "path": "2"
    },
    "9125": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9126": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9127": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "9129": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9130": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9131": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9133": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "9134": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9135": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BFB"
    },
    "9138": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x23"
    },
    "9140": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9141": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "9142": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9144": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "ADD",
      "path": "2"
    },
    "9145": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9146": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "POP",
      "path": "2"
    },
    "9147": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "POP",
      "path": "2"
    },
    "9148": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9150": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9151": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9152": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9153": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SUB",
      "path": "2"
    },
    "9154": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9155": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "REVERT",
      "path": "2"
    },
    "9156": {
      "fn": "ERC20._transfer",
      "offset": [
        7208,
        7279
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9157": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7337
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 95,
      "value": "0x23CF"
    },
    "9160": {
      "fn": "ERC20._transfer",
      "offset": [
        7311,
        7317
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9161": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9162": {
      "fn": "ERC20._transfer",
      "offset": [
        7330,
        7336
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9163": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7310
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97D"
    },
    "9166": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7290,
        7337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9167": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9168": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 96,
      "value": "0x240C"
    },
    "9171": {
      "fn": "ERC20._transfer",
      "offset": [
        7390,
        7396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9172": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9174": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9175": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9176": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "9178": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "2"
    },
    "9179": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9181": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9182": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9183": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "9185": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9186": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9187": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9189": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "ADD",
      "path": "2"
    },
    "9190": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C62"
    },
    "9193": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x26"
    },
    "9195": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9196": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9203": {
      "op": "SHL"
    },
    "9204": {
      "op": "SUB"
    },
    "9205": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP7",
      "path": "2"
    },
    "9206": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "AND",
      "path": "2"
    },
    "9207": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9209": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9210": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9211": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9212": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9214": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9215": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9216": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9217": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9219": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9220": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9221": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9222": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7385
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9223": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9224": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2495"
    },
    "9227": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9228": {
      "fn": "ERC20._transfer",
      "offset": [
        7368,
        7439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9235": {
      "op": "SHL"
    },
    "9236": {
      "op": "SUB"
    },
    "9237": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9238": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9239": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "AND",
      "path": "2"
    },
    "9240": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9242": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9243": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9244": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9245": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9247": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9248": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9249": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9250": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9252": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9253": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9254": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7365
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9255": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9256": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9257": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9258": {
      "fn": "ERC20._transfer",
      "offset": [
        7348,
        7439
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9259": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 97
    },
    "9260": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9261": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "AND",
      "path": "2"
    },
    "9262": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9263": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9264": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9265": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7492
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9266": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x243B"
    },
    "9269": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9270": {
      "fn": "ERC20._transfer",
      "offset": [
        7497,
        7503
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9271": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2842"
    },
    "9274": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7472,
        7504
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9275": {
      "fn": "ERC20._transfer",
      "offset": [
        7472,
        7504
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9282": {
      "op": "SHL"
    },
    "9283": {
      "op": "SUB"
    },
    "9284": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9285": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP5",
      "path": "2"
    },
    "9286": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "AND",
      "path": "2"
    },
    "9287": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9289": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9290": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9291": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9292": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9294": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9295": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9296": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9297": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9299": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9300": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9301": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9302": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9303": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9304": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9305": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9306": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7504
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9307": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 98
    },
    "9308": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9309": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP6",
      "path": "2"
    },
    "9310": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9311": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9312": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9313": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9314": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9315": {
      "fn": "ERC20._transfer",
      "offset": [
        7449,
        7469
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9316": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9317": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9318": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "AND",
      "path": "2"
    },
    "9319": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9320": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9353": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9354": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9355": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9356": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9357": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SUB",
      "path": "2"
    },
    "9358": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "ADD",
      "path": "2"
    },
    "9359": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9360": {
      "fn": "ERC20._transfer",
      "offset": [
        7519,
        7554
      ],
      "op": "LOG3",
      "path": "2"
    },
    "9361": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "POP",
      "path": "2"
    },
    "9362": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "POP",
      "path": "2"
    },
    "9363": {
      "fn": "ERC20._transfer",
      "offset": [
        7031,
        7561
      ],
      "op": "POP",
      "path": "2"
    },
    "9364": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7031,
        7561
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9365": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9366": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9368": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 99
    },
    "9369": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9370": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "9371": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "1"
    },
    "9372": {
      "branch": 294,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9373": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2524"
    },
    "9376": {
      "branch": 294,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9377": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9379": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9386": {
      "op": "SHL"
    },
    "9387": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9388": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9389": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "9391": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9392": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9393": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9394": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9396": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9397": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9398": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9399": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "9400": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9401": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9402": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9403": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9404": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9405": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9406": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9407": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9408": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9410": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9411": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9412": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9413": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9414": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9415": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9416": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9418": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9419": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9420": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9421": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9422": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9423": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "9425": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9426": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9427": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9428": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "1"
    },
    "9429": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9430": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E9"
    },
    "9433": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9434": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9435": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9436": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9437": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9438": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9439": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9440": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9441": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9442": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9444": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9445": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24D1"
    },
    "9448": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9449": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9450": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9451": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9452": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9453": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9454": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9455": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9456": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9457": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9458": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9459": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9460": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "9462": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "1"
    },
    "9463": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9464": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "9465": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2516"
    },
    "9468": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "9469": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9470": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "9471": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "9472": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9473": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9474": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "9476": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "9477": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9479": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "9480": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "9483": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "1"
    },
    "9484": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "9485": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "1"
    },
    "9486": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "1"
    },
    "9487": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "9488": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "9489": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "9491": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "1"
    },
    "9492": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9493": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9494": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9495": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9496": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "9497": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9498": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9499": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "1"
    },
    "9500": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "9502": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "9503": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "9504": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "9505": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "1"
    },
    "9506": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9507": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "1"
    },
    "9508": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "9509": {
      "op": "POP"
    },
    "9510": {
      "op": "POP"
    },
    "9511": {
      "op": "POP"
    },
    "9512": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 100
    },
    "9513": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "1"
    },
    "9514": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "9515": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "1"
    },
    "9516": {
      "fn": "AlphaVault._poke",
      "offset": [
        5375,
        5598
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9517": {
      "fn": "AlphaVault._poke",
      "offset": [
        5444,
        5461
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9519": {
      "fn": "AlphaVault._poke",
      "offset": [
        5473,
        5504
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2538"
    },
    "9522": {
      "fn": "AlphaVault._poke",
      "offset": [
        5483,
        5492
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9523": {
      "fn": "AlphaVault._poke",
      "offset": [
        5494,
        5503
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9524": {
      "fn": "AlphaVault._poke",
      "offset": [
        5473,
        5482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7C"
    },
    "9527": {
      "fn": "AlphaVault._poke",
      "jump": "i",
      "offset": [
        5473,
        5504
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9528": {
      "fn": "AlphaVault._poke",
      "offset": [
        5473,
        5504
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9529": {
      "fn": "AlphaVault._poke",
      "offset": [
        5443,
        5504
      ],
      "op": "POP",
      "path": "23"
    },
    "9530": {
      "fn": "AlphaVault._poke",
      "offset": [
        5443,
        5504
      ],
      "op": "POP",
      "path": "23"
    },
    "9531": {
      "fn": "AlphaVault._poke",
      "offset": [
        5443,
        5504
      ],
      "op": "POP",
      "path": "23"
    },
    "9532": {
      "fn": "AlphaVault._poke",
      "offset": [
        5443,
        5504
      ],
      "op": "POP",
      "path": "23"
    },
    "9533": {
      "fn": "AlphaVault._poke",
      "offset": [
        5443,
        5504
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9534": {
      "fn": "AlphaVault._poke",
      "offset": [
        5443,
        5504
      ],
      "op": "POP",
      "path": "23"
    },
    "9535": {
      "fn": "AlphaVault._poke",
      "offset": [
        5530,
        5531
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9537": {
      "fn": "AlphaVault._poke",
      "offset": [
        5518,
        5527
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9542": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9544": {
      "op": "SHL"
    },
    "9545": {
      "op": "SUB"
    },
    "9546": {
      "fn": "AlphaVault._poke",
      "offset": [
        5518,
        5531
      ],
      "op": "AND",
      "path": "23"
    },
    "9547": {
      "branch": 249,
      "fn": "AlphaVault._poke",
      "offset": [
        5518,
        5531
      ],
      "op": "GT",
      "path": "23"
    },
    "9548": {
      "fn": "AlphaVault._poke",
      "offset": [
        5514,
        5592
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9549": {
      "fn": "AlphaVault._poke",
      "offset": [
        5514,
        5592
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x97D"
    },
    "9552": {
      "branch": 249,
      "fn": "AlphaVault._poke",
      "offset": [
        5514,
        5592
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9553": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5551
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 101,
      "value": "0x0"
    },
    "9586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9592": {
      "op": "SHL"
    },
    "9593": {
      "op": "SUB"
    },
    "9594": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5556
      ],
      "op": "AND",
      "path": "23"
    },
    "9595": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5556
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "9600": {
      "fn": "AlphaVault._poke",
      "offset": [
        5557,
        5566
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9601": {
      "fn": "AlphaVault._poke",
      "offset": [
        5568,
        5577
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9602": {
      "fn": "AlphaVault._poke",
      "offset": [
        5579,
        5580
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9604": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9606": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9607": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9608": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "9613": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "AND",
      "path": "23"
    },
    "9614": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "9616": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "SHL",
      "path": "23"
    },
    "9617": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9618": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9619": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9621": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "ADD",
      "path": "23"
    },
    "9622": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9623": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9624": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "9626": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "9627": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9628": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9629": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9631": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "ADD",
      "path": "23"
    },
    "9632": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9633": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "9635": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "9636": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9637": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9638": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9640": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "ADD",
      "path": "23"
    },
    "9641": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9642": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9643": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9644": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9646": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "ADD",
      "path": "23"
    },
    "9647": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9648": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "POP",
      "path": "23"
    },
    "9649": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "POP",
      "path": "23"
    },
    "9650": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "POP",
      "path": "23"
    },
    "9651": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "POP",
      "path": "23"
    },
    "9652": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9654": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9655": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9656": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9657": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP4",
      "path": "23"
    },
    "9658": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "SUB",
      "path": "23"
    },
    "9659": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9660": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9662": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP8",
      "path": "23"
    },
    "9663": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9664": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "9665": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9666": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9667": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "9668": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AC4"
    },
    "9671": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9672": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9674": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9675": {
      "fn": "AlphaVault._poke",
      "offset": [
        5547,
        5581
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9676": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9677": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5960,
        5974
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9679": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5988,
        6003
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9680": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6017,
        6032
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9682": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6057,
        6076
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9683": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6079,
        6092
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25DA"
    },
    "9686": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6079,
        6090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA8E"
    },
    "9689": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6079,
        6092
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9690": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6079,
        6092
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9691": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6057,
        6092
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9692": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6057,
        6092
      ],
      "op": "POP",
      "path": "23"
    },
    "9693": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6103,
        6117
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9695": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6119,
        6133
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9696": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6137,
        6154
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25E7"
    },
    "9699": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6137,
        6152
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AFB"
    },
    "9702": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6137,
        6154
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9703": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6137,
        6154
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9704": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6102,
        6154
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9705": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6102,
        6154
      ],
      "op": "POP",
      "path": "23"
    },
    "9706": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6102,
        6154
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "9707": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6102,
        6154
      ],
      "op": "POP",
      "path": "23"
    },
    "9708": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6236
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 102
    },
    "9709": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6240,
        6241
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9711": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6241
      ],
      "op": "EQ",
      "path": "23"
    },
    "9712": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6255
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9713": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6255
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x25FA"
    },
    "9716": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6255
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9717": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6255
      ],
      "op": "POP",
      "path": "23"
    },
    "9718": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6254,
        6255
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9720": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6245,
        6251
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9721": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6245,
        6255
      ],
      "op": "GT",
      "path": "23"
    },
    "9722": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6255
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9723": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6269
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9724": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6269
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2605"
    },
    "9727": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6269
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9728": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6269
      ],
      "op": "POP",
      "path": "23"
    },
    "9729": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6268,
        6269
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9731": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6259,
        6265
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9732": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6259,
        6269
      ],
      "op": "GT",
      "path": "23"
    },
    "9733": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6225,
        6269
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9734": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6218,
        6270
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x260B"
    },
    "9737": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6218,
        6270
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9738": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6218,
        6270
      ],
      "op": "INVALID",
      "path": "23"
    },
    "9739": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6218,
        6270
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9740": {
      "branch": 250,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6285,
        6301
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9741": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6281,
        7128
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2627"
    },
    "9744": {
      "branch": 250,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6281,
        7128
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9745": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6390,
        6404
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 103
    },
    "9746": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6380,
        6404
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9747": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6380,
        6404
      ],
      "op": "POP",
      "path": "23"
    },
    "9748": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6428,
        6442
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 104
    },
    "9749": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6418,
        6442
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9750": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6418,
        6442
      ],
      "op": "POP",
      "path": "23"
    },
    "9751": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6465,
        6491
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 105,
      "value": "0x2620"
    },
    "9754": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6474,
        6481
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9755": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6483,
        6490
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9756": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6465,
        6473
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x32E6"
    },
    "9759": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6465,
        6491
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9760": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6465,
        6491
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9761": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6456,
        6491
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "9762": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6456,
        6491
      ],
      "op": "POP",
      "path": "23"
    },
    "9763": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6281,
        7128
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26EE"
    },
    "9766": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6281,
        7128
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9767": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6281,
        7128
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9768": {
      "branch": 251,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6512,
        6523
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9769": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6508,
        7128
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x263D"
    },
    "9772": {
      "branch": 251,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6508,
        7128
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9773": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6549,
        6563
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 106
    },
    "9774": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6549,
        6563
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "9775": {
      "op": "POP"
    },
    "9776": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6586,
        6622
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 107,
      "value": "0x2620"
    },
    "9779": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9780": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6586,
        6610
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "9783": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6549,
        6563
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9784": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6598,
        6609
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9785": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6586,
        6597
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "9788": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6586,
        6610
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9789": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6508,
        7128
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9790": {
      "branch": 252,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6643,
        6654
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9791": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6639,
        7128
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2653"
    },
    "9794": {
      "branch": 252,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6639,
        7128
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9795": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6680,
        6694
      ],
      "op": "DUP8",
      "path": "23",
      "statement": 108
    },
    "9796": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6680,
        6694
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9797": {
      "op": "POP"
    },
    "9798": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6717,
        6753
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 109,
      "value": "0x2620"
    },
    "9801": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6746,
        6752
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9802": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6717,
        6741
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "9805": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6680,
        6694
      ],
      "op": "DUP8",
      "path": "23"
    },
    "9806": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6729,
        6740
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9807": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6717,
        6728
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "9810": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6717,
        6741
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9811": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6639,
        7128
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9812": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6784,
        6797
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "9814": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6800,
        6864
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2671"
    },
    "9817": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6809,
        6835
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2662"
    },
    "9820": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6809,
        6823
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9821": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6828,
        6834
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9822": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6809,
        6827
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "9825": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6809,
        6835
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9826": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6809,
        6835
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9827": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6837,
        6863
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x266C"
    },
    "9830": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6837,
        6851
      ],
      "op": "DUP11",
      "path": "23"
    },
    "9831": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6856,
        6862
      ],
      "op": "DUP7",
      "path": "23"
    },
    "9832": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6837,
        6855
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "9835": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6837,
        6863
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9836": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6837,
        6863
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9837": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6800,
        6808
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x32FD"
    },
    "9840": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6800,
        6864
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9841": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6800,
        6864
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9842": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6784,
        6864
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9843": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6784,
        6864
      ],
      "op": "POP",
      "path": "23"
    },
    "9844": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6894,
        6895
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 110,
      "value": "0x0"
    },
    "9846": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6886,
        6891
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9847": {
      "branch": 253,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6886,
        6895
      ],
      "op": "GT",
      "path": "23"
    },
    "9848": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x26B0"
    },
    "9851": {
      "branch": 253,
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "9852": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "9854": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "DUP1",
      "path": "23"
    },
    "9855": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9856": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9862": {
      "op": "SHL"
    },
    "9863": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9864": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9865": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "9867": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "9869": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9870": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "ADD",
      "path": "23"
    },
    "9871": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9872": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "9874": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "9876": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9877": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "ADD",
      "path": "23"
    },
    "9878": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9879": {
      "op": "PUSH5",
      "value": "0x63726F7373"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9887": {
      "op": "SHL"
    },
    "9888": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "9890": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9891": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "ADD",
      "path": "23"
    },
    "9892": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "9893": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9894": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "9895": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9896": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9897": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9898": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "SUB",
      "path": "23"
    },
    "9899": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "9901": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "ADD",
      "path": "23"
    },
    "9902": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "9903": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "REVERT",
      "path": "23"
    },
    "9904": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6878,
        6905
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9905": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6962,
        6993
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 111,
      "value": "0x26C3"
    },
    "9908": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6991,
        6992
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9910": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6962,
        6986
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "9913": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6979,
        6985
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9914": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6962,
        6974
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "9917": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6962,
        6967
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9918": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6991,
        6992
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9919": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6962,
        6971
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "9922": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        6962,
        6974
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9923": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6962,
        6993
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9924": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6952,
        6993
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "9925": {
      "op": "POP"
    },
    "9926": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7017,
        7048
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 112,
      "value": "0x26D8"
    },
    "9929": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7046,
        7047
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "9931": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7017,
        7041
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1B66"
    },
    "9934": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7034,
        7040
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9935": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7017,
        7029
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "9938": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7017,
        7022
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9939": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7046,
        7047
      ],
      "op": "DUP5",
      "path": "23"
    },
    "9940": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7017,
        7026
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "9943": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        7017,
        7029
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9944": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7017,
        7048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9945": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7007,
        7048
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "9946": {
      "op": "POP"
    },
    "9947": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7071,
        7117
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 113,
      "value": "0x26EA"
    },
    "9950": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7110,
        7116
      ],
      "op": "DUP3",
      "path": "23"
    },
    "9951": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7071,
        7105
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "9954": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7098,
        7104
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9955": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7071,
        7105
      ],
      "op": "DUP2",
      "path": "23"
    },
    "9956": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7071,
        7076
      ],
      "op": "DUP6",
      "path": "23"
    },
    "9957": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7081,
        7092
      ],
      "op": "DUP10",
      "path": "23"
    },
    "9958": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7071,
        7080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "9961": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "i",
      "offset": [
        7071,
        7093
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9962": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7071,
        7117
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9963": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7062,
        7117
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "9964": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        7062,
        7117
      ],
      "op": "POP",
      "path": "23"
    },
    "9965": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6639,
        7128
      ],
      "op": "POP",
      "path": "23"
    },
    "9966": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        6639,
        7128
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "9967": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "POP",
      "path": "23"
    },
    "9968": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "POP",
      "path": "23"
    },
    "9969": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "POP",
      "path": "23"
    },
    "9970": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9971": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "POP",
      "path": "23"
    },
    "9972": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9973": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "POP",
      "path": "23"
    },
    "9974": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "offset": [
        5821,
        7134
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "9975": {
      "fn": "AlphaVault._calcSharesAndAmounts",
      "jump": "o",
      "offset": [
        5821,
        7134
      ],
      "op": "JUMP",
      "path": "23"
    },
    "9976": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        885,
        1088
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9977": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 114,
      "value": "0x40"
    },
    "9979": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9980": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9987": {
      "op": "SHL"
    },
    "9988": {
      "op": "SUB"
    },
    "9989": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9990": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP7",
      "path": "4"
    },
    "9991": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "9992": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "9994": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9995": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "9996": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9997": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9998": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "9999": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "10001": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10002": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "10003": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10004": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "10006": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10007": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10008": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "10009": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10010": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10011": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10012": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10013": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10014": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10015": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10016": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SUB",
      "path": "4"
    },
    "10017": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10018": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10019": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "10020": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10021": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10022": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x84"
    },
    "10024": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10025": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10026": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "10027": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10028": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10029": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10030": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10032": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10033": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "ADD",
      "path": "4"
    },
    "10034": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10035": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10042": {
      "op": "SHL"
    },
    "10043": {
      "op": "SUB"
    },
    "10044": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "AND",
      "path": "4"
    },
    "10045": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "10050": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10052": {
      "op": "SHL"
    },
    "10053": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "OR",
      "path": "4"
    },
    "10054": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10055": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1012,
        1080
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10056": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F89"
    },
    "10059": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10060": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "DUP6",
      "path": "4"
    },
    "10061": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1005,
        1010
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10062": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        985,
        1004
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3235"
    },
    "10065": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        985,
        1081
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10066": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10073": {
      "op": "SHL"
    },
    "10074": {
      "op": "SUB"
    },
    "10075": {
      "fn": "ERC20._mint",
      "offset": [
        7915,
        7936
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 115
    },
    "10076": {
      "branch": 271,
      "fn": "ERC20._mint",
      "offset": [
        7915,
        7936
      ],
      "op": "AND",
      "path": "2"
    },
    "10077": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27AD"
    },
    "10080": {
      "branch": 271,
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10081": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10083": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10084": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10085": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10091": {
      "op": "SHL"
    },
    "10092": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10093": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10094": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10096": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10098": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10099": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "10100": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10101": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "10103": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "10105": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10106": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "10107": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10108": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "10141": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "10143": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10144": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "10145": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10146": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10147": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10148": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10149": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10150": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10151": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SUB",
      "path": "2"
    },
    "10152": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "10154": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "ADD",
      "path": "2"
    },
    "10155": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10156": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10157": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7972
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10158": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8032
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 116,
      "value": "0x27B9"
    },
    "10161": {
      "fn": "ERC20._mint",
      "offset": [
        8012,
        8013
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10163": {
      "fn": "ERC20._mint",
      "offset": [
        8016,
        8023
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10164": {
      "fn": "ERC20._mint",
      "offset": [
        8025,
        8031
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10165": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97D"
    },
    "10168": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7983,
        8032
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10169": {
      "fn": "ERC20._mint",
      "offset": [
        7983,
        8032
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10170": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8070
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 117,
      "value": "0x2"
    },
    "10172": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8070
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10173": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27C6"
    },
    "10176": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10177": {
      "fn": "ERC20._mint",
      "offset": [
        8075,
        8081
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10178": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8074
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2842"
    },
    "10181": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8058,
        8082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10182": {
      "fn": "ERC20._mint",
      "offset": [
        8058,
        8082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10183": {
      "fn": "ERC20._mint",
      "offset": [
        8043,
        8055
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10185": {
      "fn": "ERC20._mint",
      "offset": [
        8043,
        8082
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10190": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10192": {
      "op": "SHL"
    },
    "10193": {
      "op": "SUB"
    },
    "10194": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 118
    },
    "10195": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "AND",
      "path": "2"
    },
    "10196": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8122
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10198": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10199": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10200": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10201": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10203": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10204": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10205": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10206": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10208": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10209": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10210": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8131
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10211": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27EC"
    },
    "10214": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10215": {
      "fn": "ERC20._mint",
      "offset": [
        8136,
        8142
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10216": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2842"
    },
    "10219": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        8113,
        8143
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10220": {
      "fn": "ERC20._mint",
      "offset": [
        8113,
        8143
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10227": {
      "op": "SHL"
    },
    "10228": {
      "op": "SUB"
    },
    "10229": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10230": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "AND",
      "path": "2"
    },
    "10231": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10233": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10234": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10235": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10236": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10238": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10239": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10240": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10241": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10243": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10244": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10245": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10246": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10247": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10248": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "10249": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8143
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10250": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 119
    },
    "10251": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10252": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10253": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10254": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10255": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10256": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10257": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10258": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8110
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10259": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10260": {
      "fn": "ERC20._mint",
      "offset": [
        8092,
        8101
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10261": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "10294": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10295": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10296": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10297": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SUB",
      "path": "2"
    },
    "10298": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10299": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10300": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "ADD",
      "path": "2"
    },
    "10301": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10302": {
      "fn": "ERC20._mint",
      "offset": [
        8158,
        8195
      ],
      "op": "LOG3",
      "path": "2"
    },
    "10303": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "10304": {
      "fn": "ERC20._mint",
      "offset": [
        7832,
        8202
      ],
      "op": "POP",
      "path": "2"
    },
    "10305": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7832,
        8202
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10306": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10307": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "10309": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10310": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10311": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "1"
    },
    "10312": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 120
    },
    "10313": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10314": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "1"
    },
    "10315": {
      "branch": 295,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "10316": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7C"
    },
    "10319": {
      "branch": 295,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10320": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10322": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10323": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10330": {
      "op": "SHL"
    },
    "10331": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10332": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10333": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "10335": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10337": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10338": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "10339": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10340": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1B"
    },
    "10342": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "10344": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10345": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "10346": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10347": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "10380": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "10382": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10383": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "10384": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10385": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10386": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10387": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10388": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10389": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10390": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "1"
    },
    "10391": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "10393": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "1"
    },
    "10394": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10395": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "1"
    },
    "10396": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12731,
        13205
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10397": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12831,
        12842
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "10430": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 121,
      "value": "0x2"
    },
    "10432": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10433": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10434": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10435": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10436": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10437": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10438": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10439": {
      "branch": 254,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12860,
        12881
      ],
      "op": "SLT",
      "path": "23"
    },
    "10440": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2910"
    },
    "10443": {
      "branch": 254,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10444": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10446": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10447": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10448": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10452": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10454": {
      "op": "SHL"
    },
    "10455": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10456": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10457": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10459": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10461": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10462": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "ADD",
      "path": "23"
    },
    "10463": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10464": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x15"
    },
    "10466": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10468": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10469": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "ADD",
      "path": "23"
    },
    "10470": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10471": {
      "op": "PUSH21",
      "value": "0x3A34B1B5A637BBB2B9101E103A34B1B5AAB83832B9"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "10495": {
      "op": "SHL"
    },
    "10496": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10498": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10499": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "ADD",
      "path": "23"
    },
    "10500": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10501": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10502": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10503": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10504": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10505": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10506": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "SUB",
      "path": "23"
    },
    "10507": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10509": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "ADD",
      "path": "23"
    },
    "10510": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10511": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10512": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12852,
        12907
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10513": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "10517": {
      "op": "NOT"
    },
    "10518": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12925,
        12955
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 122,
      "value": "0x2"
    },
    "10520": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12925,
        12955
      ],
      "op": "DUP5",
      "path": "23"
    },
    "10521": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12925,
        12955
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10522": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12925,
        12955
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10523": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12925,
        12955
      ],
      "op": "SLT",
      "path": "23"
    },
    "10524": {
      "branch": 255,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12925,
        12955
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10525": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2961"
    },
    "10528": {
      "branch": 255,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10529": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10531": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10532": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10539": {
      "op": "SHL"
    },
    "10540": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10541": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10542": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10544": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10546": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10547": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "ADD",
      "path": "23"
    },
    "10548": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10549": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x11"
    },
    "10551": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10553": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10554": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "ADD",
      "path": "23"
    },
    "10555": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10556": {
      "op": "PUSH17",
      "value": "0x7469636B4C6F77657220746F6F206C6F77"
    },
    "10574": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "10576": {
      "op": "SHL"
    },
    "10577": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10579": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10580": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "ADD",
      "path": "23"
    },
    "10581": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10582": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10583": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10584": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10585": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10586": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10587": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "SUB",
      "path": "23"
    },
    "10588": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10590": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "ADD",
      "path": "23"
    },
    "10591": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10592": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10593": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12917,
        12977
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10594": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "10598": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12995,
        13025
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 123,
      "value": "0x2"
    },
    "10600": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12995,
        13025
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10601": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12995,
        13025
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10602": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12995,
        13025
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10603": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12995,
        13025
      ],
      "op": "SGT",
      "path": "23"
    },
    "10604": {
      "branch": 256,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12995,
        13025
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10605": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29B2"
    },
    "10608": {
      "branch": 256,
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10609": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10611": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10612": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10619": {
      "op": "SHL"
    },
    "10620": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10621": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10622": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10624": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10626": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10627": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "ADD",
      "path": "23"
    },
    "10628": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10629": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x12"
    },
    "10631": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10633": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10634": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "ADD",
      "path": "23"
    },
    "10635": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10636": {
      "op": "PUSH18",
      "value": "0xE8D2C6D6AAE0E0CAE440E8DEDE40D0D2CED"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "10657": {
      "op": "SHL"
    },
    "10658": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10660": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10661": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "ADD",
      "path": "23"
    },
    "10662": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10663": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10664": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10665": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10666": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10667": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10668": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "SUB",
      "path": "23"
    },
    "10669": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10671": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "ADD",
      "path": "23"
    },
    "10672": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10673": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10674": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        12987,
        13048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10675": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13078,
        13090
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 124
    },
    "10676": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10678": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10679": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13075
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10680": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10682": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10683": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10684": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x29C1"
    },
    "10687": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10688": {
      "dev": "Modulus by zero",
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "INVALID",
      "path": "23"
    },
    "10689": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10690": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13090
      ],
      "op": "SMOD",
      "path": "23"
    },
    "10691": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13095
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10693": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13095
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10694": {
      "branch": 257,
      "fn": "AlphaVault._checkRange",
      "offset": [
        13066,
        13095
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10695": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A17"
    },
    "10698": {
      "branch": 257,
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10699": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10701": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10702": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10703": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10709": {
      "op": "SHL"
    },
    "10710": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10711": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10712": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10714": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10716": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10717": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "ADD",
      "path": "23"
    },
    "10718": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10719": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x17"
    },
    "10721": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10723": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10724": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "ADD",
      "path": "23"
    },
    "10725": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10726": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x7469636B4C6F7765722025207469636B53706163696E67000000000000000000"
    },
    "10759": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10761": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10762": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "ADD",
      "path": "23"
    },
    "10763": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10764": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10765": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10766": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10767": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10768": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10769": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "SUB",
      "path": "23"
    },
    "10770": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10772": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "ADD",
      "path": "23"
    },
    "10773": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10774": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10775": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13058,
        13123
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10776": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13153,
        13165
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 125
    },
    "10777": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10779": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10780": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13150
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10781": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10783": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10784": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10785": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A26"
    },
    "10788": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10789": {
      "dev": "Modulus by zero",
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "INVALID",
      "path": "23"
    },
    "10790": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10791": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13165
      ],
      "op": "SMOD",
      "path": "23"
    },
    "10792": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13170
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "10794": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13170
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "10795": {
      "branch": 258,
      "fn": "AlphaVault._checkRange",
      "offset": [
        13141,
        13170
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10796": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x97D"
    },
    "10799": {
      "branch": 258,
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10800": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10802": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10803": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10804": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10810": {
      "op": "SHL"
    },
    "10811": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10812": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10813": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10815": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10817": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10818": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "ADD",
      "path": "23"
    },
    "10819": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10820": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x17"
    },
    "10822": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "10824": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10825": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "ADD",
      "path": "23"
    },
    "10826": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10827": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x7469636B55707065722025207469636B53706163696E67000000000000000000"
    },
    "10860": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "10862": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10863": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "ADD",
      "path": "23"
    },
    "10864": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10865": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10866": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10867": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10868": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10869": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10870": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "SUB",
      "path": "23"
    },
    "10871": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "10873": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "ADD",
      "path": "23"
    },
    "10874": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10875": {
      "fn": "AlphaVault._checkRange",
      "offset": [
        13133,
        13198
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10876": {
      "fn": "AlphaVault._position",
      "offset": [
        17131,
        17489
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10877": {
      "fn": "AlphaVault._position",
      "offset": [
        17244,
        17251
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10879": {
      "fn": "AlphaVault._position",
      "offset": [
        17265,
        17272
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10880": {
      "fn": "AlphaVault._position",
      "offset": [
        17286,
        17293
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10882": {
      "fn": "AlphaVault._position",
      "offset": [
        17307,
        17314
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10883": {
      "fn": "AlphaVault._position",
      "offset": [
        17328,
        17335
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10885": {
      "fn": "AlphaVault._position",
      "offset": [
        17360,
        17379
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10886": {
      "fn": "AlphaVault._position",
      "offset": [
        17382,
        17438
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A90"
    },
    "10889": {
      "fn": "AlphaVault._position",
      "offset": [
        17410,
        17414
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "10890": {
      "fn": "AlphaVault._position",
      "offset": [
        17417,
        17426
      ],
      "op": "DUP10",
      "path": "23"
    },
    "10891": {
      "fn": "AlphaVault._position",
      "offset": [
        17428,
        17437
      ],
      "op": "DUP10",
      "path": "23"
    },
    "10892": {
      "fn": "AlphaVault._position",
      "offset": [
        17382,
        17401
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x330C"
    },
    "10895": {
      "fn": "AlphaVault._position",
      "jump": "i",
      "offset": [
        17382,
        17438
      ],
      "op": "JUMP",
      "path": "23"
    },
    "10896": {
      "fn": "AlphaVault._position",
      "offset": [
        17382,
        17438
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10897": {
      "fn": "AlphaVault._position",
      "offset": [
        17360,
        17438
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "10898": {
      "fn": "AlphaVault._position",
      "offset": [
        17360,
        17438
      ],
      "op": "POP",
      "path": "23"
    },
    "10899": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17459
      ],
      "op": "PUSH32",
      "path": "23",
      "statement": 126,
      "value": "0x0"
    },
    "10932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10938": {
      "op": "SHL"
    },
    "10939": {
      "op": "SUB"
    },
    "10940": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17469
      ],
      "op": "AND",
      "path": "23"
    },
    "10941": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17469
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x514EA4BF"
    },
    "10946": {
      "fn": "AlphaVault._position",
      "offset": [
        17470,
        17481
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10947": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10949": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10950": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10951": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "10956": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "AND",
      "path": "23"
    },
    "10957": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "10959": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SHL",
      "path": "23"
    },
    "10960": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10961": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10962": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "10964": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ADD",
      "path": "23"
    },
    "10965": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10966": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP3",
      "path": "23"
    },
    "10967": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10968": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "10969": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "10971": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ADD",
      "path": "23"
    },
    "10972": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "10973": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "10974": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "10975": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "10977": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "10979": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "10980": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10981": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP4",
      "path": "23"
    },
    "10982": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SUB",
      "path": "23"
    },
    "10983": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "10984": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP7",
      "path": "23"
    },
    "10985": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10986": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "10987": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10988": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10989": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "10990": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2AF6"
    },
    "10993": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "10994": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "10996": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "10997": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "REVERT",
      "path": "23"
    },
    "10998": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "10999": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "11000": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "GAS",
      "path": "23"
    },
    "11001": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "11002": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11003": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11004": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11005": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B0A"
    },
    "11008": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11009": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11010": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11012": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11013": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11014": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11015": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11017": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11018": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11019": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "11020": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "11021": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "11022": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "POP",
      "path": "23"
    },
    "11023": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11025": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11026": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11027": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11029": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11030": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "LT",
      "path": "23"
    },
    "11031": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11032": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B20"
    },
    "11035": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11036": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11038": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11039": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11040": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11041": {
      "op": "POP"
    },
    "11042": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11043": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11044": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11046": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11047": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ADD",
      "path": "23"
    },
    "11048": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11049": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11051": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11052": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ADD",
      "path": "23"
    },
    "11053": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11054": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "11056": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11057": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ADD",
      "path": "23"
    },
    "11058": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11059": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "11061": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11062": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11063": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "ADD",
      "path": "23"
    },
    "11064": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11065": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11066": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP13",
      "path": "23"
    },
    "11067": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11068": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP12",
      "path": "23"
    },
    "11069": {
      "op": "POP"
    },
    "11070": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP10",
      "path": "23"
    },
    "11071": {
      "op": "POP"
    },
    "11072": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11073": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "11074": {
      "op": "POP"
    },
    "11075": {
      "fn": "AlphaVault._position",
      "offset": [
        17455,
        17482
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "11076": {
      "op": "POP"
    },
    "11077": {
      "fn": "AlphaVault._position",
      "offset": [
        17131,
        17489
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11078": {
      "op": "POP"
    },
    "11079": {
      "op": "POP"
    },
    "11080": {
      "op": "POP"
    },
    "11081": {
      "op": "POP"
    },
    "11082": {
      "fn": "AlphaVault._position",
      "jump": "o",
      "offset": [
        17131,
        17489
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11083": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11084": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13458,
        13473
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11086": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13458,
        13473
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11087": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13458,
        13473
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11088": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13458,
        13473
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11095": {
      "op": "SHL"
    },
    "11096": {
      "op": "SUB"
    },
    "11097": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13599,
        13612
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11098": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13599,
        13612
      ],
      "op": "AND",
      "path": "23"
    },
    "11099": {
      "branch": 259,
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13599,
        13612
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11100": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13595,
        13702
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C17"
    },
    "11103": {
      "branch": 259,
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13595,
        13702
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11104": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 127,
      "value": "0x40"
    },
    "11106": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11107": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11108": {
      "op": "PUSH4",
      "value": "0xA34123A7"
    },
    "11113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11115": {
      "op": "SHL"
    },
    "11116": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11117": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11118": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "11120": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11121": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11122": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11123": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11125": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11126": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ADD",
      "path": "23"
    },
    "11127": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11128": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11129": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11130": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11131": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "11133": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11134": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ADD",
      "path": "23"
    },
    "11135": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11140": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11142": {
      "op": "SHL"
    },
    "11143": {
      "op": "SUB"
    },
    "11144": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11145": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "AND",
      "path": "23"
    },
    "11146": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "11148": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11149": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ADD",
      "path": "23"
    },
    "11150": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11151": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11152": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11159": {
      "op": "SHL"
    },
    "11160": {
      "op": "SUB"
    },
    "11161": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13653
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "11194": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13658
      ],
      "op": "AND",
      "path": "23"
    },
    "11195": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13658
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11196": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13658
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xA34123A7"
    },
    "11201": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13658
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11202": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "11204": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11205": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11206": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ADD",
      "path": "23"
    },
    "11207": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11208": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11209": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11210": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11211": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SUB",
      "path": "23"
    },
    "11212": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ADD",
      "path": "23"
    },
    "11213": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11216": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13658
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11217": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11218": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11219": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11220": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11221": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11222": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BDE"
    },
    "11225": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11226": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11228": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11229": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11230": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11231": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "POP",
      "path": "23"
    },
    "11232": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "GAS",
      "path": "23"
    },
    "11233": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "CALL",
      "path": "23"
    },
    "11234": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11235": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11236": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11237": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2BF2"
    },
    "11240": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11241": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11242": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11244": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11245": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11246": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11247": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11249": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11250": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11251": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "POP",
      "path": "23"
    },
    "11252": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "POP",
      "path": "23"
    },
    "11253": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "POP",
      "path": "23"
    },
    "11254": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "POP",
      "path": "23"
    },
    "11255": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11257": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11258": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11259": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11261": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11262": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "LT",
      "path": "23"
    },
    "11263": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11264": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2C08"
    },
    "11267": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11268": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11270": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11271": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11272": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11273": {
      "op": "POP"
    },
    "11274": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11275": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11276": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11278": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11279": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11280": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "ADD",
      "path": "23"
    },
    "11281": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11282": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11283": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "11284": {
      "op": "POP"
    },
    "11285": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13649,
        13691
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11286": {
      "op": "POP"
    },
    "11287": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13595,
        13702
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11288": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11290": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11291": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11292": {
      "op": "PUSH4",
      "value": "0x9E3D67B"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "11299": {
      "op": "SHL"
    },
    "11300": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11301": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11302": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13858,
        13862
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "11303": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11305": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11306": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11307": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11308": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "11310": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11311": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11312": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11313": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "11315": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11316": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11317": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11318": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11319": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11320": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11321": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "11323": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11324": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11325": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11330": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11332": {
      "op": "SHL"
    },
    "11333": {
      "op": "SUB"
    },
    "11334": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "11336": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11337": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11338": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11339": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11340": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11341": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x84"
    },
    "11343": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11344": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11345": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11346": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11347": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11348": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13770,
        13786
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11350": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13770,
        13786
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11351": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13770,
        13786
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11352": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13770,
        13786
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11359": {
      "op": "SHL"
    },
    "11360": {
      "op": "SUB"
    },
    "11361": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        13824
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "11394": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        13832
      ],
      "op": "AND",
      "path": "23"
    },
    "11395": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        13832
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11396": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        13832
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x4F1EB3D8"
    },
    "11401": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        13832
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11402": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA4"
    },
    "11404": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11405": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11406": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11407": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11408": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11409": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11410": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11411": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11412": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11413": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SUB",
      "path": "23"
    },
    "11414": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11415": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11416": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13770,
        13786
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11417": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        13832
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11418": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11419": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11420": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11421": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11422": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11423": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CA7"
    },
    "11426": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11427": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11429": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11430": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11431": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11432": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "POP",
      "path": "23"
    },
    "11433": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "GAS",
      "path": "23"
    },
    "11434": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "CALL",
      "path": "23"
    },
    "11435": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11436": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11437": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11438": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CBB"
    },
    "11441": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11442": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11443": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11445": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11446": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11447": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11448": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11450": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11451": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11452": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "POP",
      "path": "23"
    },
    "11453": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "POP",
      "path": "23"
    },
    "11454": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "POP",
      "path": "23"
    },
    "11455": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "POP",
      "path": "23"
    },
    "11456": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11458": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11459": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11460": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11462": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11463": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "LT",
      "path": "23"
    },
    "11464": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11465": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2CD1"
    },
    "11468": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11469": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11471": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11472": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11473": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11474": {
      "op": "POP"
    },
    "11475": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11476": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11477": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11479": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11480": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11481": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "ADD",
      "path": "23"
    },
    "11482": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13820,
        14001
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11487": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11489": {
      "op": "SHL"
    },
    "11490": {
      "op": "SUB"
    },
    "11491": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11492": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11493": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "AND",
      "path": "23"
    },
    "11494": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11495": {
      "op": "POP"
    },
    "11496": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "AND",
      "path": "23"
    },
    "11497": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11498": {
      "op": "POP"
    },
    "11499": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14027,
        14048
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 128,
      "value": "0x2CF4"
    },
    "11502": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13769,
        14001
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11503": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14040,
        14047
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11504": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14027,
        14039
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "11507": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14027,
        14048
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11508": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14027,
        14048
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11509": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14012,
        14048
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11510": {
      "op": "POP"
    },
    "11511": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14073,
        14094
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 129,
      "value": "0x2D00"
    },
    "11514": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14073,
        14081
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11515": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14086,
        14093
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11516": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14073,
        14085
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "11519": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14073,
        14094
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11520": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14073,
        14094
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11521": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14234,
        14245
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x7"
    },
    "11523": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14234,
        14245
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11524": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14058,
        14094
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11525": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14058,
        14094
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11526": {
      "op": "POP"
    },
    "11527": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14104,
        14127
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11529": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14104,
        14127
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11530": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14104,
        14127
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11531": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14104,
        14127
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11532": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14259,
        14275
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11533": {
      "branch": 260,
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14259,
        14275
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11534": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14255,
        14710
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D71"
    },
    "11537": {
      "branch": 260,
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14255,
        14710
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11538": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14309,
        14348
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 130,
      "value": "0x2D22"
    },
    "11541": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14344,
        14347
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "11545": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14309,
        14339
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "11548": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14309,
        14321
      ],
      "op": "DUP10",
      "path": "23"
    },
    "11549": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14326,
        14338
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11550": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14309,
        14325
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "11553": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14309,
        14339
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11554": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14309,
        14348
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11555": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14291,
        14348
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "11556": {
      "op": "POP"
    },
    "11557": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14380,
        14419
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 131,
      "value": "0x2D35"
    },
    "11560": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14415,
        14418
      ],
      "op": "PUSH3",
      "path": "23",
      "value": "0xF4240"
    },
    "11564": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14380,
        14410
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "11567": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14380,
        14392
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11568": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14397,
        14409
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11569": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14380,
        14396
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "11572": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14380,
        14410
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11573": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14380,
        14419
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11574": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14362,
        14419
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11575": {
      "op": "POP"
    },
    "11576": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14448,
        14481
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 132,
      "value": "0x2D41"
    },
    "11579": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14448,
        14460
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11580": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14465,
        14480
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11581": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14448,
        14464
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "11584": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14448,
        14481
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11585": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14448,
        14481
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11586": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14433,
        14481
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "11587": {
      "op": "POP"
    },
    "11588": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14510,
        14543
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 133,
      "value": "0x2D4D"
    },
    "11591": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14510,
        14522
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11592": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14527,
        14542
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11593": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14510,
        14526
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x219B"
    },
    "11596": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14510,
        14543
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11597": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14510,
        14543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11598": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14580,
        14600
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 134,
      "value": "0xC"
    },
    "11600": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14580,
        14600
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11601": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14495,
        14543
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11602": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14495,
        14543
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "11603": {
      "op": "POP"
    },
    "11604": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14580,
        14621
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D5D"
    },
    "11607": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14580,
        14621
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11608": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14605,
        14620
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11609": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14580,
        14604
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "11612": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14580,
        14621
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11613": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14580,
        14621
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11614": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14557,
        14577
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC"
    },
    "11616": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14557,
        14621
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "11617": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14658,
        14678
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 135,
      "value": "0xD"
    },
    "11619": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14658,
        14678
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "11620": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14658,
        14699
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2D6D"
    },
    "11623": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14658,
        14699
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11624": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14683,
        14698
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11625": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14658,
        14682
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "11628": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "i",
      "offset": [
        14658,
        14699
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11629": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14658,
        14699
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11630": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14635,
        14655
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xD"
    },
    "11632": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14635,
        14699
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "11633": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14255,
        14710
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11634": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 136,
      "value": "0x40"
    },
    "11636": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11637": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11638": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11639": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11640": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11641": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "11643": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11644": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "ADD",
      "path": "23"
    },
    "11645": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11646": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11647": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11648": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11649": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11650": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "ADD",
      "path": "23"
    },
    "11651": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11652": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11653": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11654": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x60"
    },
    "11656": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11657": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "ADD",
      "path": "23"
    },
    "11658": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11659": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11660": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11661": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11662": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11663": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x1AC56D7E866E3F5EA9AA92AA11758EAD39A0A5F013F3FEFB0F47CB9D008EDD27"
    },
    "11696": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "11697": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11698": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11699": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SUB",
      "path": "23"
    },
    "11700": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x80"
    },
    "11702": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "ADD",
      "path": "23"
    },
    "11703": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11704": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        14724,
        14797
      ],
      "op": "LOG1",
      "path": "23"
    },
    "11705": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11706": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11707": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11708": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11709": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11710": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11711": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11712": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11713": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11714": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11715": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "POP",
      "path": "23"
    },
    "11716": {
      "fn": "AlphaVault._burnAndCollect",
      "offset": [
        13303,
        14804
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "11717": {
      "fn": "AlphaVault._burnAndCollect",
      "jump": "o",
      "offset": [
        13303,
        14804
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11718": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18118,
        18626
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11719": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18277,
        18284
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11721": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18297,
        18317
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11722": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18337
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "11755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11761": {
      "op": "SHL"
    },
    "11762": {
      "op": "SUB"
    },
    "11763": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18343
      ],
      "op": "AND",
      "path": "23"
    },
    "11764": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18343
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3850C7BD"
    },
    "11769": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11771": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11772": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11773": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "11778": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "AND",
      "path": "23"
    },
    "11779": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11781": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "SHL",
      "path": "23"
    },
    "11782": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11783": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11784": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11786": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "ADD",
      "path": "23"
    },
    "11787": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11789": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11791": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11792": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11793": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11794": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "SUB",
      "path": "23"
    },
    "11795": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11796": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP7",
      "path": "23"
    },
    "11797": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11798": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "11799": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11800": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11801": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11802": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E22"
    },
    "11805": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11806": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11808": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11809": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11810": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11811": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "POP",
      "path": "23"
    },
    "11812": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "GAS",
      "path": "23"
    },
    "11813": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "11814": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11815": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11816": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11817": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E36"
    },
    "11820": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11821": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11822": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11824": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11825": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "11826": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11827": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11829": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11830": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11831": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "POP",
      "path": "23"
    },
    "11832": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "POP",
      "path": "23"
    },
    "11833": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "POP",
      "path": "23"
    },
    "11834": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "POP",
      "path": "23"
    },
    "11835": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "11837": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11838": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "11839": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "11841": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11842": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "LT",
      "path": "23"
    },
    "11843": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11844": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E4C"
    },
    "11847": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11848": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "11850": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11851": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "REVERT",
      "path": "23"
    },
    "11852": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11853": {
      "op": "POP"
    },
    "11854": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11855": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11856": {
      "op": "POP"
    },
    "11857": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18374,
        18619
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 137,
      "value": "0x2E6D"
    },
    "11860": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18333,
        18345
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11861": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18461,
        18499
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E5D"
    },
    "11864": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18489,
        18498
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11865": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18461,
        18488
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3362"
    },
    "11868": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "i",
      "offset": [
        18461,
        18499
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11869": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18461,
        18499
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11870": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18517,
        18555
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2E66"
    },
    "11873": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18545,
        18554
      ],
      "op": "DUP9",
      "path": "23"
    },
    "11874": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18517,
        18544
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3362"
    },
    "11877": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "i",
      "offset": [
        18517,
        18555
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11878": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18517,
        18555
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11879": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18573,
        18580
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11880": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18598,
        18605
      ],
      "op": "DUP8",
      "path": "23"
    },
    "11881": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18374,
        18413
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3694"
    },
    "11884": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "i",
      "offset": [
        18374,
        18619
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11885": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18374,
        18619
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11886": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18355,
        18619
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "11887": {
      "fn": "AlphaVault._liquidityForAmounts",
      "offset": [
        18118,
        18626
      ],
      "op": "SWAP6",
      "path": "23"
    },
    "11888": {
      "op": "POP"
    },
    "11889": {
      "op": "POP"
    },
    "11890": {
      "op": "POP"
    },
    "11891": {
      "op": "POP"
    },
    "11892": {
      "op": "POP"
    },
    "11893": {
      "op": "POP"
    },
    "11894": {
      "fn": "AlphaVault._liquidityForAmounts",
      "jump": "o",
      "offset": [
        18118,
        18626
      ],
      "op": "JUMP",
      "path": "23"
    },
    "11895": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        14874,
        15111
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "11896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11900": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11902": {
      "op": "SHL"
    },
    "11903": {
      "op": "SUB"
    },
    "11904": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15004,
        15017
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11905": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15004,
        15017
      ],
      "op": "AND",
      "path": "23"
    },
    "11906": {
      "branch": 261,
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15004,
        15017
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "11907": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15000,
        15105
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x97D"
    },
    "11910": {
      "branch": 261,
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15000,
        15105
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "11911": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 138,
      "value": "0x40"
    },
    "11913": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP1",
      "path": "23"
    },
    "11914": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11915": {
      "op": "PUSH4",
      "value": "0x3C8A7D8D"
    },
    "11920": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11922": {
      "op": "SHL"
    },
    "11923": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11924": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11925": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15051,
        15055
      ],
      "op": "ADDRESS",
      "path": "23"
    },
    "11926": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "11928": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11929": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "11930": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11931": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "11933": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP6",
      "path": "23"
    },
    "11934": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11935": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11936": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "11938": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11939": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "11940": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11941": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP5",
      "path": "23"
    },
    "11942": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11943": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SIGNEXTEND",
      "path": "23"
    },
    "11944": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x44"
    },
    "11946": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11947": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "11948": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11953": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11955": {
      "op": "SHL"
    },
    "11956": {
      "op": "SUB"
    },
    "11957": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP4",
      "path": "23"
    },
    "11958": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "AND",
      "path": "23"
    },
    "11959": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x64"
    },
    "11961": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11962": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "11963": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11964": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA0"
    },
    "11966": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x84"
    },
    "11968": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11969": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "11970": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11973": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xA4"
    },
    "11975": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11976": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "11977": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP2",
      "path": "23"
    },
    "11978": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "11979": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "11980": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "11981": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "11982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11988": {
      "op": "SHL"
    },
    "11989": {
      "op": "SUB"
    },
    "11990": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15037
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "12023": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15042
      ],
      "op": "AND",
      "path": "23"
    },
    "12024": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15042
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12025": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15042
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3C8A7D8D"
    },
    "12030": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15042
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12031": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC4"
    },
    "12033": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12034": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12035": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "12036": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12037": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12038": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12039": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12040": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12041": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12042": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12043": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SUB",
      "path": "23"
    },
    "12044": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ADD",
      "path": "23"
    },
    "12045": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12046": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP3",
      "path": "23"
    },
    "12047": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12048": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15042
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12049": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12050": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12051": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12052": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12053": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12054": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AC4"
    },
    "12057": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12058": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12060": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12061": {
      "fn": "AlphaVault._mintLiquidity",
      "offset": [
        15033,
        15094
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12062": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12063": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17704,
        17711
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12065": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17713,
        17720
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12066": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17733,
        17753
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12068": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17773
      ],
      "op": "PUSH32",
      "path": "23",
      "value": "0x0"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12105": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12107": {
      "op": "SHL"
    },
    "12108": {
      "op": "SUB"
    },
    "12109": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17779
      ],
      "op": "AND",
      "path": "23"
    },
    "12110": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17779
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0x3850C7BD"
    },
    "12115": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12117": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12118": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12119": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "12124": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "AND",
      "path": "23"
    },
    "12125": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "12127": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "SHL",
      "path": "23"
    },
    "12128": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12129": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "12130": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "12132": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "ADD",
      "path": "23"
    },
    "12133": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "12135": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12137": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12138": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12139": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12140": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "SUB",
      "path": "23"
    },
    "12141": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12142": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP7",
      "path": "23"
    },
    "12143": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12144": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "EXTCODESIZE",
      "path": "23"
    },
    "12145": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12146": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12147": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12148": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F7C"
    },
    "12151": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12152": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12154": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12155": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12156": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12157": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "POP",
      "path": "23"
    },
    "12158": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "GAS",
      "path": "23"
    },
    "12159": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "STATICCALL",
      "path": "23"
    },
    "12160": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12161": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12162": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12163": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2F90"
    },
    "12166": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12167": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12168": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12170": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12171": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "RETURNDATACOPY",
      "path": "23"
    },
    "12172": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12173": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12175": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12176": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12177": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "POP",
      "path": "23"
    },
    "12178": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "POP",
      "path": "23"
    },
    "12179": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "POP",
      "path": "23"
    },
    "12180": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "POP",
      "path": "23"
    },
    "12181": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "12183": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12184": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "RETURNDATASIZE",
      "path": "23"
    },
    "12185": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "12187": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12188": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "LT",
      "path": "23"
    },
    "12189": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12190": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FA6"
    },
    "12193": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12194": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12196": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12197": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "REVERT",
      "path": "23"
    },
    "12198": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12199": {
      "op": "POP"
    },
    "12200": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "12201": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12202": {
      "op": "POP"
    },
    "12203": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17810,
        18032
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 139,
      "value": "0x2FC6"
    },
    "12206": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17769,
        17781
      ],
      "op": "DUP2",
      "path": "23"
    },
    "12207": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17897,
        17935
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FB7"
    },
    "12210": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17925,
        17934
      ],
      "op": "DUP9",
      "path": "23"
    },
    "12211": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17897,
        17924
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3362"
    },
    "12214": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "i",
      "offset": [
        17897,
        17935
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12215": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17897,
        17935
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12216": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17953,
        17991
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FC0"
    },
    "12219": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17981,
        17990
      ],
      "op": "DUP9",
      "path": "23"
    },
    "12220": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17953,
        17980
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3362"
    },
    "12223": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "i",
      "offset": [
        17953,
        17991
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12224": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17953,
        17991
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12225": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        18009,
        18018
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12226": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17810,
        17849
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3758"
    },
    "12229": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "i",
      "offset": [
        17810,
        18032
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12230": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17810,
        18032
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12231": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17791,
        18032
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12232": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17791,
        18032
      ],
      "op": "POP",
      "path": "23"
    },
    "12233": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17791,
        18032
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12234": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17791,
        18032
      ],
      "op": "POP",
      "path": "23"
    },
    "12235": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17791,
        18032
      ],
      "op": "POP",
      "path": "23"
    },
    "12236": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12237": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "POP",
      "path": "23"
    },
    "12238": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "12239": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12240": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "POP",
      "path": "23"
    },
    "12241": {
      "fn": "AlphaVault._amountsForLiquidity",
      "offset": [
        17568,
        18039
      ],
      "op": "POP",
      "path": "23"
    },
    "12242": {
      "fn": "AlphaVault._amountsForLiquidity",
      "jump": "o",
      "offset": [
        17568,
        18039
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12243": {
      "fn": "SafeMath.mul",
      "offset": [
        3538,
        3753
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12244": {
      "fn": "SafeMath.mul",
      "offset": [
        3596,
        3603
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12246": {
      "branch": 296,
      "fn": "SafeMath.mul",
      "offset": [
        3619,
        3625
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12247": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FE2"
    },
    "12250": {
      "branch": 296,
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12251": {
      "op": "POP"
    },
    "12252": {
      "fn": "SafeMath.mul",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 140,
      "value": "0x0"
    },
    "12254": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA30"
    },
    "12257": {
      "fn": "SafeMath.mul",
      "offset": [
        3627,
        3635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12258": {
      "fn": "SafeMath.mul",
      "offset": [
        3615,
        3635
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12259": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12260": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12261": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "MUL",
      "path": "1"
    },
    "12262": {
      "fn": "SafeMath.mul",
      "offset": [
        3661,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12263": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP5",
      "path": "1"
    },
    "12264": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3662
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12265": {
      "fn": "SafeMath.mul",
      "offset": [
        3657,
        3658
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12266": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 141,
      "value": "0x2FEF"
    },
    "12269": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12270": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "INVALID",
      "path": "1"
    },
    "12271": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12272": {
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3685
      ],
      "op": "DIV",
      "path": "1"
    },
    "12273": {
      "branch": 297,
      "fn": "SafeMath.mul",
      "offset": [
        3680,
        3690
      ],
      "op": "EQ",
      "path": "1"
    },
    "12274": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7C"
    },
    "12277": {
      "branch": 297,
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12278": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12280": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12287": {
      "op": "SHL"
    },
    "12288": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12289": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12290": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12292": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12293": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12294": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12295": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12297": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12298": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12299": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12300": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "1"
    },
    "12301": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12302": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12303": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "12305": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12306": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12307": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12309": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12310": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12311": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CAE"
    },
    "12314": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x21"
    },
    "12316": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12317": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "12318": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12320": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "ADD",
      "path": "1"
    },
    "12321": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12322": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "1"
    },
    "12323": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "POP",
      "path": "1"
    },
    "12324": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12326": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12327": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12328": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "12329": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SUB",
      "path": "1"
    },
    "12330": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12331": {
      "fn": "SafeMath.mul",
      "offset": [
        3672,
        3728
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12332": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12333": {
      "fn": "SafeMath.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "12335": {
      "fn": "SafeMath.div",
      "offset": [
        4306,
        4307
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 142
    },
    "12336": {
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4303
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12337": {
      "branch": 298,
      "fn": "SafeMath.div",
      "offset": [
        4302,
        4307
      ],
      "op": "GT",
      "path": "1"
    },
    "12338": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3082"
    },
    "12341": {
      "branch": 298,
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12342": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12344": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP1",
      "path": "1"
    },
    "12345": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12346": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12352": {
      "op": "SHL"
    },
    "12353": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12354": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12355": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "12357": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12359": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12360": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12361": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12362": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1A"
    },
    "12364": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "12366": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12367": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12368": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12369": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "12402": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "12404": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12405": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12406": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12407": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12408": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12409": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12410": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12411": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12412": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SUB",
      "path": "1"
    },
    "12413": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "12415": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "ADD",
      "path": "1"
    },
    "12416": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "12417": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "REVERT",
      "path": "1"
    },
    "12418": {
      "fn": "SafeMath.div",
      "offset": [
        4294,
        4338
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12419": {
      "fn": "SafeMath.div",
      "offset": [
        4359,
        4360
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 143
    },
    "12420": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4356
      ],
      "op": "DUP4",
      "path": "1"
    },
    "12421": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12422": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x308B"
    },
    "12425": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12426": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "INVALID",
      "path": "1"
    },
    "12427": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12428": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "DIV",
      "path": "1"
    },
    "12429": {
      "fn": "SafeMath.div",
      "offset": [
        4355,
        4360
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "12430": {
      "fn": "SafeMath.div",
      "offset": [
        4217,
        4367
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "12431": {
      "op": "POP"
    },
    "12432": {
      "op": "POP"
    },
    "12433": {
      "op": "POP"
    },
    "12434": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        4217,
        4367
      ],
      "op": "JUMP",
      "path": "1"
    },
    "12435": {
      "fn": "ERC20._burn",
      "offset": [
        8522,
        8932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12442": {
      "op": "SHL"
    },
    "12443": {
      "op": "SUB"
    },
    "12444": {
      "fn": "ERC20._burn",
      "offset": [
        8605,
        8626
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 144
    },
    "12445": {
      "branch": 272,
      "fn": "ERC20._burn",
      "offset": [
        8605,
        8626
      ],
      "op": "AND",
      "path": "2"
    },
    "12446": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30D8"
    },
    "12449": {
      "branch": 272,
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12450": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12452": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12453": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12459": {
      "op": "SHL"
    },
    "12460": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12461": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12462": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12464": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12465": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12466": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12467": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12469": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12470": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12471": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12472": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SUB",
      "path": "2"
    },
    "12473": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12474": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12475": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "12477": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12478": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12479": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12481": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12482": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12483": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CF7"
    },
    "12486": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "12488": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12489": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "12490": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12492": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "ADD",
      "path": "2"
    },
    "12493": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12494": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "POP",
      "path": "2"
    },
    "12495": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "POP",
      "path": "2"
    },
    "12496": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12498": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12499": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12500": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12501": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SUB",
      "path": "2"
    },
    "12502": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12503": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "REVERT",
      "path": "2"
    },
    "12504": {
      "fn": "ERC20._burn",
      "offset": [
        8597,
        8664
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12505": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8724
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 145,
      "value": "0x30E4"
    },
    "12508": {
      "fn": "ERC20._burn",
      "offset": [
        8696,
        8703
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12509": {
      "fn": "ERC20._burn",
      "offset": [
        8713,
        8714
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12511": {
      "fn": "ERC20._burn",
      "offset": [
        8717,
        8723
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12512": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8695
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97D"
    },
    "12515": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8675,
        8724
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12516": {
      "fn": "ERC20._burn",
      "offset": [
        8675,
        8724
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12517": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 146,
      "value": "0x3121"
    },
    "12520": {
      "fn": "ERC20._burn",
      "offset": [
        8779,
        8785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12521": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12523": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12524": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12525": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "12527": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "ADD",
      "path": "2"
    },
    "12528": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12530": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12531": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12532": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "12534": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12535": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12536": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12538": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "ADD",
      "path": "2"
    },
    "12539": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C1E"
    },
    "12542": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x22"
    },
    "12544": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12545": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12552": {
      "op": "SHL"
    },
    "12553": {
      "op": "SUB"
    },
    "12554": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12555": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "AND",
      "path": "2"
    },
    "12556": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12558": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12559": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12560": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12561": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12563": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12564": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12565": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12566": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12568": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12569": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12570": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12571": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8774
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12572": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12573": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8778
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2495"
    },
    "12576": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8756,
        8824
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12577": {
      "fn": "ERC20._burn",
      "offset": [
        8756,
        8824
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12584": {
      "op": "SHL"
    },
    "12585": {
      "op": "SUB"
    },
    "12586": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12587": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "AND",
      "path": "2"
    },
    "12588": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12590": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12591": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12592": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12593": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12595": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12596": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12597": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12598": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12600": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12601": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8753
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12602": {
      "fn": "ERC20._burn",
      "offset": [
        8735,
        8824
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12603": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8861
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 147,
      "value": "0x2"
    },
    "12605": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12606": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8873
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3147"
    },
    "12609": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8873
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12610": {
      "fn": "ERC20._burn",
      "offset": [
        8866,
        8872
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12611": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8865
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219B"
    },
    "12614": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        8849,
        8873
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12615": {
      "fn": "ERC20._burn",
      "offset": [
        8849,
        8873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12616": {
      "fn": "ERC20._burn",
      "offset": [
        8834,
        8846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "12618": {
      "fn": "ERC20._burn",
      "offset": [
        8834,
        8873
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12619": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 148,
      "value": "0x40"
    },
    "12621": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12622": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12623": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12624": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12625": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12626": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12627": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12628": {
      "fn": "ERC20._burn",
      "offset": [
        8914,
        8915
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12630": {
      "fn": "ERC20._burn",
      "offset": [
        8914,
        8915
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12637": {
      "op": "SHL"
    },
    "12638": {
      "op": "SUB"
    },
    "12639": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12640": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "AND",
      "path": "2"
    },
    "12641": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12642": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "12675": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12676": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12677": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12678": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SUB",
      "path": "2"
    },
    "12679": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12681": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "ADD",
      "path": "2"
    },
    "12682": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12683": {
      "fn": "ERC20._burn",
      "offset": [
        8888,
        8925
      ],
      "op": "LOG3",
      "path": "2"
    },
    "12684": {
      "fn": "ERC20._burn",
      "offset": [
        8522,
        8932
      ],
      "op": "POP",
      "path": "2"
    },
    "12685": {
      "fn": "ERC20._burn",
      "offset": [
        8522,
        8932
      ],
      "op": "POP",
      "path": "2"
    },
    "12686": {
      "fn": "ERC20._burn",
      "jump": "o",
      "offset": [
        8522,
        8932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12687": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12688": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9284,
        9299
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12690": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9301,
        9316
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12691": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9329,
        9351
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12693": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9363,
        9394
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x319E"
    },
    "12696": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9373,
        9382
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12697": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9384,
        9393
      ],
      "op": "DUP8",
      "path": "23"
    },
    "12698": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9363,
        9372
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2A7C"
    },
    "12701": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9363,
        9394
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12702": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9363,
        9394
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12703": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9328,
        9394
      ],
      "op": "POP",
      "path": "23"
    },
    "12704": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9328,
        9394
      ],
      "op": "POP",
      "path": "23"
    },
    "12705": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9328,
        9394
      ],
      "op": "POP",
      "path": "23"
    },
    "12706": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9328,
        9394
      ],
      "op": "POP",
      "path": "23"
    },
    "12707": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9328,
        9394
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12708": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9328,
        9394
      ],
      "op": "POP",
      "path": "23"
    },
    "12709": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9404,
        9421
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12711": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9476
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31C6"
    },
    "12714": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9464,
        9475
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12715": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9459
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "12718": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9452,
        9458
      ],
      "op": "DUP9",
      "path": "23"
    },
    "12719": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9432,
        9446
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12724": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12726": {
      "op": "SHL"
    },
    "12727": {
      "op": "SUB"
    },
    "12728": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9447
      ],
      "op": "AND",
      "path": "23"
    },
    "12729": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9451
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "12732": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9451
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12733": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9459
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "12734": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9459
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12735": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9459
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "12740": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9459
      ],
      "op": "AND",
      "path": "23"
    },
    "12741": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9424,
        9459
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12742": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9424,
        9476
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12743": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9404,
        9476
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12744": {
      "op": "POP"
    },
    "12745": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9491,
        9504
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12746": {
      "branch": 262,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9491,
        9504
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "12747": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x322A"
    },
    "12750": {
      "branch": 262,
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "12751": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9521,
        9536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12753": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9538,
        9553
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12754": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9555,
        9568
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12756": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9570,
        9583
      ],
      "op": "DUP1",
      "path": "23"
    },
    "12757": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9603,
        9663
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31E7"
    },
    "12760": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9619,
        9628
      ],
      "op": "DUP13",
      "path": "23"
    },
    "12761": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9630,
        9639
      ],
      "op": "DUP13",
      "path": "23"
    },
    "12762": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9641,
        9662
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x31E2"
    },
    "12765": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9652,
        9661
      ],
      "op": "DUP9",
      "path": "23"
    },
    "12766": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9641,
        9651
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x37F4"
    },
    "12769": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9641,
        9662
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12770": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9641,
        9662
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12771": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9603,
        9618
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2B4B"
    },
    "12774": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9603,
        9663
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12775": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9603,
        9663
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12776": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12777": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "12778": {
      "op": "POP"
    },
    "12779": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12780": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12781": {
      "op": "POP"
    },
    "12782": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12783": {
      "op": "POP"
    },
    "12784": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12785": {
      "op": "POP"
    },
    "12786": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9721,
        9768
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 149,
      "value": "0x3209"
    },
    "12789": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9733,
        9767
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3202"
    },
    "12792": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9755,
        9766
      ],
      "op": "DUP11",
      "path": "23"
    },
    "12793": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9733,
        9750
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "12796": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9520,
        9663
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12797": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9743,
        9749
      ],
      "op": "DUP15",
      "path": "23"
    },
    "12798": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9733,
        9742
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "12801": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9733,
        9750
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12802": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9733,
        9767
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12803": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9721,
        9728
      ],
      "op": "DUP6",
      "path": "23"
    },
    "12804": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9721,
        9728
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12805": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9721,
        9732
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "12808": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9721,
        9768
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12809": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9721,
        9768
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12810": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9711,
        9768
      ],
      "op": "SWAP8",
      "path": "23"
    },
    "12811": {
      "op": "POP"
    },
    "12812": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9792,
        9839
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 150,
      "value": "0x3223"
    },
    "12815": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9804,
        9838
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x321C"
    },
    "12818": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9826,
        9837
      ],
      "op": "DUP11",
      "path": "23"
    },
    "12819": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9804,
        9821
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1895"
    },
    "12822": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9804,
        9809
      ],
      "op": "DUP5",
      "path": "23"
    },
    "12823": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9814,
        9820
      ],
      "op": "DUP15",
      "path": "23"
    },
    "12824": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9804,
        9813
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2FD3"
    },
    "12827": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9804,
        9821
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12828": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9804,
        9838
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12829": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9792,
        9799
      ],
      "op": "DUP5",
      "path": "23"
    },
    "12830": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9792,
        9799
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "12831": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9792,
        9803
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x2842"
    },
    "12834": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "i",
      "offset": [
        9792,
        9839
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12835": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9792,
        9839
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12836": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9782,
        9839
      ],
      "op": "SWAP7",
      "path": "23"
    },
    "12837": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9782,
        9839
      ],
      "op": "POP",
      "path": "23"
    },
    "12838": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "POP",
      "path": "23"
    },
    "12839": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "POP",
      "path": "23"
    },
    "12840": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "POP",
      "path": "23"
    },
    "12841": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "POP",
      "path": "23"
    },
    "12842": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9487,
        9850
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12843": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "POP",
      "path": "23"
    },
    "12844": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "POP",
      "path": "23"
    },
    "12845": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12846": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "POP",
      "path": "23"
    },
    "12847": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "12848": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "12849": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "POP",
      "path": "23"
    },
    "12850": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "POP",
      "path": "23"
    },
    "12851": {
      "fn": "AlphaVault._burnLiquidityShare",
      "offset": [
        9128,
        9856
      ],
      "op": "POP",
      "path": "23"
    },
    "12852": {
      "fn": "AlphaVault._burnLiquidityShare",
      "jump": "o",
      "offset": [
        9128,
        9856
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12853": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2967,
        3718
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12856": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x328A"
    },
    "12859": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3440,
        3444
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "4"
    },
    "12867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12873": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12875": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "ADD",
      "path": "4"
    },
    "12878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "12911": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "POP",
      "path": "4"
    },
    "12914": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3420,
        3425
      ],
      "op": "DUP6",
      "path": "4"
    },
    "12915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12921": {
      "op": "SHL"
    },
    "12922": {
      "op": "SUB"
    },
    "12923": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "AND",
      "path": "4"
    },
    "12924": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x380B"
    },
    "12927": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12928": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "12929": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12930": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12931": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "12936": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "AND",
      "path": "4"
    },
    "12937": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3412,
        3481
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12939": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12940": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3512
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3386,
        3481
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12943": {
      "op": "POP"
    },
    "12944": {
      "branch": 291,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3495,
        3516
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97D"
    },
    "12948": {
      "branch": 291,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3491,
        3712
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12949": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3635,
        3645
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 151
    },
    "12950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12951": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ADD",
      "path": "4"
    },
    "12954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12958": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "LT",
      "path": "4"
    },
    "12960": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12961": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x32A9"
    },
    "12964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "REVERT",
      "path": "4"
    },
    "12969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12970": {
      "op": "POP"
    },
    "12971": {
      "branch": 292,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3624,
        3654
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x97D"
    },
    "12975": {
      "branch": 292,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12979": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12985": {
      "op": "SHL"
    },
    "12986": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12988": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "12990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "12991": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12992": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12993": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12995": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "12996": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12997": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12998": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "4"
    },
    "12999": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP3",
      "path": "4"
    },
    "13000": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13001": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "13003": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP2",
      "path": "4"
    },
    "13004": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "13005": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "13007": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "13008": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13009": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D61"
    },
    "13012": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "13014": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13015": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "13016": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13018": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "ADD",
      "path": "4"
    },
    "13019": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13020": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "4"
    },
    "13021": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "POP",
      "path": "4"
    },
    "13022": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "13024": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "13025": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "DUP1",
      "path": "4"
    },
    "13026": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "13027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SUB",
      "path": "4"
    },
    "13028": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "13029": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3616,
        3701
      ],
      "op": "REVERT",
      "path": "4"
    },
    "13030": {
      "fn": "Math.max",
      "offset": [
        223,
        328
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13031": {
      "fn": "Math.max",
      "offset": [
        281,
        288
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13033": {
      "fn": "Math.max",
      "offset": [
        312,
        313
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 152
    },
    "13034": {
      "fn": "Math.max",
      "offset": [
        307,
        308
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13035": {
      "fn": "Math.max",
      "offset": [
        307,
        313
      ],
      "op": "LT",
      "path": "0"
    },
    "13036": {
      "branch": 288,
      "fn": "Math.max",
      "offset": [
        307,
        313
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "13037": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32F6"
    },
    "13040": {
      "branch": 288,
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13041": {
      "fn": "Math.max",
      "offset": [
        320,
        321
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13042": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7C"
    },
    "13045": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13046": {
      "fn": "Math.max",
      "offset": [
        307,
        321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13047": {
      "op": "POP"
    },
    "13048": {
      "fn": "Math.max",
      "offset": [
        316,
        317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13049": {
      "fn": "Math.max",
      "offset": [
        316,
        317
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "13050": {
      "fn": "Math.max",
      "offset": [
        300,
        321
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "13051": {
      "op": "POP"
    },
    "13052": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        223,
        328
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13053": {
      "fn": "Math.min",
      "offset": [
        399,
        503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13054": {
      "fn": "Math.min",
      "offset": [
        457,
        464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13056": {
      "fn": "Math.min",
      "offset": [
        487,
        488
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 153
    },
    "13057": {
      "fn": "Math.min",
      "offset": [
        483,
        484
      ],
      "op": "DUP4",
      "path": "0"
    },
    "13058": {
      "branch": 289,
      "fn": "Math.min",
      "offset": [
        483,
        488
      ],
      "op": "LT",
      "path": "0"
    },
    "13059": {
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32F6"
    },
    "13062": {
      "branch": 289,
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13063": {
      "fn": "Math.min",
      "offset": [
        495,
        496
      ],
      "op": "DUP2",
      "path": "0"
    },
    "13064": {
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB7C"
    },
    "13067": {
      "fn": "Math.min",
      "offset": [
        483,
        496
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13068": {
      "fn": "PositionKey.compute",
      "offset": [
        162,
        370
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "13069": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 154,
      "value": "0x40"
    },
    "13071": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13072": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13073": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "13075": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "13076": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13077": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP5",
      "path": "21"
    },
    "13078": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SHL",
      "path": "21"
    },
    "13079": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13092": {
      "op": "NOT"
    },
    "13093": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "AND",
      "path": "21"
    },
    "13094": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "13096": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13097": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP7",
      "path": "21"
    },
    "13098": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "13099": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13100": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13101": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13102": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13103": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "13105": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "13106": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP5",
      "path": "21"
    },
    "13107": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SIGNEXTEND",
      "path": "21"
    },
    "13108": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE8"
    },
    "13110": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13111": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13112": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SHL",
      "path": "21"
    },
    "13113": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x34"
    },
    "13115": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP8",
      "path": "21"
    },
    "13116": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "13117": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13118": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "13119": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13120": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "13121": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SIGNEXTEND",
      "path": "21"
    },
    "13122": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13123": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13124": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SHL",
      "path": "21"
    },
    "13125": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x37"
    },
    "13127": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP5",
      "path": "21"
    },
    "13128": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "13129": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13130": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13131": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13132": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP1",
      "path": "21"
    },
    "13133": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP5",
      "path": "21"
    },
    "13134": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SUB",
      "path": "21"
    },
    "13135": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1A"
    },
    "13137": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "13138": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13139": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13140": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3A"
    },
    "13142": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13143": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "13144": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "ADD",
      "path": "21"
    },
    "13145": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13146": {
      "fn": "PositionKey.compute",
      "offset": [
        317,
        362
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "13147": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "DUP2",
      "path": "21"
    },
    "13148": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "13149": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "13150": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "ADD",
      "path": "21"
    },
    "13151": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "13152": {
      "fn": "PositionKey.compute",
      "offset": [
        307,
        363
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "13153": {
      "fn": "PositionKey.compute",
      "jump": "o",
      "offset": [
        162,
        370
      ],
      "op": "JUMP",
      "path": "21"
    },
    "13154": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13155": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1418,
        1438
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13157": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1450,
        1465
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13158": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1475,
        1476
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13160": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1472
      ],
      "op": "DUP4",
      "path": "19"
    },
    "13161": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1476
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13163": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1476
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "13164": {
      "branch": 299,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1476
      ],
      "op": "SLT",
      "path": "19"
    },
    "13165": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3379"
    },
    "13168": {
      "branch": 299,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13169": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1519,
        1523
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13170": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1512,
        1524
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13172": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1512,
        1524
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "13173": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3381"
    },
    "13176": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13177": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13178": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1495,
        1499
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13179": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1488,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13181": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1488,
        1500
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "13182": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1487,
        1500
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13184": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1487,
        1500
      ],
      "op": "SUB",
      "path": "19"
    },
    "13185": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1468,
        1525
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13186": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1450,
        1525
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13187": {
      "op": "POP"
    },
    "13188": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "13192": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1543,
        1571
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 155
    },
    "13193": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1543,
        1571
      ],
      "op": "GT",
      "path": "19"
    },
    "13194": {
      "branch": 300,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1543,
        1571
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13195": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33BF"
    },
    "13198": {
      "branch": 300,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13199": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13201": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP1",
      "path": "19"
    },
    "13202": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13203": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13207": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13209": {
      "op": "SHL"
    },
    "13210": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13211": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13212": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13214": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "13216": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13217": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13218": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13219": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13221": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "13223": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13224": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13225": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13226": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "13230": {
      "op": "SHL"
    },
    "13231": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "13233": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13234": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13235": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "13236": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13237": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "13238": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13239": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13240": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13241": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SUB",
      "path": "19"
    },
    "13242": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "13244": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "ADD",
      "path": "19"
    },
    "13245": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13246": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "REVERT",
      "path": "19"
    },
    "13247": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1535,
        1577
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13248": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1601
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13250": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1614,
        1617
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13252": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1617
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13253": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1617
      ],
      "op": "AND",
      "path": "19"
    },
    "13254": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33D3"
    },
    "13257": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13260": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13262": {
      "op": "SHL"
    },
    "13263": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x33E5"
    },
    "13266": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13267": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13268": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1625,
        1659
      ],
      "op": "PUSH16",
      "path": "19",
      "value": "0xFFFCB933BD6FAD37AA2D162D1A594001"
    },
    "13285": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1604,
        1697
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13286": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1697
      ],
      "op": "PUSH17",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "13304": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1697
      ],
      "op": "AND",
      "path": "19"
    },
    "13305": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1588,
        1697
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13306": {
      "op": "POP"
    },
    "13307": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1721,
        1724
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13309": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1711,
        1724
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13310": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1711,
        1724
      ],
      "op": "AND",
      "path": "19"
    },
    "13311": {
      "branch": 301,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1711,
        1729
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13312": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1707,
        1790
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3419"
    },
    "13315": {
      "branch": 301,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1707,
        1790
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13316": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1748,
        1782
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 156,
      "value": "0xFFF97272373D413259A46990580E213A"
    },
    "13333": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1740,
        1782
      ],
      "op": "MUL",
      "path": "19"
    },
    "13334": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1787,
        1790
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13336": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1739,
        1790
      ],
      "op": "SHR",
      "path": "19"
    },
    "13337": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1707,
        1790
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13338": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1814,
        1817
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "13340": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1804,
        1817
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13341": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1804,
        1817
      ],
      "op": "AND",
      "path": "19"
    },
    "13342": {
      "branch": 302,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1804,
        1822
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13343": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1800,
        1883
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3438"
    },
    "13346": {
      "branch": 302,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1800,
        1883
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13347": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1841,
        1875
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 157,
      "value": "0xFFF2E50F5F656932EF12357CF3C7FDCC"
    },
    "13364": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1833,
        1875
      ],
      "op": "MUL",
      "path": "19"
    },
    "13365": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1880,
        1883
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13367": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1832,
        1883
      ],
      "op": "SHR",
      "path": "19"
    },
    "13368": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1800,
        1883
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13369": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1907,
        1910
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x8"
    },
    "13371": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1897,
        1910
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13372": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1897,
        1910
      ],
      "op": "AND",
      "path": "19"
    },
    "13373": {
      "branch": 303,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1897,
        1915
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13374": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1893,
        1976
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3457"
    },
    "13377": {
      "branch": 303,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1893,
        1976
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13378": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1934,
        1968
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 158,
      "value": "0xFFE5CACA7E10E4E61C3624EAA0941CD0"
    },
    "13395": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1926,
        1968
      ],
      "op": "MUL",
      "path": "19"
    },
    "13396": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1973,
        1976
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13398": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1925,
        1976
      ],
      "op": "SHR",
      "path": "19"
    },
    "13399": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1893,
        1976
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13400": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2000,
        2004
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "13402": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1990,
        2004
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13403": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1990,
        2004
      ],
      "op": "AND",
      "path": "19"
    },
    "13404": {
      "branch": 304,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1990,
        2009
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13405": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1986,
        2070
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3476"
    },
    "13408": {
      "branch": 304,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1986,
        2070
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13409": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2028,
        2062
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 159,
      "value": "0xFFCB9843D60F6159C9DB58835C926644"
    },
    "13426": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2020,
        2062
      ],
      "op": "MUL",
      "path": "19"
    },
    "13427": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2067,
        2070
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13429": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2019,
        2070
      ],
      "op": "SHR",
      "path": "19"
    },
    "13430": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1986,
        2070
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13431": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2094,
        2098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13433": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2084,
        2098
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13434": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2084,
        2098
      ],
      "op": "AND",
      "path": "19"
    },
    "13435": {
      "branch": 305,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2084,
        2103
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13436": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2080,
        2164
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3495"
    },
    "13439": {
      "branch": 305,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2080,
        2164
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13440": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2122,
        2156
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 160,
      "value": "0xFF973B41FA98C081472E6896DFB254C0"
    },
    "13457": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2114,
        2156
      ],
      "op": "MUL",
      "path": "19"
    },
    "13458": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2161,
        2164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13460": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2113,
        2164
      ],
      "op": "SHR",
      "path": "19"
    },
    "13461": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2080,
        2164
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13462": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2188,
        2192
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "13464": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2178,
        2192
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13465": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2178,
        2192
      ],
      "op": "AND",
      "path": "19"
    },
    "13466": {
      "branch": 306,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2178,
        2197
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13467": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2174,
        2258
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34B4"
    },
    "13470": {
      "branch": 306,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2174,
        2258
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13471": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2216,
        2250
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 161,
      "value": "0xFF2EA16466C96A3843EC78B326B52861"
    },
    "13488": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2208,
        2250
      ],
      "op": "MUL",
      "path": "19"
    },
    "13489": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2255,
        2258
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13491": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2207,
        2258
      ],
      "op": "SHR",
      "path": "19"
    },
    "13492": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2174,
        2258
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13493": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2282,
        2286
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13495": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2272,
        2286
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13496": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2272,
        2286
      ],
      "op": "AND",
      "path": "19"
    },
    "13497": {
      "branch": 307,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2272,
        2291
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13498": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2268,
        2352
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34D3"
    },
    "13501": {
      "branch": 307,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2268,
        2352
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13502": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2310,
        2344
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 162,
      "value": "0xFE5DEE046A99A2A811C461F1969C3053"
    },
    "13519": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2302,
        2344
      ],
      "op": "MUL",
      "path": "19"
    },
    "13520": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2349,
        2352
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13522": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2301,
        2352
      ],
      "op": "SHR",
      "path": "19"
    },
    "13523": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2268,
        2352
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13524": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2376,
        2381
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x100"
    },
    "13527": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2366,
        2381
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13528": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2366,
        2381
      ],
      "op": "AND",
      "path": "19"
    },
    "13529": {
      "branch": 308,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2366,
        2386
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13530": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2362,
        2447
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34F3"
    },
    "13533": {
      "branch": 308,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2362,
        2447
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13534": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2405,
        2439
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 163,
      "value": "0xFCBE86C7900A88AEDCFFC83B479AA3A4"
    },
    "13551": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2397,
        2439
      ],
      "op": "MUL",
      "path": "19"
    },
    "13552": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2444,
        2447
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13554": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2396,
        2447
      ],
      "op": "SHR",
      "path": "19"
    },
    "13555": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2362,
        2447
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13556": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2471,
        2476
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x200"
    },
    "13559": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2461,
        2476
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13560": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2461,
        2476
      ],
      "op": "AND",
      "path": "19"
    },
    "13561": {
      "branch": 309,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2461,
        2481
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13562": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2457,
        2542
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3513"
    },
    "13565": {
      "branch": 309,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2457,
        2542
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13566": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2500,
        2534
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 164,
      "value": "0xF987A7253AC413176F2B074CF7815E54"
    },
    "13583": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2492,
        2534
      ],
      "op": "MUL",
      "path": "19"
    },
    "13584": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2539,
        2542
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13586": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2491,
        2542
      ],
      "op": "SHR",
      "path": "19"
    },
    "13587": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2457,
        2542
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13588": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2566,
        2571
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x400"
    },
    "13591": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2556,
        2571
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13592": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2556,
        2571
      ],
      "op": "AND",
      "path": "19"
    },
    "13593": {
      "branch": 310,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2556,
        2576
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13594": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2552,
        2637
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3533"
    },
    "13597": {
      "branch": 310,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2552,
        2637
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13598": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2595,
        2629
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 165,
      "value": "0xF3392B0822B70005940C7A398E4B70F3"
    },
    "13615": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2587,
        2629
      ],
      "op": "MUL",
      "path": "19"
    },
    "13616": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2634,
        2637
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13618": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2586,
        2637
      ],
      "op": "SHR",
      "path": "19"
    },
    "13619": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2552,
        2637
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13620": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2661,
        2666
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x800"
    },
    "13623": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2651,
        2666
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13624": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2651,
        2666
      ],
      "op": "AND",
      "path": "19"
    },
    "13625": {
      "branch": 311,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2651,
        2671
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13626": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2647,
        2732
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3553"
    },
    "13629": {
      "branch": 311,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2647,
        2732
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13630": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2690,
        2724
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 166,
      "value": "0xE7159475A2C29B7443B29C7FA6E889D9"
    },
    "13647": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2682,
        2724
      ],
      "op": "MUL",
      "path": "19"
    },
    "13648": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2729,
        2732
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13650": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2681,
        2732
      ],
      "op": "SHR",
      "path": "19"
    },
    "13651": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2647,
        2732
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13652": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2756,
        2762
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1000"
    },
    "13655": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2746,
        2762
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13656": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2746,
        2762
      ],
      "op": "AND",
      "path": "19"
    },
    "13657": {
      "branch": 312,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2746,
        2767
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13658": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2742,
        2828
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3573"
    },
    "13661": {
      "branch": 312,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2742,
        2828
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13662": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2786,
        2820
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 167,
      "value": "0xD097F3BDFD2022B8845AD8F792AA5825"
    },
    "13679": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2778,
        2820
      ],
      "op": "MUL",
      "path": "19"
    },
    "13680": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2825,
        2828
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13682": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2777,
        2828
      ],
      "op": "SHR",
      "path": "19"
    },
    "13683": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2742,
        2828
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13684": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2852,
        2858
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2000"
    },
    "13687": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2842,
        2858
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13688": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2842,
        2858
      ],
      "op": "AND",
      "path": "19"
    },
    "13689": {
      "branch": 313,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2842,
        2863
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13690": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2838,
        2924
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3593"
    },
    "13693": {
      "branch": 313,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2838,
        2924
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13694": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2882,
        2916
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 168,
      "value": "0xA9F746462D870FDF8A65DC1F90E061E5"
    },
    "13711": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2874,
        2916
      ],
      "op": "MUL",
      "path": "19"
    },
    "13712": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2921,
        2924
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13714": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2873,
        2924
      ],
      "op": "SHR",
      "path": "19"
    },
    "13715": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2838,
        2924
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13716": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2948,
        2954
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4000"
    },
    "13719": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2938,
        2954
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13720": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2938,
        2954
      ],
      "op": "AND",
      "path": "19"
    },
    "13721": {
      "branch": 314,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2938,
        2959
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13722": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2934,
        3020
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35B3"
    },
    "13725": {
      "branch": 314,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2934,
        3020
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13726": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2978,
        3012
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 169,
      "value": "0x70D869A156D2A1B890BB3DF62BAF32F7"
    },
    "13743": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2970,
        3012
      ],
      "op": "MUL",
      "path": "19"
    },
    "13744": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3017,
        3020
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13746": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2969,
        3020
      ],
      "op": "SHR",
      "path": "19"
    },
    "13747": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        2934,
        3020
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13748": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3044,
        3050
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x8000"
    },
    "13751": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3034,
        3050
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13752": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3034,
        3050
      ],
      "op": "AND",
      "path": "19"
    },
    "13753": {
      "branch": 315,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3034,
        3055
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13754": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3030,
        3116
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35D3"
    },
    "13757": {
      "branch": 315,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3030,
        3116
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13758": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3074,
        3108
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 170,
      "value": "0x31BE135F97D08FD981231505542FCFA6"
    },
    "13775": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3066,
        3108
      ],
      "op": "MUL",
      "path": "19"
    },
    "13776": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3113,
        3116
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13778": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3065,
        3116
      ],
      "op": "SHR",
      "path": "19"
    },
    "13779": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3030,
        3116
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13780": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3140,
        3147
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x10000"
    },
    "13784": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3130,
        3147
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13785": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3130,
        3147
      ],
      "op": "AND",
      "path": "19"
    },
    "13786": {
      "branch": 316,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3130,
        3152
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13787": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3126,
        3212
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x35F4"
    },
    "13790": {
      "branch": 316,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3126,
        3212
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13791": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3171,
        3204
      ],
      "op": "PUSH16",
      "path": "19",
      "statement": 171,
      "value": "0x9AA508B5B7A84E1C677DE54F3E99BC9"
    },
    "13808": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3163,
        3204
      ],
      "op": "MUL",
      "path": "19"
    },
    "13809": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3209,
        3212
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13811": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3162,
        3212
      ],
      "op": "SHR",
      "path": "19"
    },
    "13812": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3126,
        3212
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13813": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3236,
        3243
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x20000"
    },
    "13817": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3226,
        3243
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13818": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3226,
        3243
      ],
      "op": "AND",
      "path": "19"
    },
    "13819": {
      "branch": 317,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3226,
        3248
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13820": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3222,
        3307
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3614"
    },
    "13823": {
      "branch": 317,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3222,
        3307
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13824": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3267,
        3299
      ],
      "op": "PUSH15",
      "path": "19",
      "statement": 172,
      "value": "0x5D6AF8DEDB81196699C329225EE604"
    },
    "13840": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3259,
        3299
      ],
      "op": "MUL",
      "path": "19"
    },
    "13841": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3304,
        3307
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13843": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3258,
        3307
      ],
      "op": "SHR",
      "path": "19"
    },
    "13844": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3222,
        3307
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13845": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3331,
        3338
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x40000"
    },
    "13849": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3321,
        3338
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13850": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3321,
        3338
      ],
      "op": "AND",
      "path": "19"
    },
    "13851": {
      "branch": 318,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3321,
        3343
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13852": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3317,
        3400
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3633"
    },
    "13855": {
      "branch": 318,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3317,
        3400
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13856": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3362,
        3392
      ],
      "op": "PUSH14",
      "path": "19",
      "statement": 173,
      "value": "0x2216E584F5FA1EA926041BEDFE98"
    },
    "13871": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3354,
        3392
      ],
      "op": "MUL",
      "path": "19"
    },
    "13872": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3397,
        3400
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13874": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3353,
        3400
      ],
      "op": "SHR",
      "path": "19"
    },
    "13875": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3317,
        3400
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13876": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3424,
        3431
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0x80000"
    },
    "13880": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3414,
        3431
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13881": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3414,
        3431
      ],
      "op": "AND",
      "path": "19"
    },
    "13882": {
      "branch": 319,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3414,
        3436
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13883": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3410,
        3488
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3650"
    },
    "13886": {
      "branch": 319,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3410,
        3488
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13887": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3455,
        3480
      ],
      "op": "PUSH12",
      "path": "19",
      "statement": 174,
      "value": "0x48A170391F7DC42444E8FA2"
    },
    "13900": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3447,
        3480
      ],
      "op": "MUL",
      "path": "19"
    },
    "13901": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3485,
        3488
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "13903": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3446,
        3488
      ],
      "op": "SHR",
      "path": "19"
    },
    "13904": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3410,
        3488
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13905": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3510,
        3511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13907": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3507
      ],
      "op": "DUP5",
      "path": "19"
    },
    "13908": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2"
    },
    "13910": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3511
      ],
      "op": "SIGNEXTEND",
      "path": "19"
    },
    "13911": {
      "branch": 320,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3503,
        3511
      ],
      "op": "SGT",
      "path": "19"
    },
    "13912": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13913": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x366B"
    },
    "13916": {
      "branch": 320,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13917": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3541,
        3546
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 175
    },
    "13918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13920": {
      "op": "NOT"
    },
    "13921": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13922": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3667"
    },
    "13925": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13926": {
      "dev": "Division by zero",
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "INVALID",
      "path": "19"
    },
    "13927": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13928": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3521,
        3546
      ],
      "op": "DIV",
      "path": "19"
    },
    "13929": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3513,
        3546
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13930": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3513,
        3546
      ],
      "op": "POP",
      "path": "19"
    },
    "13931": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3499,
        3546
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13932": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3905,
        3912
      ],
      "op": "PUSH5",
      "path": "19",
      "statement": 176,
      "value": "0x100000000"
    },
    "13938": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3901
      ],
      "op": "DUP2",
      "path": "19"
    },
    "13939": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3913
      ],
      "op": "MOD",
      "path": "19"
    },
    "13940": {
      "branch": 321,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3918
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "13941": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x367F"
    },
    "13944": {
      "branch": 321,
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "13945": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3925,
        3926
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "13947": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x3682"
    },
    "13950": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13951": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13952": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3921,
        3922
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "13954": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3896,
        3926
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "13955": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3879,
        3927
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "13957": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3879,
        3927
      ],
      "op": "AND",
      "path": "19"
    },
    "13958": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3889,
        3891
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "13960": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3880,
        3885
      ],
      "op": "DUP3",
      "path": "19"
    },
    "13961": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3880,
        3891
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13962": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3880,
        3891
      ],
      "op": "SHR",
      "path": "19"
    },
    "13963": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3879,
        3927
      ],
      "op": "ADD",
      "path": "19"
    },
    "13964": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3856,
        3928
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "13965": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        3856,
        3928
      ],
      "op": "POP",
      "path": "19"
    },
    "13966": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "POP",
      "path": "19"
    },
    "13967": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "POP",
      "path": "19"
    },
    "13968": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "13969": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "13970": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "offset": [
        1355,
        3935
      ],
      "op": "POP",
      "path": "19"
    },
    "13971": {
      "fn": "TickMath.getSqrtRatioAtTick",
      "jump": "o",
      "offset": [
        1355,
        3935
      ],
      "op": "JUMP",
      "path": "19"
    },
    "13972": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13973": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3185,
        3202
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13975": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3234,
        3247
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13982": {
      "op": "SHL"
    },
    "13983": {
      "op": "SUB"
    },
    "13984": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3247
      ],
      "op": "AND",
      "path": "20"
    },
    "13985": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3231
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13992": {
      "op": "SHL"
    },
    "13993": {
      "op": "SUB"
    },
    "13994": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3247
      ],
      "op": "AND",
      "path": "20"
    },
    "13995": {
      "branch": 276,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3218,
        3247
      ],
      "op": "GT",
      "path": "20"
    },
    "13996": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13997": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36B4"
    },
    "14000": {
      "branch": 276,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14001": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3283,
        3296
      ],
      "op": "SWAP3",
      "path": "20",
      "statement": 177
    },
    "14002": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3283,
        3296
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "14003": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3298,
        3311
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14004": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3214,
        3312
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14005": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3343,
        3356
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14012": {
      "op": "SHL"
    },
    "14013": {
      "op": "SUB"
    },
    "14014": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3356
      ],
      "op": "AND",
      "path": "20"
    },
    "14015": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3339
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14022": {
      "op": "SHL"
    },
    "14023": {
      "op": "SUB"
    },
    "14024": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3356
      ],
      "op": "AND",
      "path": "20"
    },
    "14025": {
      "branch": 277,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3327,
        3356
      ],
      "op": "GT",
      "path": "20"
    },
    "14026": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36DF"
    },
    "14029": {
      "branch": 277,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14030": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3384,
        3445
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 178,
      "value": "0x36D8"
    },
    "14033": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3407,
        3420
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14034": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3422,
        3435
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14035": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3437,
        3444
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14036": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3384,
        3406
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3822"
    },
    "14039": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3384,
        3445
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14040": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3384,
        3445
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14041": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3372,
        3445
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14042": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3372,
        3445
      ],
      "op": "POP",
      "path": "20"
    },
    "14043": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x374F"
    },
    "14046": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14047": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3323,
        3877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14048": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3481,
        3494
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14055": {
      "op": "SHL"
    },
    "14056": {
      "op": "SUB"
    },
    "14057": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3494
      ],
      "op": "AND",
      "path": "20"
    },
    "14058": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3478
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14065": {
      "op": "SHL"
    },
    "14066": {
      "op": "SUB"
    },
    "14067": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3494
      ],
      "op": "AND",
      "path": "20"
    },
    "14068": {
      "branch": 278,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3466,
        3494
      ],
      "op": "LT",
      "path": "20"
    },
    "14069": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14070": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3741"
    },
    "14073": {
      "branch": 278,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14074": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3510,
        3528
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14076": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3531,
        3591
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3706"
    },
    "14079": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3554,
        3566
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14080": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3568,
        3581
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14081": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3583,
        3590
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14082": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3531,
        3553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3822"
    },
    "14085": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3531,
        3591
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14086": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3531,
        3591
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14087": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3510,
        3591
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14088": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3510,
        3591
      ],
      "op": "POP",
      "path": "20"
    },
    "14089": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3605,
        3623
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14091": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3626,
        3686
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3715"
    },
    "14094": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3649,
        3662
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14095": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3664,
        3676
      ],
      "op": "DUP10",
      "path": "20"
    },
    "14096": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3678,
        3685
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14097": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3626,
        3648
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3885"
    },
    "14100": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3626,
        3686
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14101": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3626,
        3686
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14102": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3605,
        3686
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14103": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3605,
        3686
      ],
      "op": "POP",
      "path": "20"
    },
    "14104": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3726,
        3736
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 179
    },
    "14105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14111": {
      "op": "SHL"
    },
    "14112": {
      "op": "SUB"
    },
    "14113": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3736
      ],
      "op": "AND",
      "path": "20"
    },
    "14114": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3723
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14119": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14121": {
      "op": "SHL"
    },
    "14122": {
      "op": "SUB"
    },
    "14123": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3736
      ],
      "op": "AND",
      "path": "20"
    },
    "14124": {
      "branch": 279,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3736
      ],
      "op": "LT",
      "path": "20"
    },
    "14125": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3736"
    },
    "14128": {
      "branch": 279,
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14129": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3752,
        3762
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14130": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3738"
    },
    "14133": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14134": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14135": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3739,
        3749
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14136": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3713,
        3762
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14137": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3701,
        3762
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14138": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3701,
        3762
      ],
      "op": "POP",
      "path": "20"
    },
    "14139": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "POP",
      "path": "20"
    },
    "14140": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "POP",
      "path": "20"
    },
    "14141": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x374F"
    },
    "14144": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14145": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14146": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3805,
        3866
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 180,
      "value": "0x374C"
    },
    "14149": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3828,
        3841
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14150": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3843,
        3856
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14151": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3858,
        3865
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14152": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3805,
        3827
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3885"
    },
    "14155": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "i",
      "offset": [
        3805,
        3866
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14156": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3805,
        3866
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14157": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3793,
        3866
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14158": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3793,
        3866
      ],
      "op": "POP",
      "path": "20"
    },
    "14159": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        3462,
        3877
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14160": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "14161": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14162": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "14163": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "14164": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "14165": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "14166": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "offset": [
        2982,
        3883
      ],
      "op": "POP",
      "path": "20"
    },
    "14167": {
      "fn": "LiquidityAmounts.getLiquidityForAmounts",
      "jump": "o",
      "offset": [
        2982,
        3883
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14168": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14169": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6193,
        6208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14171": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6210,
        6225
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14172": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6257,
        6270
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14179": {
      "op": "SHL"
    },
    "14180": {
      "op": "SUB"
    },
    "14181": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6270
      ],
      "op": "AND",
      "path": "20"
    },
    "14182": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6254
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14183": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14187": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14189": {
      "op": "SHL"
    },
    "14190": {
      "op": "SUB"
    },
    "14191": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6270
      ],
      "op": "AND",
      "path": "20"
    },
    "14192": {
      "branch": 280,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6241,
        6270
      ],
      "op": "GT",
      "path": "20"
    },
    "14193": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14194": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3779"
    },
    "14197": {
      "branch": 280,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14198": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6306,
        6319
      ],
      "op": "SWAP3",
      "path": "20",
      "statement": 181
    },
    "14199": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6306,
        6319
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "14200": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6321,
        6334
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14201": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6237,
        6335
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14202": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6366,
        6379
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14209": {
      "op": "SHL"
    },
    "14210": {
      "op": "SUB"
    },
    "14211": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6379
      ],
      "op": "AND",
      "path": "20"
    },
    "14212": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6362
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14219": {
      "op": "SHL"
    },
    "14220": {
      "op": "SUB"
    },
    "14221": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6379
      ],
      "op": "AND",
      "path": "20"
    },
    "14222": {
      "branch": 281,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6350,
        6379
      ],
      "op": "GT",
      "path": "20"
    },
    "14223": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37A4"
    },
    "14226": {
      "branch": 281,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14227": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6405,
        6468
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 182,
      "value": "0x379D"
    },
    "14230": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6428,
        6441
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14231": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6443,
        6456
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14232": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6458,
        6467
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14233": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6405,
        6427
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38C2"
    },
    "14236": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6405,
        6468
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14237": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6405,
        6468
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14238": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6395,
        6468
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14239": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6395,
        6468
      ],
      "op": "POP",
      "path": "20"
    },
    "14240": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37EB"
    },
    "14243": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14244": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6346,
        6806
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14245": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6504,
        6517
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14252": {
      "op": "SHL"
    },
    "14253": {
      "op": "SUB"
    },
    "14254": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6517
      ],
      "op": "AND",
      "path": "20"
    },
    "14255": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6501
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14262": {
      "op": "SHL"
    },
    "14263": {
      "op": "SUB"
    },
    "14264": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6517
      ],
      "op": "AND",
      "path": "20"
    },
    "14265": {
      "branch": 282,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6489,
        6517
      ],
      "op": "LT",
      "path": "20"
    },
    "14266": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14267": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37DD"
    },
    "14270": {
      "branch": 282,
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14271": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6543,
        6605
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 183,
      "value": "0x37C9"
    },
    "14274": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6566,
        6578
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14275": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6580,
        6593
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14276": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6595,
        6604
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14277": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6543,
        6565
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38C2"
    },
    "14280": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6543,
        6605
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14281": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6543,
        6605
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14282": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6533,
        6605
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14283": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6533,
        6605
      ],
      "op": "POP",
      "path": "20"
    },
    "14284": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6629,
        6691
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 184,
      "value": "0x37D6"
    },
    "14287": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6652,
        6665
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14288": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6667,
        6679
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14289": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6681,
        6690
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14290": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6629,
        6651
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x392B"
    },
    "14293": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6629,
        6691
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14294": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6629,
        6691
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14295": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6619,
        6691
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14296": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6619,
        6691
      ],
      "op": "POP",
      "path": "20"
    },
    "14297": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37EB"
    },
    "14300": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14301": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14302": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6732,
        6795
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 185,
      "value": "0x37E8"
    },
    "14305": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6755,
        6768
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14306": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6770,
        6783
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14307": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6785,
        6794
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14308": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6732,
        6754
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x392B"
    },
    "14311": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "i",
      "offset": [
        6732,
        6795
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14312": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6732,
        6795
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14313": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6722,
        6795
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14314": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6722,
        6795
      ],
      "op": "POP",
      "path": "20"
    },
    "14315": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6485,
        6806
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14316": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14317": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14318": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14319": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14320": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14321": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14322": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "offset": [
        6013,
        6812
      ],
      "op": "POP",
      "path": "20"
    },
    "14323": {
      "fn": "LiquidityAmounts.getAmountsForLiquidity",
      "jump": "o",
      "offset": [
        6013,
        6812
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14324": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18691,
        18828
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14325": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18745,
        18752
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14331": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14333": {
      "op": "SHL"
    },
    "14334": {
      "op": "SUB"
    },
    "14335": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18771,
        18793
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 186
    },
    "14336": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18771,
        18793
      ],
      "op": "GT",
      "path": "23"
    },
    "14337": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18771,
        18793
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "14338": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18764,
        18794
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3807"
    },
    "14341": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18764,
        18794
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14342": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18764,
        18794
      ],
      "op": "INVALID",
      "path": "23"
    },
    "14343": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18764,
        18794
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14344": {
      "op": "POP"
    },
    "14345": {
      "fn": "AlphaVault._toUint128",
      "offset": [
        18819,
        18820
      ],
      "op": "SWAP1",
      "path": "23",
      "statement": 187
    },
    "14346": {
      "fn": "AlphaVault._toUint128",
      "jump": "o",
      "offset": [
        18691,
        18828
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14347": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14348": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14350": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 188,
      "value": "0x381A"
    },
    "14353": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14354": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14355": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14357": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14358": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3736
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x396E"
    },
    "14361": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14362": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14363": {
      "fn": "Address.functionCall",
      "offset": [
        3708,
        3767
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "14364": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "14365": {
      "op": "POP"
    },
    "14366": {
      "op": "POP"
    },
    "14367": {
      "op": "POP"
    },
    "14368": {
      "op": "POP"
    },
    "14369": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14370": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1085,
        1560
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14371": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1233,
        1250
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14373": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1282,
        1295
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14380": {
      "op": "SHL"
    },
    "14381": {
      "op": "SUB"
    },
    "14382": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "20"
    },
    "14383": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1279
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14390": {
      "op": "SHL"
    },
    "14391": {
      "op": "SUB"
    },
    "14392": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1295
      ],
      "op": "AND",
      "path": "20"
    },
    "14393": {
      "branch": 283,
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1266,
        1295
      ],
      "op": "GT",
      "path": "20"
    },
    "14394": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14395": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3842"
    },
    "14398": {
      "branch": 283,
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14399": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1331,
        1344
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 189
    },
    "14400": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1331,
        1344
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14401": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1346,
        1359
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14402": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1262,
        1360
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14403": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1370,
        1390
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14405": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3865"
    },
    "14408": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1409,
        1422
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14415": {
      "op": "SHL"
    },
    "14416": {
      "op": "SUB"
    },
    "14417": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "AND",
      "path": "20"
    },
    "14418": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1424,
        1437
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14425": {
      "op": "SHL"
    },
    "14426": {
      "op": "SUB"
    },
    "14427": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "AND",
      "path": "20"
    },
    "14428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14430": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14432": {
      "op": "SHL"
    },
    "14433": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1408
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC9"
    },
    "14436": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "jump": "i",
      "offset": [
        1393,
        1456
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14437": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1393,
        1456
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14438": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1370,
        1456
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14439": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1370,
        1456
      ],
      "op": "POP",
      "path": "20"
    },
    "14440": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1473,
        1553
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 190,
      "value": "0x374F"
    },
    "14443": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1552
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3880"
    },
    "14446": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1499,
        1506
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14447": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1508,
        1520
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14448": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1538,
        1551
      ],
      "op": "DUP9",
      "path": "20"
    },
    "14449": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1522,
        1535
      ],
      "op": "DUP9",
      "path": "20"
    },
    "14450": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1522,
        1551
      ],
      "op": "SUB",
      "path": "20"
    },
    "14451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14455": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14457": {
      "op": "SHL"
    },
    "14458": {
      "op": "SUB"
    },
    "14459": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1552
      ],
      "op": "AND",
      "path": "20"
    },
    "14460": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1498
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC9"
    },
    "14463": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "jump": "i",
      "offset": [
        1483,
        1552
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14464": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1483,
        1552
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14465": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "offset": [
        1473,
        1482
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B78"
    },
    "14468": {
      "fn": "LiquidityAmounts.getLiquidityForAmount0",
      "jump": "i",
      "offset": [
        1473,
        1553
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14469": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        1999,
        2382
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14470": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2147,
        2164
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14472": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2196,
        2209
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14479": {
      "op": "SHL"
    },
    "14480": {
      "op": "SUB"
    },
    "14481": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2209
      ],
      "op": "AND",
      "path": "20"
    },
    "14482": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2193
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14489": {
      "op": "SHL"
    },
    "14490": {
      "op": "SUB"
    },
    "14491": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2209
      ],
      "op": "AND",
      "path": "20"
    },
    "14492": {
      "branch": 284,
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2180,
        2209
      ],
      "op": "GT",
      "path": "20"
    },
    "14493": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14494": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38A5"
    },
    "14497": {
      "branch": 284,
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14498": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2245,
        2258
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 191
    },
    "14499": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2245,
        2258
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14500": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2260,
        2273
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14501": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2176,
        2274
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14502": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2291,
        2375
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 192,
      "value": "0x381A"
    },
    "14505": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2301,
        2374
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3880"
    },
    "14508": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2317,
        2324
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14511": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14513": {
      "op": "SHL"
    },
    "14514": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2360,
        2373
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14515": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2344,
        2357
      ],
      "op": "DUP8",
      "path": "20"
    },
    "14516": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2344,
        2373
      ],
      "op": "SUB",
      "path": "20"
    },
    "14517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14523": {
      "op": "SHL"
    },
    "14524": {
      "op": "SUB"
    },
    "14525": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2301,
        2374
      ],
      "op": "AND",
      "path": "20"
    },
    "14526": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "offset": [
        2301,
        2316
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC9"
    },
    "14529": {
      "fn": "LiquidityAmounts.getLiquidityForAmount1",
      "jump": "i",
      "offset": [
        2301,
        2374
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14530": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4241,
        4739
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14531": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4391,
        4406
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14533": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4438,
        4451
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14540": {
      "op": "SHL"
    },
    "14541": {
      "op": "SUB"
    },
    "14542": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4451
      ],
      "op": "AND",
      "path": "20"
    },
    "14543": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4435
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14550": {
      "op": "SHL"
    },
    "14551": {
      "op": "SUB"
    },
    "14552": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4451
      ],
      "op": "AND",
      "path": "20"
    },
    "14553": {
      "branch": 285,
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4422,
        4451
      ],
      "op": "GT",
      "path": "20"
    },
    "14554": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14555": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x38E2"
    },
    "14558": {
      "branch": 285,
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14559": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4487,
        4500
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 193
    },
    "14560": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4487,
        4500
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14561": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4502,
        4515
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14562": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4418,
        4516
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14563": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4719,
        4732
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 194
    },
    "14564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14570": {
      "op": "SHL"
    },
    "14571": {
      "op": "SUB"
    },
    "14572": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "AND",
      "path": "20"
    },
    "14573": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x391B"
    },
    "14576": {
      "offset": [
        309,
        311
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x60"
    },
    "14578": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "14580": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "AND",
      "path": "20"
    },
    "14581": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4587,
        4596
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14586": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14588": {
      "op": "SHL"
    },
    "14589": {
      "op": "SUB"
    },
    "14590": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4597
      ],
      "op": "AND",
      "path": "20"
    },
    "14591": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14592": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4579,
        4624
      ],
      "op": "SHL",
      "path": "20"
    },
    "14593": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4658,
        4671
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14594": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4642,
        4655
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14595": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4642,
        4671
      ],
      "op": "SUB",
      "path": "20"
    },
    "14596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14602": {
      "op": "SHL"
    },
    "14603": {
      "op": "SUB"
    },
    "14604": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "AND",
      "path": "20"
    },
    "14605": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4689,
        4702
      ],
      "op": "DUP7",
      "path": "20"
    },
    "14606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14612": {
      "op": "SHL"
    },
    "14613": {
      "op": "SUB"
    },
    "14614": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "AND",
      "path": "20"
    },
    "14615": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4561
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC9"
    },
    "14618": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "i",
      "offset": [
        4546,
        4716
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14619": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4716
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14620": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14621": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3922"
    },
    "14624": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14625": {
      "dev": "Division by zero",
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "INVALID",
      "path": "20"
    },
    "14626": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14627": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "DIV",
      "path": "20"
    },
    "14628": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4546,
        4732
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14629": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "offset": [
        4241,
        4739
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "14630": {
      "op": "POP"
    },
    "14631": {
      "op": "POP"
    },
    "14632": {
      "op": "POP"
    },
    "14633": {
      "op": "POP"
    },
    "14634": {
      "fn": "LiquidityAmounts.getAmount0ForLiquidity",
      "jump": "o",
      "offset": [
        4241,
        4739
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14635": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5097,
        5472
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14636": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5247,
        5262
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14638": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5294,
        5307
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14645": {
      "op": "SHL"
    },
    "14646": {
      "op": "SUB"
    },
    "14647": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5307
      ],
      "op": "AND",
      "path": "20"
    },
    "14648": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5291
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14655": {
      "op": "SHL"
    },
    "14656": {
      "op": "SUB"
    },
    "14657": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5307
      ],
      "op": "AND",
      "path": "20"
    },
    "14658": {
      "branch": 286,
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5278,
        5307
      ],
      "op": "GT",
      "path": "20"
    },
    "14659": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14660": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x394B"
    },
    "14663": {
      "branch": 286,
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14664": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5343,
        5356
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 195
    },
    "14665": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5343,
        5356
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14666": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5358,
        5371
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14667": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5274,
        5372
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14668": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5465
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 196,
      "value": "0x381A"
    },
    "14671": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5406,
        5415
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14676": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14678": {
      "op": "SHL"
    },
    "14679": {
      "op": "SUB"
    },
    "14680": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5465
      ],
      "op": "AND",
      "path": "20"
    },
    "14681": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5433,
        5446
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14682": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5417,
        5430
      ],
      "op": "DUP6",
      "path": "20"
    },
    "14683": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5417,
        5446
      ],
      "op": "SUB",
      "path": "20"
    },
    "14684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14690": {
      "op": "SHL"
    },
    "14691": {
      "op": "SUB"
    },
    "14692": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5465
      ],
      "op": "AND",
      "path": "20"
    },
    "14693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14695": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14697": {
      "op": "SHL"
    },
    "14698": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "offset": [
        5390,
        5405
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AC9"
    },
    "14701": {
      "fn": "LiquidityAmounts.getAmount1ForLiquidity",
      "jump": "i",
      "offset": [
        5390,
        5465
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14702": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4735,
        4747
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "14705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4792,
        4797
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 197
    },
    "14706": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4788
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "14707": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "LT",
      "path": "5"
    },
    "14708": {
      "branch": 263,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4767,
        4797
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "14709": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39AF"
    },
    "14712": {
      "branch": 263,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14713": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14715": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14722": {
      "op": "SHL"
    },
    "14723": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14724": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14725": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14727": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14728": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14729": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14730": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14732": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14733": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14734": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14735": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "5"
    },
    "14736": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14737": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14738": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "14740": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14741": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14742": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14744": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14745": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14746": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C88"
    },
    "14749": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "14751": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14752": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "14753": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14755": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "ADD",
      "path": "5"
    },
    "14756": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14757": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "5"
    },
    "14758": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "POP",
      "path": "5"
    },
    "14759": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14761": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14762": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14763": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14764": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SUB",
      "path": "5"
    },
    "14765": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14766": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14767": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4759,
        4840
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14768": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 198,
      "value": "0x39B8"
    },
    "14771": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14772": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B8E"
    },
    "14775": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14776": {
      "branch": 264,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14777": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A09"
    },
    "14780": {
      "branch": 264,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14781": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14783": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14784": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14785": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14789": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14791": {
      "op": "SHL"
    },
    "14792": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14793": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14794": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14796": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "14798": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14799": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14800": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14801": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1D"
    },
    "14803": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "14805": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14806": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14807": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14808": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "14841": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "14843": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14844": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14845": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14846": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14847": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14848": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14849": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14850": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14851": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "5"
    },
    "14852": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x64"
    },
    "14854": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "5"
    },
    "14855": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14856": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "5"
    },
    "14857": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14858": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14860": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14861": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "5"
    },
    "14862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14868": {
      "op": "SHL"
    },
    "14869": {
      "op": "SUB"
    },
    "14870": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "5"
    },
    "14871": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14872": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14873": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14875": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14876": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14877": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14878": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14879": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14880": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14881": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14883": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14884": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14885": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14886": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14887": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14888": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14889": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14891": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14892": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "5"
    },
    "14893": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A47"
    },
    "14896": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14897": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14898": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14899": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14900": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14901": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14903": {
      "op": "NOT"
    },
    "14904": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14905": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14906": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14907": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14908": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14910": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14911": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14912": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14913": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14914": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14915": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A28"
    },
    "14918": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "5"
    },
    "14919": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "14920": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "14922": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14923": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "14925": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "14926": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "14929": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "5"
    },
    "14930": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "14931": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14932": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "5"
    },
    "14933": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14934": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14935": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "14936": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14937": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "5"
    },
    "14938": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14939": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "14940": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14941": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14942": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "5"
    },
    "14943": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14944": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "14945": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14946": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14947": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14948": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14949": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14950": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14951": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "14952": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14953": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14954": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14955": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14956": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14957": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14959": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14961": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14962": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14963": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "5"
    },
    "14964": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "5"
    },
    "14965": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14966": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "5"
    },
    "14967": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "5"
    },
    "14968": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "5"
    },
    "14969": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "5"
    },
    "14970": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "14971": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14972": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14973": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14974": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14975": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "14976": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14978": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "14979": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "5"
    },
    "14980": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AA9"
    },
    "14983": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "14984": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "14986": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "14987": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "14988": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "14989": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "14991": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "5"
    },
    "14992": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "14994": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "14995": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14996": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "5"
    },
    "14997": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "14998": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "14999": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "15001": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15002": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "15003": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "15006": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15010": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "5"
    },
    "15012": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "15013": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AAE"
    },
    "15016": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15018": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "15020": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15021": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "15022": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15023": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "15024": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "15026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15027": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "5"
    },
    "15028": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 199,
      "value": "0x3ABE"
    },
    "15031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15033": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "5"
    },
    "15034": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B94"
    },
    "15037": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15038": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15039": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "15040": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "15041": {
      "op": "POP"
    },
    "15042": {
      "op": "POP"
    },
    "15043": {
      "op": "POP"
    },
    "15044": {
      "op": "POP"
    },
    "15045": {
      "op": "POP"
    },
    "15046": {
      "op": "POP"
    },
    "15047": {
      "op": "POP"
    },
    "15048": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15049": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15050": {
      "fn": "FullMath.mulDiv",
      "offset": [
        854,
        868
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15052": {
      "fn": "FullMath.mulDiv",
      "offset": [
        854,
        868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15053": {
      "fn": "FullMath.mulDiv",
      "offset": [
        854,
        868
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15056": {
      "op": "NOT"
    },
    "15057": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1361,
        1362
      ],
      "op": "DUP6",
      "path": "18"
    },
    "15058": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1358,
        1359
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15059": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1351,
        1371
      ],
      "op": "MULMOD",
      "path": "18"
    },
    "15060": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15061": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15062": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "MUL",
      "path": "18"
    },
    "15063": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1393,
        1402
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "15064": {
      "op": "POP"
    },
    "15065": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1444,
        1457
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15066": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1444,
        1457
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15067": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1444,
        1457
      ],
      "op": "LT",
      "path": "18"
    },
    "15068": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15069": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "DUP4",
      "path": "18"
    },
    "15070": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15071": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1428,
        1442
      ],
      "op": "SUB",
      "path": "18"
    },
    "15072": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1424,
        1458
      ],
      "op": "SUB",
      "path": "18"
    },
    "15073": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1424,
        1458
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15074": {
      "op": "POP"
    },
    "15075": {
      "branch": 273,
      "fn": "FullMath.mulDiv",
      "offset": [
        1540,
        1550
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15076": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1536,
        1715
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AFF"
    },
    "15079": {
      "branch": 273,
      "fn": "FullMath.mulDiv",
      "offset": [
        1536,
        1715
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15080": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1588,
        1589
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 200,
      "value": "0x0"
    },
    "15082": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1574,
        1585
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15083": {
      "branch": 274,
      "fn": "FullMath.mulDiv",
      "offset": [
        1574,
        1589
      ],
      "op": "GT",
      "path": "18"
    },
    "15084": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3AF4"
    },
    "15087": {
      "branch": 274,
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15088": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15090": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15091": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15092": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1566,
        1590
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15093": {
      "op": "POP"
    },
    "15094": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15095": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15096": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "DIV",
      "path": "18"
    },
    "15097": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1641,
        1664
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15098": {
      "op": "POP"
    },
    "15099": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1691,
        1704
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 201,
      "value": "0xB7C"
    },
    "15102": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1691,
        1704
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15103": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1536,
        1715
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15104": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1842,
        1847
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 202
    },
    "15105": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1828,
        1839
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15106": {
      "branch": 275,
      "fn": "FullMath.mulDiv",
      "offset": [
        1828,
        1847
      ],
      "op": "GT",
      "path": "18"
    },
    "15107": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x3B0B"
    },
    "15110": {
      "branch": 275,
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "15111": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15113": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15114": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "REVERT",
      "path": "18"
    },
    "15115": {
      "fn": "FullMath.mulDiv",
      "offset": [
        1820,
        1848
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "15116": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2125,
        2142
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15118": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2201,
        2212
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15119": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2198,
        2199
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15120": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2195,
        2196
      ],
      "op": "DUP9",
      "path": "18"
    },
    "15121": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2188,
        2213
      ],
      "op": "MULMOD",
      "path": "18"
    },
    "15122": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2553,
        2565
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "15124": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2580
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15125": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2580
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15126": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2580
      ],
      "op": "SUB",
      "path": "18"
    },
    "15127": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2594
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15128": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2568,
        2594
      ],
      "op": "AND",
      "path": "18"
    },
    "15129": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "15130": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "DUP8",
      "path": "18"
    },
    "15131": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15132": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "DIV",
      "path": "18"
    },
    "15133": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2688,
        2710
      ],
      "op": "SWAP7",
      "path": "18"
    },
    "15134": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3491,
        3492
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "15136": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3472,
        3473
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x3"
    },
    "15138": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3472,
        3487
      ],
      "op": "DUP10",
      "path": "18"
    },
    "15139": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3472,
        3487
      ],
      "op": "MUL",
      "path": "18"
    },
    "15140": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3492
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15141": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3471,
        3492
      ],
      "op": "XOR",
      "path": "18"
    },
    "15142": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 203
    },
    "15143": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3718,
        3735
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15144": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3718,
        3735
      ],
      "op": "MUL",
      "path": "18"
    },
    "15145": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3714,
        3735
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15146": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3714,
        3735
      ],
      "op": "SUB",
      "path": "18"
    },
    "15147": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3707,
        3735
      ],
      "op": "MUL",
      "path": "18"
    },
    "15148": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3776,
        3793
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 204
    },
    "15149": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3776,
        3793
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15150": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3776,
        3793
      ],
      "op": "MUL",
      "path": "18"
    },
    "15151": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3772,
        3793
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15152": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3772,
        3793
      ],
      "op": "SUB",
      "path": "18"
    },
    "15153": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3765,
        3793
      ],
      "op": "MUL",
      "path": "18"
    },
    "15154": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3835,
        3852
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 205
    },
    "15155": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3835,
        3852
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15156": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3835,
        3852
      ],
      "op": "MUL",
      "path": "18"
    },
    "15157": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3831,
        3852
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15158": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3831,
        3852
      ],
      "op": "SUB",
      "path": "18"
    },
    "15159": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3824,
        3852
      ],
      "op": "MUL",
      "path": "18"
    },
    "15160": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3894,
        3911
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 206
    },
    "15161": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3894,
        3911
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15162": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3894,
        3911
      ],
      "op": "MUL",
      "path": "18"
    },
    "15163": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3890,
        3911
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15164": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3890,
        3911
      ],
      "op": "SUB",
      "path": "18"
    },
    "15165": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3883,
        3911
      ],
      "op": "MUL",
      "path": "18"
    },
    "15166": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3953,
        3970
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 207
    },
    "15167": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3953,
        3970
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15168": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3953,
        3970
      ],
      "op": "MUL",
      "path": "18"
    },
    "15169": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3949,
        3970
      ],
      "op": "DUP3",
      "path": "18"
    },
    "15170": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3949,
        3970
      ],
      "op": "SUB",
      "path": "18"
    },
    "15171": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3942,
        3970
      ],
      "op": "MUL",
      "path": "18"
    },
    "15172": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4013,
        4030
      ],
      "op": "DUP1",
      "path": "18",
      "statement": 208
    },
    "15173": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4013,
        4030
      ],
      "op": "DUP11",
      "path": "18"
    },
    "15174": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4013,
        4030
      ],
      "op": "MUL",
      "path": "18"
    },
    "15175": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4009,
        4030
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15176": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4009,
        4030
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15177": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4009,
        4030
      ],
      "op": "SUB",
      "path": "18"
    },
    "15178": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4002,
        4030
      ],
      "op": "MUL",
      "path": "18"
    },
    "15179": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15180": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15181": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15182": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3060,
        3072
      ],
      "op": "SUB",
      "path": "18"
    },
    "15183": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3056,
        3079
      ],
      "op": "DUP2",
      "path": "18"
    },
    "15184": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3056,
        3079
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15185": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3056,
        3079
      ],
      "op": "DIV",
      "path": "18"
    },
    "15186": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3081,
        3082
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x1"
    },
    "15188": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3052,
        3083
      ],
      "op": "ADD",
      "path": "18"
    },
    "15189": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2330,
        2350
      ],
      "op": "DUP7",
      "path": "18"
    },
    "15190": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2330,
        2350
      ],
      "op": "DUP5",
      "path": "18"
    },
    "15191": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2330,
        2350
      ],
      "op": "GT",
      "path": "18"
    },
    "15192": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2319,
        2351
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15193": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2319,
        2351
      ],
      "op": "SWAP6",
      "path": "18"
    },
    "15194": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2319,
        2351
      ],
      "op": "SUB",
      "path": "18"
    },
    "15195": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "SWAP5",
      "path": "18",
      "statement": 209
    },
    "15196": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15197": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "15198": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3111,
        3123
      ],
      "op": "MUL",
      "path": "18"
    },
    "15199": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15200": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15201": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SWAP5",
      "path": "18"
    },
    "15202": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2373,
        2394
      ],
      "op": "SUB",
      "path": "18"
    },
    "15203": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "15204": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15205": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "15206": {
      "fn": "FullMath.mulDiv",
      "offset": [
        2816,
        2832
      ],
      "op": "DIV",
      "path": "18"
    },
    "15207": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15208": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15209": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15210": {
      "fn": "FullMath.mulDiv",
      "offset": [
        3102,
        3123
      ],
      "op": "OR",
      "path": "18"
    },
    "15211": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP2",
      "path": "18",
      "statement": 210
    },
    "15212": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "15213": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15214": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "MUL",
      "path": "18"
    },
    "15215": {
      "fn": "FullMath.mulDiv",
      "offset": [
        4477,
        4488
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "15216": {
      "op": "POP"
    },
    "15217": {
      "op": "POP"
    },
    "15218": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "15219": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "15220": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "POP",
      "path": "18"
    },
    "15221": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "POP",
      "path": "18"
    },
    "15222": {
      "fn": "FullMath.mulDiv",
      "offset": [
        742,
        4518
      ],
      "op": "POP",
      "path": "18"
    },
    "15223": {
      "fn": "FullMath.mulDiv",
      "jump": "o",
      "offset": [
        742,
        4518
      ],
      "op": "JUMP",
      "path": "18"
    },
    "15224": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        507,
        617
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15225": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        608,
        609
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 211
    },
    "15226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15230": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "15232": {
      "op": "SHL"
    },
    "15233": {
      "op": "SUB"
    },
    "15234": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15235": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "AND",
      "path": "20"
    },
    "15236": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15237": {
      "branch": 287,
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        588,
        609
      ],
      "op": "EQ",
      "path": "20"
    },
    "15238": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1154"
    },
    "15241": {
      "branch": 287,
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15242": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15244": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15245": {
      "fn": "LiquidityAmounts.toUint128",
      "offset": [
        580,
        610
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15246": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15247": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "15248": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "5",
      "statement": 212
    },
    "15249": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15250": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15251": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15252": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15253": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "15255": {
      "branch": 265,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15256": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15257": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BA3"
    },
    "15260": {
      "branch": 265,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15261": {
      "op": "POP"
    },
    "15262": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 213
    },
    "15263": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB7C"
    },
    "15266": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "5"
    },
    "15267": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15268": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15269": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15270": {
      "branch": 266,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15271": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BB3"
    },
    "15274": {
      "branch": 266,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15275": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15276": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15277": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15278": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15279": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15281": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "5"
    },
    "15282": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "5"
    },
    "15283": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "15284": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 214,
      "value": "0x40"
    },
    "15286": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "15291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "15293": {
      "op": "SHL"
    },
    "15294": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15295": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15296": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15298": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "15300": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15301": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15302": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15303": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15304": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15305": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15306": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15307": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "15309": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15310": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15311": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15312": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "5"
    },
    "15313": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15314": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15315": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "15316": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15317": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15318": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15319": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "15320": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x44"
    },
    "15322": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15323": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "15324": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15325": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP6",
      "path": "5"
    },
    "15326": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15327": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "15328": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15329": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15330": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15331": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15333": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15334": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "15335": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24E9"
    },
    "15338": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "15339": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15340": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "15341": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15342": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "15343": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "5"
    },
    "15344": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "15345": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15346": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "15347": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "15349": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "5"
    },
    "15350": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24D1"
    },
    "15353": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "5"
    }
  },
  "sha1": "7a6ff9a8fa259a5b611542aeb1cf8a1229a74349",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.7.6;\n\nimport \"@openzeppelin/contracts/math/Math.sol\";\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/LiquidityAmounts.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/PositionKey.sol\";\n\nimport \"../interfaces/IVault.sol\";\n\n/**\n * @title   Alpha Vault\n * @notice  A vault that provides liquidity on Uniswap V3.\n */\ncontract AlphaVault is\n    IVault,\n    IUniswapV3MintCallback,\n    IUniswapV3SwapCallback,\n    ERC20,\n    ReentrancyGuard\n{\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    event Deposit(\n        address indexed sender,\n        address indexed to,\n        uint256 shares,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    event Withdraw(\n        address indexed sender,\n        address indexed to,\n        uint256 shares,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    event CollectFees(\n        uint256 feesToVault0,\n        uint256 feesToVault1,\n        uint256 feesToProtocol0,\n        uint256 feesToProtocol1\n    );\n\n    event Snapshot(int24 tick, uint256 totalAmount0, uint256 totalAmount1, uint256 totalSupply);\n\n    IUniswapV3Pool public immutable pool;\n    IERC20 public immutable token0;\n    IERC20 public immutable token1;\n    int24 public immutable tickSpacing;\n\n    uint256 public protocolFee;\n    uint256 public maxTotalSupply;\n    address public strategy;\n    address public governance;\n    address public pendingGovernance;\n\n    int24 public baseLower;\n    int24 public baseUpper;\n    int24 public limitLower;\n    int24 public limitUpper;\n    uint256 public accruedProtocolFees0;\n    uint256 public accruedProtocolFees1;\n\n    /**\n     * @dev After deploying, strategy needs to be set via `setStrategy()`\n     * @param _pool Underlying Uniswap V3 pool\n     * @param _protocolFee Protocol fee expressed as multiple of 1e-6\n     * @param _maxTotalSupply Cap on total supply\n     */\n    constructor(\n        address _pool,\n        uint256 _protocolFee,\n        uint256 _maxTotalSupply\n    ) ERC20(\"Alpha Vault\", \"AV\") {\n        pool = IUniswapV3Pool(_pool);\n        token0 = IERC20(IUniswapV3Pool(_pool).token0());\n        token1 = IERC20(IUniswapV3Pool(_pool).token1());\n        tickSpacing = IUniswapV3Pool(_pool).tickSpacing();\n\n        protocolFee = _protocolFee;\n        maxTotalSupply = _maxTotalSupply;\n        governance = msg.sender;\n\n        require(_protocolFee < 1e6, \"protocolFee\");\n    }\n\n    /**\n     * @notice Deposits tokens in proportion to the vault's current holdings.\n     * @dev These tokens sit in the vault and are not used for liquidity on\n     * Uniswap until the next rebalance. Also note it's not necessary to check\n     * if user manipulated price to deposit cheaper, as the value of range\n     * orders can only by manipulated higher.\n     * @param amount0Desired Max amount of token0 to deposit\n     * @param amount1Desired Max amount of token1 to deposit\n     * @param amount0Min Revert if resulting `amount0` is less than this\n     * @param amount1Min Revert if resulting `amount1` is less than this\n     * @param to Recipient of shares\n     * @return shares Number of shares minted\n     * @return amount0 Amount of token0 deposited\n     * @return amount1 Amount of token1 deposited\n     */\n    function deposit(\n        uint256 amount0Desired,\n        uint256 amount1Desired,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address to\n    )\n        external\n        override\n        nonReentrant\n        returns (\n            uint256 shares,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        require(amount0Desired > 0 || amount1Desired > 0, \"amount0Desired or amount1Desired\");\n        require(to != address(0) && to != address(this), \"to\");\n\n        // Poke positions so vault's current holdings are up-to-date\n        _poke(baseLower, baseUpper);\n        _poke(limitLower, limitUpper);\n\n        // Calculate amounts proportional to vault's holdings\n        (shares, amount0, amount1) = _calcSharesAndAmounts(amount0Desired, amount1Desired);\n        require(shares > 0, \"shares\");\n        require(amount0 >= amount0Min, \"amount0Min\");\n        require(amount1 >= amount1Min, \"amount1Min\");\n\n        // Pull in tokens from sender\n        if (amount0 > 0) token0.safeTransferFrom(msg.sender, address(this), amount0);\n        if (amount1 > 0) token1.safeTransferFrom(msg.sender, address(this), amount1);\n\n        // Mint shares to recipient\n        _mint(to, shares);\n        emit Deposit(msg.sender, to, shares, amount0, amount1);\n        require(totalSupply() <= maxTotalSupply, \"maxTotalSupply\");\n    }\n\n    /// @dev Do zero-burns to poke a position on Uniswap so earned fees are\n    /// updated. Should be called if total amounts needs to include up-to-date\n    /// fees.\n    function _poke(int24 tickLower, int24 tickUpper) internal {\n        (uint128 liquidity, , , , ) = _position(tickLower, tickUpper);\n        if (liquidity > 0) {\n            pool.burn(tickLower, tickUpper, 0);\n        }\n    }\n\n    /// @dev Calculates the largest possible `amount0` and `amount1` such that\n    /// they're in the same proportion as total amounts, but not greater than\n    /// `amount0Desired` and `amount1Desired` respectively.\n    function _calcSharesAndAmounts(uint256 amount0Desired, uint256 amount1Desired)\n        internal\n        view\n        returns (\n            uint256 shares,\n            uint256 amount0,\n            uint256 amount1\n        )\n    {\n        uint256 totalSupply = totalSupply();\n        (uint256 total0, uint256 total1) = getTotalAmounts();\n\n        // If total supply > 0, vault can't be empty\n        assert(totalSupply == 0 || total0 > 0 || total1 > 0);\n\n        if (totalSupply == 0) {\n            // For first deposit, just use the amounts desired\n            amount0 = amount0Desired;\n            amount1 = amount1Desired;\n            shares = Math.max(amount0, amount1);\n        } else if (total0 == 0) {\n            amount1 = amount1Desired;\n            shares = amount1.mul(totalSupply).div(total1);\n        } else if (total1 == 0) {\n            amount0 = amount0Desired;\n            shares = amount0.mul(totalSupply).div(total0);\n        } else {\n            uint256 cross = Math.min(amount0Desired.mul(total1), amount1Desired.mul(total0));\n            require(cross > 0, \"cross\");\n\n            // Round up amounts\n            amount0 = cross.sub(1).div(total1).add(1);\n            amount1 = cross.sub(1).div(total0).add(1);\n            shares = cross.mul(totalSupply).div(total0).div(total1);\n        }\n    }\n\n    /**\n     * @notice Withdraws tokens in proportion to the vault's holdings.\n     * @param shares Shares burned by sender\n     * @param amount0Min Revert if resulting `amount0` is smaller than this\n     * @param amount1Min Revert if resulting `amount1` is smaller than this\n     * @param to Recipient of tokens\n     * @return amount0 Amount of token0 sent to recipient\n     * @return amount1 Amount of token1 sent to recipient\n     */\n    function withdraw(\n        uint256 shares,\n        uint256 amount0Min,\n        uint256 amount1Min,\n        address to\n    ) external override nonReentrant returns (uint256 amount0, uint256 amount1) {\n        require(shares > 0, \"shares\");\n        require(to != address(0) && to != address(this), \"to\");\n        uint256 totalSupply = totalSupply();\n\n        // Burn shares\n        _burn(msg.sender, shares);\n\n        // Calculate token amounts proportional to unused balances\n        uint256 unusedAmount0 = getBalance0().mul(shares).div(totalSupply);\n        uint256 unusedAmount1 = getBalance1().mul(shares).div(totalSupply);\n\n        // Withdraw proportion of liquidity from Uniswap pool\n        (uint256 baseAmount0, uint256 baseAmount1) =\n            _burnLiquidityShare(baseLower, baseUpper, shares, totalSupply);\n        (uint256 limitAmount0, uint256 limitAmount1) =\n            _burnLiquidityShare(limitLower, limitUpper, shares, totalSupply);\n\n        // Sum up total amounts owed to recipient\n        amount0 = unusedAmount0.add(baseAmount0).add(limitAmount0);\n        amount1 = unusedAmount1.add(baseAmount1).add(limitAmount1);\n        require(amount0 >= amount0Min, \"amount0Min\");\n        require(amount1 >= amount1Min, \"amount1Min\");\n\n        // Push tokens to recipient\n        if (amount0 > 0) token0.safeTransfer(to, amount0);\n        if (amount1 > 0) token1.safeTransfer(to, amount1);\n\n        emit Withdraw(msg.sender, to, shares, amount0, amount1);\n    }\n\n    /// @dev Withdraws share of liquidity in a range from Uniswap pool.\n    function _burnLiquidityShare(\n        int24 tickLower,\n        int24 tickUpper,\n        uint256 shares,\n        uint256 totalSupply\n    ) internal returns (uint256 amount0, uint256 amount1) {\n        (uint128 totalLiquidity, , , , ) = _position(tickLower, tickUpper);\n        uint256 liquidity = uint256(totalLiquidity).mul(shares).div(totalSupply);\n\n        if (liquidity > 0) {\n            (uint256 burned0, uint256 burned1, uint256 fees0, uint256 fees1) =\n                _burnAndCollect(tickLower, tickUpper, _toUint128(liquidity));\n\n            // Add share of fees\n            amount0 = burned0.add(fees0.mul(shares).div(totalSupply));\n            amount1 = burned1.add(fees1.mul(shares).div(totalSupply));\n        }\n    }\n\n    /**\n     * @notice Updates vault's positions. Can only be called by the strategy.\n     * @dev Two orders are placed - a base order and a limit order. The base\n     * order is placed first with as much liquidity as possible. This order\n     * should use up all of one token, leaving only the other one. This excess\n     * amount is then placed as a single-sided bid or ask order.\n     */\n    function rebalance(\n        int256 swapAmount,\n        uint160 sqrtPriceLimitX96,\n        int24 _baseLower,\n        int24 _baseUpper,\n        int24 _bidLower,\n        int24 _bidUpper,\n        int24 _askLower,\n        int24 _askUpper\n    ) external nonReentrant {\n        require(msg.sender == strategy, \"strategy\");\n        _checkRange(_baseLower, _baseUpper);\n        _checkRange(_bidLower, _bidUpper);\n        _checkRange(_askLower, _askUpper);\n\n        (, int24 tick, , , , , ) = pool.slot0();\n        require(_bidUpper <= tick, \"bidUpper\");\n        require(_askLower > tick, \"askLower\"); // inequality is strict as tick is rounded down\n\n        // Withdraw all current liquidity from Uniswap pool\n        {\n            (uint128 baseLiquidity, , , , ) = _position(baseLower, baseUpper);\n            (uint128 limitLiquidity, , , , ) = _position(limitLower, limitUpper);\n            _burnAndCollect(baseLower, baseUpper, baseLiquidity);\n            _burnAndCollect(limitLower, limitUpper, limitLiquidity);\n        }\n\n        // Emit snapshot to record balances and supply\n        uint256 balance0 = getBalance0();\n        uint256 balance1 = getBalance1();\n        emit Snapshot(tick, balance0, balance1, totalSupply());\n\n        if (swapAmount != 0) {\n            pool.swap(\n                address(this),\n                swapAmount > 0,\n                swapAmount > 0 ? swapAmount : -swapAmount,\n                sqrtPriceLimitX96,\n                \"\"\n            );\n            balance0 = getBalance0();\n            balance1 = getBalance1();\n        }\n\n        // Place base order on Uniswap\n        uint128 liquidity = _liquidityForAmounts(_baseLower, _baseUpper, balance0, balance1);\n        _mintLiquidity(_baseLower, _baseUpper, liquidity);\n        (baseLower, baseUpper) = (_baseLower, _baseUpper);\n\n        balance0 = getBalance0();\n        balance1 = getBalance1();\n\n        // Place bid or ask order on Uniswap depending on which token is left\n        uint128 bidLiquidity = _liquidityForAmounts(_bidLower, _bidUpper, balance0, balance1);\n        uint128 askLiquidity = _liquidityForAmounts(_askLower, _askUpper, balance0, balance1);\n        if (bidLiquidity > askLiquidity) {\n            _mintLiquidity(_bidLower, _bidUpper, bidLiquidity);\n            (limitLower, limitUpper) = (_bidLower, _bidUpper);\n        } else {\n            _mintLiquidity(_askLower, _askUpper, askLiquidity);\n            (limitLower, limitUpper) = (_askLower, _askUpper);\n        }\n    }\n\n    function _checkRange(int24 tickLower, int24 tickUpper) internal view {\n        int24 _tickSpacing = tickSpacing;\n        require(tickLower < tickUpper, \"tickLower < tickUpper\");\n        require(tickLower >= TickMath.MIN_TICK, \"tickLower too low\");\n        require(tickUpper <= TickMath.MAX_TICK, \"tickUpper too high\");\n        require(tickLower % _tickSpacing == 0, \"tickLower % tickSpacing\");\n        require(tickUpper % _tickSpacing == 0, \"tickUpper % tickSpacing\");\n    }\n\n    /// @dev Withdraws liquidity from a range and collects all fees in the\n    /// process.\n    function _burnAndCollect(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    )\n        internal\n        returns (\n            uint256 burned0,\n            uint256 burned1,\n            uint256 feesToVault0,\n            uint256 feesToVault1\n        )\n    {\n        if (liquidity > 0) {\n            (burned0, burned1) = pool.burn(tickLower, tickUpper, liquidity);\n        }\n\n        // Collect all owed tokens including earned fees\n        (uint256 collect0, uint256 collect1) =\n            pool.collect(\n                address(this),\n                tickLower,\n                tickUpper,\n                type(uint128).max,\n                type(uint128).max\n            );\n\n        feesToVault0 = collect0.sub(burned0);\n        feesToVault1 = collect1.sub(burned1);\n        uint256 feesToProtocol0;\n        uint256 feesToProtocol1;\n\n        // Update accrued protocol fees\n        uint256 _protocolFee = protocolFee;\n        if (_protocolFee > 0) {\n            feesToProtocol0 = feesToVault0.mul(_protocolFee).div(1e6);\n            feesToProtocol1 = feesToVault1.mul(_protocolFee).div(1e6);\n            feesToVault0 = feesToVault0.sub(feesToProtocol0);\n            feesToVault1 = feesToVault1.sub(feesToProtocol1);\n            accruedProtocolFees0 = accruedProtocolFees0.add(feesToProtocol0);\n            accruedProtocolFees1 = accruedProtocolFees1.add(feesToProtocol1);\n        }\n        emit CollectFees(feesToVault0, feesToVault1, feesToProtocol0, feesToProtocol1);\n    }\n\n    /// @dev Deposits liquidity in a range on the Uniswap pool.\n    function _mintLiquidity(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal {\n        if (liquidity > 0) {\n            pool.mint(address(this), tickLower, tickUpper, liquidity, \"\");\n        }\n    }\n\n    /**\n     * @notice Calculates the vault's total holdings of token0 and token1 - in\n     * other words, how much of each token the vault would hold if it withdrew\n     * all its liquidity from Uniswap.\n     */\n    function getTotalAmounts() public view override returns (uint256 total0, uint256 total1) {\n        (uint256 baseAmount0, uint256 baseAmount1) = getPositionAmounts(baseLower, baseUpper);\n        (uint256 limitAmount0, uint256 limitAmount1) =\n            getPositionAmounts(limitLower, limitUpper);\n        total0 = getBalance0().add(baseAmount0).add(limitAmount0);\n        total1 = getBalance1().add(baseAmount1).add(limitAmount1);\n    }\n\n    /**\n     * @notice Amounts of token0 and token1 held in vault's position. Includes\n     * owed fees but excludes the proportion of fees that will be paid to the\n     * protocol. Doesn't include fees accrued since last poke.\n     */\n    function getPositionAmounts(int24 tickLower, int24 tickUpper)\n        public\n        view\n        returns (uint256 amount0, uint256 amount1)\n    {\n        (uint128 liquidity, , , uint128 tokensOwed0, uint128 tokensOwed1) =\n            _position(tickLower, tickUpper);\n        (amount0, amount1) = _amountsForLiquidity(tickLower, tickUpper, liquidity);\n\n        // Subtract protocol fees\n        uint256 oneMinusFee = uint256(1e6).sub(protocolFee);\n        amount0 = amount0.add(uint256(tokensOwed0).mul(oneMinusFee).div(1e6));\n        amount1 = amount1.add(uint256(tokensOwed1).mul(oneMinusFee).div(1e6));\n    }\n\n    /**\n     * @notice Balance of token0 in vault not used in any position.\n     */\n    function getBalance0() public view returns (uint256) {\n        return token0.balanceOf(address(this)).sub(accruedProtocolFees0);\n    }\n\n    /**\n     * @notice Balance of token1 in vault not used in any position.\n     */\n    function getBalance1() public view returns (uint256) {\n        return token1.balanceOf(address(this)).sub(accruedProtocolFees1);\n    }\n\n    /// @dev Wrapper around `IUniswapV3Pool.positions()`.\n    function _position(int24 tickLower, int24 tickUpper)\n        internal\n        view\n        returns (\n            uint128,\n            uint256,\n            uint256,\n            uint128,\n            uint128\n        )\n    {\n        bytes32 positionKey = PositionKey.compute(address(this), tickLower, tickUpper);\n        return pool.positions(positionKey);\n    }\n\n    /// @dev Wrapper around `LiquidityAmounts.getAmountsForLiquidity()`.\n    function _amountsForLiquidity(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal view returns (uint256, uint256) {\n        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();\n        return\n            LiquidityAmounts.getAmountsForLiquidity(\n                sqrtRatioX96,\n                TickMath.getSqrtRatioAtTick(tickLower),\n                TickMath.getSqrtRatioAtTick(tickUpper),\n                liquidity\n            );\n    }\n\n    /// @dev Wrapper around `LiquidityAmounts.getLiquidityForAmounts()`.\n    function _liquidityForAmounts(\n        int24 tickLower,\n        int24 tickUpper,\n        uint256 amount0,\n        uint256 amount1\n    ) internal view returns (uint128) {\n        (uint160 sqrtRatioX96, , , , , , ) = pool.slot0();\n        return\n            LiquidityAmounts.getLiquidityForAmounts(\n                sqrtRatioX96,\n                TickMath.getSqrtRatioAtTick(tickLower),\n                TickMath.getSqrtRatioAtTick(tickUpper),\n                amount0,\n                amount1\n            );\n    }\n\n    /// @dev Casts uint256 to uint128 with overflow check.\n    function _toUint128(uint256 x) internal pure returns (uint128) {\n        assert(x <= type(uint128).max);\n        return uint128(x);\n    }\n\n    /// @dev Callback for Uniswap V3 pool.\n    function uniswapV3MintCallback(\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external override {\n        require(msg.sender == address(pool));\n        if (amount0 > 0) token0.safeTransfer(msg.sender, amount0);\n        if (amount1 > 0) token1.safeTransfer(msg.sender, amount1);\n    }\n\n    /// @dev Callback for Uniswap V3 pool.\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external override {\n        require(msg.sender == address(pool));\n        if (amount0Delta > 0) token0.safeTransfer(msg.sender, uint256(amount0Delta));\n        if (amount1Delta > 0) token1.safeTransfer(msg.sender, uint256(amount1Delta));\n    }\n\n    /**\n     * @notice Used to collect accumulated protocol fees.\n     */\n    function collectProtocol(\n        uint256 amount0,\n        uint256 amount1,\n        address to\n    ) external onlyGovernance {\n        accruedProtocolFees0 = accruedProtocolFees0.sub(amount0);\n        accruedProtocolFees1 = accruedProtocolFees1.sub(amount1);\n        if (amount0 > 0) token0.safeTransfer(to, amount0);\n        if (amount1 > 0) token1.safeTransfer(to, amount1);\n    }\n\n    /**\n     * @notice Removes tokens accidentally sent to this vault.\n     */\n    function sweep(\n        IERC20 token,\n        uint256 amount,\n        address to\n    ) external onlyGovernance {\n        require(token != token0 && token != token1, \"token\");\n        token.safeTransfer(to, amount);\n    }\n\n    /**\n     * @notice Used to set the strategy contract that determines the position\n     * ranges and calls rebalance(). Must be called after this vault is\n     * deployed.\n     */\n    function setStrategy(address _strategy) external onlyGovernance {\n        strategy = _strategy;\n    }\n\n    /**\n     * @notice Used to change the protocol fee charged on pool fees earned from\n     * Uniswap, expressed as multiple of 1e-6.\n     */\n    function setProtocolFee(uint256 _protocolFee) external onlyGovernance {\n        require(_protocolFee < 1e6, \"protocolFee\");\n        protocolFee = _protocolFee;\n    }\n\n    /**\n     * @notice Used to change deposit cap for a guarded launch or to ensure\n     * vault doesn't grow too large relative to the pool. Cap is on total\n     * supply rather than amounts of token0 and token1 as those amounts\n     * fluctuate naturally over time.\n     */\n    function setMaxTotalSupply(uint256 _maxTotalSupply) external onlyGovernance {\n        maxTotalSupply = _maxTotalSupply;\n    }\n\n    /**\n     * @notice Removes liquidity in case of emergency.\n     */\n    function emergencyBurn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) external onlyGovernance {\n        pool.burn(tickLower, tickUpper, liquidity);\n        pool.collect(address(this), tickLower, tickUpper, type(uint128).max, type(uint128).max);\n    }\n\n    /**\n     * @notice Governance address is not updated until the new governance\n     * address has called `acceptGovernance()` to accept this responsibility.\n     */\n    function setGovernance(address _governance) external onlyGovernance {\n        pendingGovernance = _governance;\n    }\n\n    /**\n     * @notice `setGovernance()` should be called by the existing governance\n     * address prior to calling this function.\n     */\n    function acceptGovernance() external {\n        require(msg.sender == pendingGovernance, \"pendingGovernance\");\n        governance = msg.sender;\n    }\n\n    modifier onlyGovernance {\n        require(msg.sender == governance, \"governance\");\n        _;\n    }\n}\n",
  "sourceMap": "960:21486:23:-:0;;;2503:514;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2503:514:23;;;;;;;;;;;;1958:145:2;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;;;;;;;;;;;;;;-1:-1:-1;;;1958:145:2;;;;;;;2032:13;;2503:514:23;;;;;;1958:145:2;;;2032:13;;:5;;:13;:::i;:::-;-1:-1:-1;2055:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2082:9:2;:14;;-1:-1:-1;;2082:14:2;2094:2;2082:14;;;-1:-1:-1;2082:14:2;1760:7:7;:22;-1:-1:-1;;;;;;2644:28:23::1;::::0;;;;::::1;::::0;2698:30:::1;::::0;;-1:-1:-1;;;2698:30:23;;;;-1:-1:-1;;;;;2644:28:23;::::1;::::0;2698::::1;::::0;:30:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;2644:28;2698:30;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2698:30:23;2682:47:::1;::::0;-1:-1:-1;;;;;;2682:47:23;::::1;::::0;2755:30:::1;::::0;;-1:-1:-1;;;2755:30:23;;;;-1:-1:-1;;;;;2755:28:23;::::1;::::0;::::1;::::0;:30:::1;::::0;;::::1;::::0;2698::::1;::::0;2755;;;;;;;:28;:30;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2755:30:23;2739:47:::1;::::0;-1:-1:-1;;;;;;2739:47:23;::::1;::::0;2810:35:::1;::::0;;-1:-1:-1;;;2810:35:23;;;;-1:-1:-1;;;;;2810:33:23;::::1;::::0;::::1;::::0;:35:::1;::::0;;::::1;::::0;2755:30:::1;::::0;2810:35;;;;;;;:33;:35;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2810:35:23;2796:49:::1;::::0;;::::1;::::0;::::1;;;;::::0;2856:11:::1;:26:::0;;;2892:14:::1;:32:::0;;;2934:10:::1;:23:::0;;-1:-1:-1;;;;;;2934:23:23::1;2947:10;2934:23;::::0;;2991:3:::1;2976:18:::0;::::1;2968:42;;;::::0;;-1:-1:-1;;;2968:42:23;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2968:42:23;;;;;;;;;;;;;::::1;;2503:514:::0;;;960:21486;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;960:21486:23;;;-1:-1:-1;960:21486:23;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/AlphaVault.sol",
  "type": "contract"
}