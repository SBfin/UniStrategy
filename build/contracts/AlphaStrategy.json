{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_baseThreshold",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_limitThreshold",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        },
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "baseThreshold",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTwap",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRebalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitThreshold",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTwapDeviation",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_baseThreshold",
          "type": "int24"
        }
      ],
      "name": "setBaseThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_limitThreshold",
          "type": "int24"
        }
      ],
      "name": "setLimitThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        }
      ],
      "name": "setMaxTwapDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        }
      ],
      "name": "setTwapDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "twapDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract AlphaVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
    "1": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "10": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
    "11": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
    "12": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
    "13": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
    "14": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "15": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "16": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
    "17": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FixedPoint96.sol",
    "18": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FullMath.sol",
    "19": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
    "2": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "20": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
    "21": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
    "22": "contracts/AlphaStrategy.sol",
    "23": "contracts/AlphaVault.sol",
    "28": "interfaces/IVault.sol",
    "3": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "4": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "6": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "7": "C:/Users/silvi/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "8": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
    "9": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/AlphaStrategy.sol",
    "exportedSymbols": {
      "Address": [
        6135
      ],
      "AlphaStrategy": [
        483
      ],
      "AlphaVault": [
        2303
      ],
      "Context": [
        5839
      ],
      "ERC20": [
        4617
      ],
      "FixedPoint96": [
        6145
      ],
      "FullMath": [
        6318
      ],
      "IERC20": [
        4695
      ],
      "IUniswapV3MintCallback": [
        4962
      ],
      "IUniswapV3Pool": [
        3151
      ],
      "IUniswapV3PoolActions": [
        5492
      ],
      "IUniswapV3PoolDerivedState": [
        5523
      ],
      "IUniswapV3PoolEvents": [
        5642
      ],
      "IUniswapV3PoolImmutables": [
        5682
      ],
      "IUniswapV3PoolOwnerActions": [
        5708
      ],
      "IUniswapV3PoolState": [
        5816
      ],
      "IUniswapV3SwapCallback": [
        4976
      ],
      "IVault": [
        5385
      ],
      "LiquidityAmounts": [
        5316
      ],
      "Math": [
        3759
      ],
      "PositionKey": [
        5341
      ],
      "ReentrancyGuard": [
        4948
      ],
      "SafeERC20": [
        4908
      ],
      "SafeMath": [
        4114
      ],
      "TickMath": [
        3686
      ]
    },
    "id": 484,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:22"
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 484,
        "sourceUnit": 3152,
        "src": "63:66:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/silvi/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 484,
        "sourceUnit": 3687,
        "src": "130:59:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AlphaVault.sol",
        "file": "./AlphaVault.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 484,
        "sourceUnit": 2304,
        "src": "191:26:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "219:1113:22",
          "text": " @title   Alpha Strategy\n @notice  Rebalancing strategy for Alpha Vault that maintains the two\n          following range orders:\n          1. Base order is placed between X - B and X + B + TS.\n          2. Limit order is placed between X - L and X, or between X + TS\n             and X + L + TS, depending on which token it holds more of.\n          where:\n              X = current tick rounded down to multiple of tick spacing\n              TS = tick spacing\n              B = base threshold\n              L = limit threshold\n          Note that after these two orders, the vault should have deposited\n          all its tokens and should only have a few wei left.\n          Because the limit order tries to sell whichever token the vault\n          holds more of, the vault's holdings will have a tendency to get\n          closer to a 1:1 balance. This enables it to continue providing\n          liquidity without running out of inventory of either token, and\n          achieves this without the need to swap directly on Uniswap and pay\n          fees."
        },
        "fullyImplemented": true,
        "id": 483,
        "linearizedBaseContracts": [
          483
        ],
        "name": "AlphaStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fbfa77cf",
            "id": 7,
            "mutability": "immutable",
            "name": "vault",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1362:33:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AlphaVault_$2303",
              "typeString": "contract AlphaVault"
            },
            "typeName": {
              "id": 6,
              "name": "AlphaVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2303,
              "src": "1362:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                "typeString": "contract AlphaVault"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 9,
            "mutability": "immutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1401:36:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 8,
              "name": "IUniswapV3Pool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3151,
              "src": "1401:14:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0c93a7c",
            "id": 11,
            "mutability": "immutable",
            "name": "tickSpacing",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1443:34:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 10,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1443:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87bab9c",
            "id": 13,
            "mutability": "mutable",
            "name": "baseThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1484:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 12,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1484:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16c3e29d",
            "id": 15,
            "mutability": "mutable",
            "name": "limitThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1516:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 14,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1516:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7c7cb91",
            "id": 17,
            "mutability": "mutable",
            "name": "maxTwapDeviation",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1549:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 16,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1549:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "26d89545",
            "id": 19,
            "mutability": "mutable",
            "name": "twapDuration",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1584:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 18,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1584:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aced1661",
            "id": 21,
            "mutability": "mutable",
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1616:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1616:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "106b9ca1",
            "id": 23,
            "mutability": "mutable",
            "name": "lastRebalance",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1644:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1644:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3dfa5d87",
            "id": 25,
            "mutability": "mutable",
            "name": "lastTick",
            "nodeType": "VariableDeclaration",
            "scope": 483,
            "src": "1678:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 24,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1678:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "2291:676:22",
              "statements": [
                {
                  "assignments": [
                    42
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "_pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "2301:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "IUniswapV3Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3151,
                        "src": "2301:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 44,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "2335:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 43,
                          "name": "AlphaVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2303,
                          "src": "2324:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AlphaVault_$2303_$",
                            "typeString": "type(contract AlphaVault)"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2324:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlphaVault_$2303",
                          "typeString": "contract AlphaVault"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 561,
                      "src": "2324:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IUniswapV3Pool_$3151_$",
                        "typeString": "function () view external returns (contract IUniswapV3Pool)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2301:48:22"
                },
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "_tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "2359:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "2359:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 51,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2380:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tickSpacing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "2380:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                        "typeString": "function () view external returns (int24)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:19:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2359:40:22"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2410:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlphaVault_$2303",
                        "typeString": "contract AlphaVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 57,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "2429:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56,
                        "name": "AlphaVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2303,
                        "src": "2418:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AlphaVault_$2303_$",
                          "typeString": "type(contract AlphaVault)"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2418:18:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlphaVault_$2303",
                        "typeString": "contract AlphaVault"
                      }
                    },
                    "src": "2410:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AlphaVault_$2303",
                      "typeString": "contract AlphaVault"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "2410:26:22"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2446:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2453:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "2446:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "2446:12:22"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2468:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66,
                      "name": "_tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "2482:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2468:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:26:22"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "2505:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2521:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2505:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:30:22"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2545:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2562:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2545:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:32:22"
                },
                {
                  "expression": {
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 77,
                      "name": "maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "2587:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78,
                      "name": "_maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2606:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2587:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:36:22"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 81,
                      "name": "twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2633:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2648:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2633:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:28:22"
                },
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "2671:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2680:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2671:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:16:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "2714:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 91,
                        "name": "_tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "2730:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 89,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "2698:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2698:45:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:45:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2769:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 96,
                        "name": "_tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "2786:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 94,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "2753:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2753:46:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "2753:46:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100,
                          "name": "_maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "2817:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2837:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2817:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2809:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2809:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:50:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 107,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2877:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2893:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2877:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747761704475726174696f6e",
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2896:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        },
                        "value": "twapDuration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2869:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2869:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:42:22"
                },
                {
                  "expression": {
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 113,
                          "name": "lastTick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "2925:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 114,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2922:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
                        "typeString": "tuple(,int24,,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 115,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2947:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5729,
                        "src": "2947:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2947:13:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "src": "2922:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:38:22"
                }
              ]
            },
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "1706:389:22",
              "text": " @param _vault Underlying Alpha Vault\n @param _baseThreshold Used to determine base order range\n @param _limitThreshold Used to determine limit order range\n @param _maxTwapDeviation Max deviation from TWAP during rebalance\n @param _twapDuration TWAP duration in seconds for rebalance check\n @param _keeper Account that can call `rebalance()`"
            },
            "id": 121,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2121:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_baseThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2145:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2145:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_limitThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2175:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "_maxTwapDeviation",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2206:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "_twapDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2239:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "2269:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2269:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2111:179:22"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2291:0:22"
            },
            "scope": 483,
            "src": "2100:867:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "3174:1407:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3192:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3192:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "3206:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3192:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6b6565706572",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3214:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        },
                        "value": "keeper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3184:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3184:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "3184:39:22"
                },
                {
                  "assignments": [
                    134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "_baseThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "3234:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3234:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136,
                  "initialValue": {
                    "id": 135,
                    "name": "baseThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "3257:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3234:36:22"
                },
                {
                  "assignments": [
                    138
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138,
                      "mutability": "mutable",
                      "name": "_limitThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "3280:21:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3280:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "id": 139,
                    "name": "limitThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "3304:14:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3280:38:22"
                },
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "tick",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "3485:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3485:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 143,
                      "name": "getTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "3498:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int24_$",
                        "typeString": "function () view returns (int24)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:9:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3485:22:22"
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "maxThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "3517:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3517:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 148,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "3550:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 149,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "3567:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3550:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 152,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138,
                      "src": "3602:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3550:67:22",
                    "trueExpression": {
                      "id": 151,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "3585:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3517:100:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 156,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3635:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 157,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3686,
                                "src": "3642:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MIN_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3159,
                              "src": "3642:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 159,
                              "name": "maxThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "3662:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "3642:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 161,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3677:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3642:46:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3635:53:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b20746f6f206c6f77",
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3690:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cb156c643e8cd3b45577b85d6b5d19199f42d422facd129dca4f0074689ac99",
                          "typeString": "literal_string \"tick too low\""
                        },
                        "value": "tick too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2cb156c643e8cd3b45577b85d6b5d19199f42d422facd129dca4f0074689ac99",
                          "typeString": "literal_string \"tick too low\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3627:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:78:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:78:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 168,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3723:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 169,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3686,
                                "src": "3730:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MAX_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3164,
                              "src": "3730:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 171,
                              "name": "maxThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "3750:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "3730:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 173,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3765:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3730:46:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3723:53:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b20746f6f2068696768",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3778:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1098925fe2674faf660232cdefa7e9950f36e5a5c80a9a62da9e887a94f892d7",
                          "typeString": "literal_string \"tick too high\""
                        },
                        "value": "tick too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1098925fe2674faf660232cdefa7e9950f36e5a5c80a9a62da9e887a94f892d7",
                          "typeString": "literal_string \"tick too high\""
                        }
                      ],
                      "id": 167,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3715:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:79:22"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "twap",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "3988:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3988:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 183,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 181,
                      "name": "getTwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "4001:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int24_$",
                        "typeString": "function () view returns (int24)"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4001:9:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3988:22:22"
                },
                {
                  "assignments": [
                    185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 185,
                      "mutability": "mutable",
                      "name": "deviation",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "4020:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 184,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4020:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 186,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4038:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 187,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4045:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "4038:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 192,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4066:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 193,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4073:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "4066:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4038:39:22",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 189,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4052:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 190,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "4059:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "4052:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4020:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 198,
                          "name": "deviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "4095:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 199,
                          "name": "maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "4108:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4095:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4126:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4087:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4087:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "4087:58:22"
                },
                {
                  "assignments": [
                    205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 205,
                      "mutability": "mutable",
                      "name": "tickFloor",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "4156:15:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 204,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4156:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 209,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 207,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4181:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 206,
                      "name": "_floor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "4174:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$_t_int24_$",
                        "typeString": "function (int24) view returns (int24)"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4174:12:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4156:30:22"
                },
                {
                  "assignments": [
                    211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "tickCeil",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "4196:14:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 210,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4196:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 215,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 212,
                      "name": "tickFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "4213:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 213,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "4225:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "4213:23:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4196:40:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4276:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4291:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 221,
                          "name": "tickFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "4306:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 222,
                          "name": "_baseThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "4318:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4306:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 224,
                          "name": "tickCeil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "4346:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 225,
                          "name": "_baseThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "4357:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4346:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 227,
                          "name": "tickFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "4385:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 228,
                          "name": "_limitThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "4397:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4385:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 230,
                        "name": "tickFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "4426:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 231,
                        "name": "tickCeil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4449:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 232,
                          "name": "tickCeil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 211,
                          "src": "4471:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 233,
                          "name": "_limitThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "4482:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4471:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "expression": {
                        "id": 216,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "4247:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlphaVault_$2303",
                          "typeString": "contract AlphaVault"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rebalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1475,
                      "src": "4247:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_uint160_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int256,uint160,int24,int24,int24,int24,int24,int24) external"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4247:260:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "4247:260:22"
                },
                {
                  "expression": {
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 237,
                      "name": "lastRebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4518:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 238,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4534:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4534:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4518:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "4518:31:22"
                },
                {
                  "expression": {
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 242,
                      "name": "lastTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "4559:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 243,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "4570:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "4559:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 245,
                  "nodeType": "ExpressionStatement",
                  "src": "4559:15:22"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "2973:166:22",
              "text": " @notice Calculates new ranges for orders and calls `vault.rebalance()`\n so that vault can update its positions. Can only be called by keeper."
            },
            "functionSelector": "7d7c2a1c",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3162:2:22"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3174:0:22"
            },
            "scope": 483,
            "src": "3144:1437:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "4702:50:22",
              "statements": [
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 253,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 251,
                          "src": "4715:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 254,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4712:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
                        "typeString": "tuple(,int24,,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 255,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "4733:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5729,
                        "src": "4733:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4733:12:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "src": "4712:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4712:33:22"
                }
              ]
            },
            "documentation": {
              "id": 248,
              "nodeType": "StructuredDocumentation",
              "src": "4587:58:22",
              "text": "@dev Fetches current price in ticks from Uniswap pool."
            },
            "functionSelector": "df8ad814",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4666:2:22"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "4690:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4690:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4689:12:22"
            },
            "scope": 483,
            "src": "4650:102:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "4882:325:22",
              "statements": [
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "_twapDuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "4892:20:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4892:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "id": 269,
                    "name": "twapDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "4915:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4892:35:22"
                },
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "secondsAgo",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "4937:26:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 273,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4937:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 274,
                        "nodeType": "ArrayTypeName",
                        "src": "4937:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 281,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4979:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4966:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 276,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4970:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 277,
                        "nodeType": "ArrayTypeName",
                        "src": "4970:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4966:15:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4937:44:22"
                },
                {
                  "expression": {
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 282,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "4991:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 284,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5002:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4991:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 285,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "5007:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4991:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 287,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:29:22"
                },
                {
                  "expression": {
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 288,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5030:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 290,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5041:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5030:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5046:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5030:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "5030:17:22"
                },
                {
                  "assignments": [
                    298,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 298,
                      "mutability": "mutable",
                      "name": "tickCumulatives",
                      "nodeType": "VariableDeclaration",
                      "scope": 318,
                      "src": "5059:30:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 296,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "5059:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 297,
                        "nodeType": "ArrayTypeName",
                        "src": "5059:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 303,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 301,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5108:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 299,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5095:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$3151",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5508,
                      "src": "5095:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5095:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5058:61:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 306,
                                  "name": "tickCumulatives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "5143:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                                    "typeString": "int56[] memory"
                                  }
                                },
                                "id": 308,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5159:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5143:18:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int56",
                                  "typeString": "int56"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 309,
                                  "name": "tickCumulatives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 298,
                                  "src": "5164:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                                    "typeString": "int56[] memory"
                                  }
                                },
                                "id": 311,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5180:1:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5164:18:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int56",
                                  "typeString": "int56"
                                }
                              },
                              "src": "5143:39:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              }
                            }
                          ],
                          "id": 313,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5142:41:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 314,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "5186:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "5142:57:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5136:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 304,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5136:5:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "functionReturnParameters": 266,
                  "id": 317,
                  "nodeType": "Return",
                  "src": "5129:71:22"
                }
              ]
            },
            "documentation": {
              "id": 262,
              "nodeType": "StructuredDocumentation",
              "src": "4758:72:22",
              "text": "@dev Fetches time-weighted average price in ticks from Uniswap pool."
            },
            "functionSelector": "5d752a9a",
            "id": 319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4851:2:22"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 319,
                  "src": "4875:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4875:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4874:7:22"
            },
            "scope": 483,
            "src": "4835:372:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 350,
              "nodeType": "Block",
              "src": "5377:158:22",
              "statements": [
                {
                  "assignments": [
                    328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 328,
                      "mutability": "mutable",
                      "name": "compressed",
                      "nodeType": "VariableDeclaration",
                      "scope": 350,
                      "src": "5387:16:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 327,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5387:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 332,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 329,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 322,
                      "src": "5406:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 330,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "5413:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5406:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5387:37:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 333,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "5438:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5445:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5438:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 336,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "5450:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "id": 337,
                          "name": "tickSpacing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "5457:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "5450:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5472:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5450:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5438:35:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 345,
                  "nodeType": "IfStatement",
                  "src": "5434:53:22",
                  "trueBody": {
                    "expression": {
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "5475:12:22",
                      "subExpression": {
                        "id": 342,
                        "name": "compressed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "5475:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 344,
                    "nodeType": "ExpressionStatement",
                    "src": "5475:12:22"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 346,
                      "name": "compressed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "5504:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 347,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "5517:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5504:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "functionReturnParameters": 326,
                  "id": 349,
                  "nodeType": "Return",
                  "src": "5497:31:22"
                }
              ]
            },
            "documentation": {
              "id": 320,
              "nodeType": "StructuredDocumentation",
              "src": "5213:101:22",
              "text": "@dev Rounds tick down towards negative infinity so that it's a multiple\n of `tickSpacing`."
            },
            "id": 351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_floor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "5335:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5335:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5334:12:22"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 351,
                  "src": "5370:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5370:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5369:7:22"
            },
            "scope": 483,
            "src": "5319:216:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "5617:202:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 359,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "5635:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5647:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5635:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c64203e2030",
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5650:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df0fb30611522b7d3d493d2ba0f45b0b93bc4a4d756948f06feb03ce263eb5ea",
                          "typeString": "literal_string \"threshold > 0\""
                        },
                        "value": "threshold > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df0fb30611522b7d3d493d2ba0f45b0b93bc4a4d756948f06feb03ce263eb5ea",
                          "typeString": "literal_string \"threshold > 0\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5627:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5627:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "5627:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 366,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 353,
                          "src": "5684:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 367,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3686,
                            "src": "5697:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$3686_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3164,
                          "src": "5697:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "5684:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c6420746f6f2068696768",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5716:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e07434090274a7b8a40b387d12d4995efc5241fc0eba573044505275ac4c6f",
                          "typeString": "literal_string \"threshold too high\""
                        },
                        "value": "threshold too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e07434090274a7b8a40b387d12d4995efc5241fc0eba573044505275ac4c6f",
                          "typeString": "literal_string \"threshold too high\""
                        }
                      ],
                      "id": 365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5676:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5676:61:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "5676:61:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 374,
                            "name": "threshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "5755:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 375,
                            "name": "_tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "5767:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "5755:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5783:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5755:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c642025207469636b53706163696e67",
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5786:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17d46e051321492bc0005d031877507de1a7bdc865b1b762f49073fc9fc9aae5",
                          "typeString": "literal_string \"threshold % tickSpacing\""
                        },
                        "value": "threshold % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17d46e051321492bc0005d031877507de1a7bdc865b1b762f49073fc9fc9aae5",
                          "typeString": "literal_string \"threshold % tickSpacing\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5747:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5747:65:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "5747:65:22"
                }
              ]
            },
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "5566:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5566:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "_tickSpacing",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "5583:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5583:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5565:37:22"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5617:0:22"
            },
            "scope": 483,
            "src": "5541:278:22",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "5885:33:22",
              "statements": [
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 390,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "5895:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 391,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 385,
                      "src": "5904:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5895:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "5895:16:22"
                }
              ]
            },
            "functionSelector": "748747e6",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 388,
                "modifierName": {
                  "id": 387,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 482,
                  "src": "5870:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5870:14:22"
              }
            ],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5844:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5844:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5843:17:22"
            },
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5885:0:22"
            },
            "scope": 483,
            "src": "5825:93:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "5996:101:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 403,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 397,
                        "src": "6022:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 404,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "6038:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 402,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "6006:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6006:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "6006:44:22"
                },
                {
                  "expression": {
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 407,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "6060:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 408,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "6076:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6060:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "6060:30:22"
                }
              ]
            },
            "functionSelector": "a6329355",
            "id": 412,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 400,
                "modifierName": {
                  "id": 399,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 482,
                  "src": "5981:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5981:14:22"
              }
            ],
            "name": "setBaseThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 397,
                  "mutability": "mutable",
                  "name": "_baseThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "5950:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 396,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5949:22:22"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5996:0:22"
            },
            "scope": 483,
            "src": "5924:173:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "6177:104:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 420,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "6203:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 421,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "6220:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 419,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 383,
                      "src": "6187:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:45:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:45:22"
                },
                {
                  "expression": {
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 424,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "6242:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 425,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 414,
                      "src": "6259:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6242:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:32:22"
                }
              ]
            },
            "functionSelector": "af794480",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 417,
                "modifierName": {
                  "id": 416,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 482,
                  "src": "6162:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6162:14:22"
              }
            ],
            "name": "setLimitThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "_limitThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "6130:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6130:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6129:23:22"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6177:0:22"
            },
            "scope": 483,
            "src": "6103:178:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "6365:113:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 437,
                          "name": "_maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "6383:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6403:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6383:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6406:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6375:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6375:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "6375:50:22"
                },
                {
                  "expression": {
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 443,
                      "name": "maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "6435:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 444,
                      "name": "_maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 431,
                      "src": "6454:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6435:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 446,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:36:22"
                }
              ]
            },
            "functionSelector": "3cbff3fe",
            "id": 448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 434,
                "modifierName": {
                  "id": 433,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 482,
                  "src": "6350:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6350:14:22"
              }
            ],
            "name": "setMaxTwapDeviation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "_maxTwapDeviation",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "6316:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6316:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6315:25:22"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6365:0:22"
            },
            "scope": 483,
            "src": "6287:191:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "6555:97:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 456,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 450,
                          "src": "6573:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6589:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6573:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747761704475726174696f6e",
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6592:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        },
                        "value": "twapDuration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        }
                      ],
                      "id": 455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6565:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 461,
                  "nodeType": "ExpressionStatement",
                  "src": "6565:42:22"
                },
                {
                  "expression": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 462,
                      "name": "twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "6617:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 463,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "6632:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6617:28:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 465,
                  "nodeType": "ExpressionStatement",
                  "src": "6617:28:22"
                }
              ]
            },
            "functionSelector": "c433c80a",
            "id": 467,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 453,
                "modifierName": {
                  "id": 452,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 482,
                  "src": "6540:14:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6540:14:22"
              }
            ],
            "name": "setTwapDuration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "_twapDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "6509:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6509:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6508:22:22"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6555:0:22"
            },
            "scope": 483,
            "src": "6484:168:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "6737:83:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 471,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6755:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6755:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 473,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "6769:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                "typeString": "contract AlphaVault"
                              }
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 575,
                            "src": "6769:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6769:18:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6755:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e6365",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6789:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        },
                        "value": "governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        }
                      ],
                      "id": 470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6747:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:55:22"
                },
                {
                  "id": 480,
                  "nodeType": "PlaceholderStatement",
                  "src": "6812:1:22"
                }
              ]
            },
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "6658:50:22",
              "text": "@dev Uses same governance as underlying vault."
            },
            "id": 482,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:0:22"
            },
            "src": "6713:107:22",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 484,
        "src": "1333:5489:22"
      }
    ],
    "src": "39:6784:22"
  },
  "bytecode": "60e06040523480156200001157600080fd5b506040516200165d3803806200165d833981810160405260c08110156200003757600080fd5b5080516020808301516040808501516060860151608087015160a09097015183516316f0115b60e01b8152935196979496929591949390926000926001600160a01b038a16926316f0115b9260048083019392829003018186803b1580156200009f57600080fd5b505afa158015620000b4573d6000803e3d6000fd5b505050506040513d6020811015620000cb57600080fd5b5051604080516334324e9f60e21b815290519192506000916001600160a01b0384169163d0c93a7c916004808301926020929190829003018186803b1580156200011457600080fd5b505afa15801562000129573d6000803e3d6000fd5b505050506040513d60208110156200014057600080fd5b81019080805190602001909291905050509050876001600160a01b03166080816001600160a01b031660601b81525050816001600160a01b031660a0816001600160a01b031660601b815250508060020b60c08160020b60e81b81525050866000806101000a81548162ffffff021916908360020b62ffffff16021790555085600060036101000a81548162ffffff021916908360020b62ffffff16021790555084600060066101000a81548162ffffff021916908360020b62ffffff16021790555083600060096101000a81548163ffffffff021916908363ffffffff16021790555082600160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506200025d87826200039760201b60201c565b62000269868262000397565b60008560020b13620002b5576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b60008463ffffffff161162000300576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156200033a57600080fd5b505afa1580156200034f573d6000803e3d6000fd5b505050506040513d60e08110156200036657600080fd5b50602001516003805460029290920b62ffffff1662ffffff19909216919091179055506200049d9650505050505050565b60008260020b13620003e0576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600283900b131562000432576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b8060020b8260020b816200044257fe5b0760020b1562000499576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b5050565b60805160601c60a05160601c60c05160e81c61113a620005236000398061085252806108c352806109f45280610bae5280610cdd5280610e6f5280610f5c5280610f9c5280610fdc5250806102a452806104d15280610e955250806102db52806106e25280610a555280610adc5280610c0b5280610d2b5280610f35525061113a6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a6329355116100a2578063c433c80a11610071578063c433c80a14610249578063d0c93a7c1461026c578063df8ad81414610274578063e7c7cb911461027c578063fbfa77cf1461028457610116565b8063a6329355146101f9578063a87bab9c14610219578063aced166114610221578063af7944801461022957610116565b80633cbff3fe116100e95780633cbff3fe146101995780633dfa5d87146101bb5780635d752a9a146101c3578063748747e6146101cb5780637d7c2a1c146101f157610116565b8063106b9ca11461011b57806316c3e29d1461013557806316f0115b1461015457806326d8954514610178575b600080fd5b61012361028c565b60408051918252519081900360200190f35b61013d610292565b6040805160029290920b8252519081900360200190f35b61015c6102a2565b604080516001600160a01b039092168252519081900360200190f35b6101806102c6565b6040805163ffffffff9092168252519081900360200190f35b6101b9600480360360208110156101af57600080fd5b503560020b6102d9565b005b61013d610420565b61013d610429565b6101b9600480360360208110156101e157600080fd5b50356001600160a01b03166106e0565b6101b96107d0565b6101b96004803603602081101561020f57600080fd5b503560020b610ada565b61013d610bf1565b61015c610bfa565b6101b96004803603602081101561023f57600080fd5b503560020b610c09565b6101b96004803603602081101561025f57600080fd5b503563ffffffff16610d29565b61013d610e6d565b61013d610e91565b61013d610f20565b61015c610f33565b60025481565b6000546301000000900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160481b900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d602081101561035c57600080fd5b50516001600160a01b031633146103a7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008160020b136103f2576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b6000805460029290920b62ffffff1666010000000000000268ffffff00000000000019909216919091179055565b60035460020b81565b60008054604080516002808252606082018352600160481b90930463ffffffff16928492602083019080368337019050509050818160008151811061046a57fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061049357fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b8152600481018281528351602483015283516000936001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169363883bdbfd938793909283926044019185820191028083838b5b8381101561052457818101518382015260200161050c565b505050509050019250505060006040518083038186803b15801561054757600080fd5b505afa15801561055b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561058457600080fd5b81019080805160405193929190846401000000008211156105a457600080fd5b9083019060208201858111156105b957600080fd5b82518660208202830111640100000000821117156105d657600080fd5b82525081516020918201928201910280838360005b838110156106035781810151838201526020016105eb565b505050509050016040526020018051604051939291908464010000000082111561062c57600080fd5b90830190602082018581111561064157600080fd5b825186602082028301116401000000008211171561065e57600080fd5b82525081516020918201928201910280838360005b8381101561068b578181015183820152602001610673565b505050509050016040525050505090508263ffffffff16816000815181106106af57fe5b6020026020010151826001815181106106c457fe5b60200260200101510360060b816106d757fe5b05935050505090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50516001600160a01b031633146107ae576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610818576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b60008054600281810b926301000000909204900b90610835610e91565b905060008260020b8460020b1361084c578261084e565b835b90507f000000000000000000000000000000000000000000000000000000000000000081620d89e719010160020b8260020b136108c1576040805162461bcd60e51b815260206004820152600c60248201526b7469636b20746f6f206c6f7760a01b604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000081620d89e719600003030360020b8260020b12610936576040805162461bcd60e51b815260206004820152600d60248201526c0e8d2c6d640e8dede40d0d2ced609b1b604482015290519081900360640190fd5b6000610940610429565b905060008160020b8460020b136109595783820361095d565b8184035b9050600060069054906101000a900460020b60020b8160020b13156109bc576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b60006109c785610f57565b604080516387e5e08360e01b8152600060048201819052602482018190528a8403600290810b60448401527f000000000000000000000000000000000000000000000000000000000000000085018c8101820b60648501528b8603820b608485015285820b60a485015280820b60c48501528b810190910b60e4840152925193945091926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926387e5e08392610104808201939182900301818387803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b50504260029081556003805462ffffff191662ffffff9a90920b9990991617909755505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d6020811015610b5d57600080fd5b50516001600160a01b03163314610ba8576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610bd2817f0000000000000000000000000000000000000000000000000000000000000000611002565b6000805460029290920b62ffffff1662ffffff19909216919091179055565b60005460020b81565b6001546001600160a01b031681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6257600080fd5b505afa158015610c76573d6000803e3d6000fd5b505050506040513d6020811015610c8c57600080fd5b50516001600160a01b03163314610cd7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610d01817f0000000000000000000000000000000000000000000000000000000000000000611002565b6000805460029290920b62ffffff1663010000000265ffffff00000019909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8257600080fd5b505afa158015610d96573d6000803e3d6000fd5b505050506040513d6020811015610dac57600080fd5b50516001600160a01b03163314610df7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008163ffffffff1611610e41576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b6000805463ffffffff909216600160481b026cffffffff00000000000000000019909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610eec57600080fd5b505afa158015610f00573d6000803e3d6000fd5b505050506040513d60e0811015610f1657600080fd5b5060200151919050565b6000546601000000000000900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f000000000000000000000000000000000000000000000000000000000000000060020b8360020b81610f8957fe5b05905060008360020b128015610fd057507f000000000000000000000000000000000000000000000000000000000000000060020b8360020b81610fc957fe5b0760020b15155b15610fda57600019015b7f00000000000000000000000000000000000000000000000000000000000000000292915050565b60008260020b1361104a576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600283900b131561109b576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b8060020b8260020b816110aa57fe5b0760020b15611100576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b505056fea2646970667358221220ea8bf0bb1df229a76c0c053e8d5b9b0e308d090cd08a9c286269d6be41a32caa64736f6c63430007060033",
  "bytecodeSha1": "b58fcba327e3a73a596c47521ee02d5b711c24a9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "AlphaStrategy",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "22": {
        "AlphaStrategy._checkThreshold": {
          "35": [
            5635,
            5648,
            true
          ],
          "36": [
            5684,
            5714,
            true
          ],
          "37": [
            5755,
            5784,
            true
          ]
        },
        "AlphaStrategy._floor": {
          "33": [
            5438,
            5446,
            false
          ],
          "34": [
            5450,
            5473,
            false
          ]
        },
        "AlphaStrategy.rebalance": {
          "26": [
            3192,
            3212,
            true
          ],
          "27": [
            3550,
            3582,
            true
          ],
          "28": [
            3635,
            3688,
            true
          ],
          "29": [
            3723,
            3776,
            true
          ],
          "30": [
            4038,
            4049,
            true
          ],
          "31": [
            4095,
            4124,
            true
          ]
        },
        "AlphaStrategy.setMaxTwapDeviation": {
          "25": [
            6383,
            6404,
            true
          ]
        },
        "AlphaStrategy.setTwapDuration": {
          "32": [
            6573,
            6590,
            true
          ]
        }
      },
      "23": {},
      "28": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "22": {
        "AlphaStrategy._checkThreshold": {
          "22": [
            5627,
            5666
          ],
          "23": [
            5676,
            5737
          ],
          "24": [
            5747,
            5812
          ]
        },
        "AlphaStrategy._floor": {
          "20": [
            5475,
            5487
          ],
          "21": [
            5497,
            5528
          ]
        },
        "AlphaStrategy.getTick": {
          "19": [
            4712,
            4745
          ]
        },
        "AlphaStrategy.getTwap": {
          "2": [
            4991,
            5020
          ],
          "3": [
            5030,
            5047
          ],
          "4": [
            5129,
            5200
          ]
        },
        "AlphaStrategy.rebalance": {
          "6": [
            3184,
            3223
          ],
          "7": [
            3627,
            3705
          ],
          "8": [
            3715,
            3794
          ],
          "9": [
            4087,
            4145
          ],
          "10": [
            4247,
            4507
          ],
          "11": [
            4518,
            4549
          ],
          "12": [
            4559,
            4574
          ]
        },
        "AlphaStrategy.setBaseThreshold": {
          "13": [
            6006,
            6050
          ],
          "14": [
            6060,
            6090
          ]
        },
        "AlphaStrategy.setKeeper": {
          "5": [
            5895,
            5911
          ]
        },
        "AlphaStrategy.setLimitThreshold": {
          "15": [
            6187,
            6232
          ],
          "16": [
            6242,
            6274
          ]
        },
        "AlphaStrategy.setMaxTwapDeviation": {
          "0": [
            6375,
            6425
          ],
          "1": [
            6435,
            6471
          ]
        },
        "AlphaStrategy.setTwapDuration": {
          "17": [
            6565,
            6607
          ],
          "18": [
            6617,
            6645
          ]
        }
      },
      "23": {},
      "28": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AlphaVault",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "Uniswap/uniswap-v3-core@1.0.0/FixedPoint96",
    "Uniswap/uniswap-v3-core@1.0.0/FullMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3SwapCallback",
    "IVault",
    "Uniswap/uniswap-v3-periphery@1.0.0/LiquidityAmounts",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Math",
    "Uniswap/uniswap-v3-periphery@1.0.0/PositionKey",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "Uniswap/uniswap-v3-core@1.0.0/TickMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063a6329355116100a2578063c433c80a11610071578063c433c80a14610249578063d0c93a7c1461026c578063df8ad81414610274578063e7c7cb911461027c578063fbfa77cf1461028457610116565b8063a6329355146101f9578063a87bab9c14610219578063aced166114610221578063af7944801461022957610116565b80633cbff3fe116100e95780633cbff3fe146101995780633dfa5d87146101bb5780635d752a9a146101c3578063748747e6146101cb5780637d7c2a1c146101f157610116565b8063106b9ca11461011b57806316c3e29d1461013557806316f0115b1461015457806326d8954514610178575b600080fd5b61012361028c565b60408051918252519081900360200190f35b61013d610292565b6040805160029290920b8252519081900360200190f35b61015c6102a2565b604080516001600160a01b039092168252519081900360200190f35b6101806102c6565b6040805163ffffffff9092168252519081900360200190f35b6101b9600480360360208110156101af57600080fd5b503560020b6102d9565b005b61013d610420565b61013d610429565b6101b9600480360360208110156101e157600080fd5b50356001600160a01b03166106e0565b6101b96107d0565b6101b96004803603602081101561020f57600080fd5b503560020b610ada565b61013d610bf1565b61015c610bfa565b6101b96004803603602081101561023f57600080fd5b503560020b610c09565b6101b96004803603602081101561025f57600080fd5b503563ffffffff16610d29565b61013d610e6d565b61013d610e91565b61013d610f20565b61015c610f33565b60025481565b6000546301000000900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160481b900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d602081101561035c57600080fd5b50516001600160a01b031633146103a7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008160020b136103f2576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b6000805460029290920b62ffffff1666010000000000000268ffffff00000000000019909216919091179055565b60035460020b81565b60008054604080516002808252606082018352600160481b90930463ffffffff16928492602083019080368337019050509050818160008151811061046a57fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061049357fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b8152600481018281528351602483015283516000936001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169363883bdbfd938793909283926044019185820191028083838b5b8381101561052457818101518382015260200161050c565b505050509050019250505060006040518083038186803b15801561054757600080fd5b505afa15801561055b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561058457600080fd5b81019080805160405193929190846401000000008211156105a457600080fd5b9083019060208201858111156105b957600080fd5b82518660208202830111640100000000821117156105d657600080fd5b82525081516020918201928201910280838360005b838110156106035781810151838201526020016105eb565b505050509050016040526020018051604051939291908464010000000082111561062c57600080fd5b90830190602082018581111561064157600080fd5b825186602082028301116401000000008211171561065e57600080fd5b82525081516020918201928201910280838360005b8381101561068b578181015183820152602001610673565b505050509050016040525050505090508263ffffffff16816000815181106106af57fe5b6020026020010151826001815181106106c457fe5b60200260200101510360060b816106d757fe5b05935050505090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50516001600160a01b031633146107ae576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610818576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b60008054600281810b926301000000909204900b90610835610e91565b905060008260020b8460020b1361084c578261084e565b835b90507f000000000000000000000000000000000000000000000000000000000000000081620d89e719010160020b8260020b136108c1576040805162461bcd60e51b815260206004820152600c60248201526b7469636b20746f6f206c6f7760a01b604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000081620d89e719600003030360020b8260020b12610936576040805162461bcd60e51b815260206004820152600d60248201526c0e8d2c6d640e8dede40d0d2ced609b1b604482015290519081900360640190fd5b6000610940610429565b905060008160020b8460020b136109595783820361095d565b8184035b9050600060069054906101000a900460020b60020b8160020b13156109bc576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b60006109c785610f57565b604080516387e5e08360e01b8152600060048201819052602482018190528a8403600290810b60448401527f000000000000000000000000000000000000000000000000000000000000000085018c8101820b60648501528b8603820b608485015285820b60a485015280820b60c48501528b810190910b60e4840152925193945091926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926387e5e08392610104808201939182900301818387803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b50504260029081556003805462ffffff191662ffffff9a90920b9990991617909755505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d6020811015610b5d57600080fd5b50516001600160a01b03163314610ba8576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610bd2817f0000000000000000000000000000000000000000000000000000000000000000611002565b6000805460029290920b62ffffff1662ffffff19909216919091179055565b60005460020b81565b6001546001600160a01b031681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6257600080fd5b505afa158015610c76573d6000803e3d6000fd5b505050506040513d6020811015610c8c57600080fd5b50516001600160a01b03163314610cd7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b610d01817f0000000000000000000000000000000000000000000000000000000000000000611002565b6000805460029290920b62ffffff1663010000000265ffffff00000019909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8257600080fd5b505afa158015610d96573d6000803e3d6000fd5b505050506040513d6020811015610dac57600080fd5b50516001600160a01b03163314610df7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008163ffffffff1611610e41576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b6000805463ffffffff909216600160481b026cffffffff00000000000000000019909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610eec57600080fd5b505afa158015610f00573d6000803e3d6000fd5b505050506040513d60e0811015610f1657600080fd5b5060200151919050565b6000546601000000000000900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f000000000000000000000000000000000000000000000000000000000000000060020b8360020b81610f8957fe5b05905060008360020b128015610fd057507f000000000000000000000000000000000000000000000000000000000000000060020b8360020b81610fc957fe5b0760020b15155b15610fda57600019015b7f00000000000000000000000000000000000000000000000000000000000000000292915050565b60008260020b1361104a576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600283900b131561109b576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b8060020b8260020b816110aa57fe5b0760020b15611100576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b505056fea2646970667358221220ea8bf0bb1df229a76c0c053e8d5b9b0e308d090cd08a9c286269d6be41a32caa64736f6c63430007060033",
  "deployedSourceMap": "1333:5489:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1644:28;;;:::i;:::-;;;;;;;;;;;;;;;;1516:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1401:36;;;:::i;:::-;;;;-1:-1:-1;;;;;1401:36:22;;;;;;;;;;;;;;1584:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6287:191;;;;;;;;;;;;;;;;-1:-1:-1;6287:191:22;;;;:::i;:::-;;1678:21;;;:::i;4835:372::-;;;:::i;5825:93::-;;;;;;;;;;;;;;;;-1:-1:-1;5825:93:22;-1:-1:-1;;;;;5825:93:22;;:::i;3144:1437::-;;;:::i;5924:173::-;;;;;;;;;;;;;;;;-1:-1:-1;5924:173:22;;;;:::i;1484:26::-;;;:::i;1616:21::-;;;:::i;6103:178::-;;;;;;;;;;;;;;;;-1:-1:-1;6103:178:22;;;;:::i;6484:168::-;;;;;;;;;;;;;;;;-1:-1:-1;6484:168:22;;;;:::i;1443:34::-;;;:::i;4650:102::-;;;:::i;1549:29::-;;;:::i;1362:33::-;;;:::i;1644:28::-;;;;:::o;1516:27::-;;;;;;;;;:::o;1401:36::-;;;:::o;1584:26::-;;;-1:-1:-1;;;1584:26:22;;;;;:::o;6287:191::-;6769:5;-1:-1:-1;;;;;6769:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:22;-1:-1:-1;;;;;6755:32:22;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;;;;6403:1:::1;6383:17;:21;;;6375:50;;;::::0;;-1:-1:-1;;;6375:50:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6375:50:22;;;;;;;;;;;;;::::1;;6435:16;:36:::0;;::::1;::::0;;;::::1;;;::::0;::::1;-1:-1:-1::0;;6435:36:22;;::::1;::::0;;;::::1;::::0;;6287:191::o;1678:21::-;;;;;;:::o;4835:372::-;4875:5;4915:12;;4966:15;;;4979:1;4966:15;;;;;;;;-1:-1:-1;;;4915:12:22;;;;;;4875:5;;4966:15;;;;;;;;;;-1:-1:-1;4966:15:22;4937:44;;5007:13;4991:10;5002:1;4991:13;;;;;;;;;;;;;:29;;;;;;;;;;;5046:1;5030:10;5041:1;5030:13;;;;;;;;:17;;;;:13;;;;;;;;;;:17;5095:24;;-1:-1:-1;;;5095:24:22;;;;;;;;;;;;;;;;5059:30;;-1:-1:-1;;;;;5095:4:22;:12;;;;5108:10;;5095:24;;;;;;;;;;;;;;;5059:30;5095:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5095:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5095:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5095:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:61;;;5186:13;5142:57;;5164:15;5180:1;5164:18;;;;;;;;;;;;;;5143:15;5159:1;5143:18;;;;;;;;;;;;;;:39;5142:57;;;;;;;;5129:71;;;;;4835:372;:::o;5825:93::-;6769:5;-1:-1:-1;;;;;6769:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:22;-1:-1:-1;;;;;6755:32:22;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;;;;5895:6:::1;:16:::0;;-1:-1:-1;;;;;;5895:16:22::1;-1:-1:-1::0;;;;;5895:16:22;;;::::1;::::0;;;::::1;::::0;;5825:93::o;3144:1437::-;3206:6;;-1:-1:-1;;;;;3206:6:22;3192:10;:20;3184:39;;;;;-1:-1:-1;;;3184:39:22;;;;;;;;;;;;-1:-1:-1;;;3184:39:22;;;;;;;;;;;;;;;3234:20;3257:13;;;;;;;3304:14;;;;;;;3498:9;:7;:9::i;:::-;3485:22;;3517:18;3567:15;3550:32;;:14;:32;;;:67;;3602:15;3550:67;;;3585:14;3550:67;3517:100;;3677:11;3662:12;-1:-1:-1;;3642:32:22;:46;3635:53;;:4;:53;;;3627:78;;;;;-1:-1:-1;;;3627:78:22;;;;;;;;;;;;-1:-1:-1;;;3627:78:22;;;;;;;;;;;;;;;3765:11;3750:12;-1:-1:-1;;637:9:19;;3730:32:22;:46;3723:53;;:4;:53;;;3715:79;;;;;-1:-1:-1;;;3715:79:22;;;;;;;;;;;;-1:-1:-1;;;3715:79:22;;;;;;;;;;;;;;;3988:10;4001:9;:7;:9::i;:::-;3988:22;;4020:15;4045:4;4038:11;;:4;:11;;;:39;;4073:4;4066;:11;4038:39;;;4059:4;4052;:11;4038:39;4020:57;;4108:16;;;;;;;;;;;4095:29;;:9;:29;;;;4087:58;;;;;-1:-1:-1;;;4087:58:22;;;;;;;;;;;;-1:-1:-1;;;4087:58:22;;;;;;;;;;;;;;;4156:15;4174:12;4181:4;4174:6;:12::i;:::-;4247:260;;;-1:-1:-1;;;4247:260:22;;4196:14;4247:260;;;;;;;;;;;;4306:26;;;4247:260;;;;;;;;4225:11;4213:23;;4346:25;;;4247:260;;;;;;4385:27;;;4247:260;;;;;;;;;;;;;;;;;;;;4471:26;;;4247:260;;;;;;;;;4156:30;;-1:-1:-1;4213:23:22;;-1:-1:-1;;;;;4247:5:22;:15;;;;:260;;;;;;;;;;;4196:14;4247:15;:260;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4534:15:22;4518:13;:31;;;4559:8;:15;;-1:-1:-1;;4559:15:22;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3144:1437:22:o;5924:173::-;6769:5;-1:-1:-1;;;;;6769:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:22;-1:-1:-1;;;;;6755:32:22;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;;;;6006:44:::1;6022:14;6038:11;6006:15;:44::i;:::-;6060:13;:30:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;6060:30:22;;::::1;::::0;;;::::1;::::0;;5924:173::o;1484:26::-;;;;;;:::o;1616:21::-;;;-1:-1:-1;;;;;1616:21:22;;:::o;6103:178::-;6769:5;-1:-1:-1;;;;;6769:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:22;-1:-1:-1;;;;;6755:32:22;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;;;;6187:45:::1;6203:15;6220:11;6187:15;:45::i;:::-;6242:14;:32:::0;;::::1;::::0;;;::::1;;;::::0;::::1;-1:-1:-1::0;;6242:32:22;;::::1;::::0;;;::::1;::::0;;6103:178::o;6484:168::-;6769:5;-1:-1:-1;;;;;6769:16:22;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:22;-1:-1:-1;;;;;6755:32:22;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;-1:-1:-1;;;6747:55:22;;;;;;;;;;;;;;;6589:1:::1;6573:13;:17;;;6565:42;;;::::0;;-1:-1:-1;;;6565:42:22;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6565:42:22;;;;;;;;;;;;;::::1;;6617:12;:28:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;6617:28:22::1;-1:-1:-1::0;;6617:28:22;;::::1;::::0;;;::::1;::::0;;6484:168::o;1443:34::-;;;:::o;4650:102::-;4690:10;4733:4;-1:-1:-1;;;;;4733:10:22;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4733:12:22;;;;4650:102;-1:-1:-1;4650:102:22:o;1549:29::-;;;;;;;;;:::o;1362:33::-;;;:::o;5319:216::-;5370:5;5387:16;5413:11;5406:18;;:4;:18;;;;;;;;5387:37;;5445:1;5438:4;:8;;;:35;;;;;5457:11;5450:18;;:4;:18;;;;;;;;:23;;;;5438:35;5434:53;;;-1:-1:-1;;5475:12:22;5434:53;5517:11;5504:24;;5319:216;-1:-1:-1;;5319:216:22:o;5541:278::-;5647:1;5635:9;:13;;;5627:39;;;;;-1:-1:-1;;;5627:39:22;;;;;;;;;;;;-1:-1:-1;;;5627:39:22;;;;;;;;;;;;;;;637:9:19;5684:30:22;;;;;;5676:61;;;;;-1:-1:-1;;;5676:61:22;;;;;;;;;;;;-1:-1:-1;;;5676:61:22;;;;;;;;;;;;;;;5767:12;5755:24;;:9;:24;;;;;;;;:29;;;5747:65;;;;;-1:-1:-1;;;5747:65:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;5541:278;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_baseThreshold": "Used to determine base order range",
          "_keeper": "Account that can call `rebalance()`",
          "_limitThreshold": "Used to determine limit order range",
          "_maxTwapDeviation": "Max deviation from TWAP during rebalance",
          "_twapDuration": "TWAP duration in seconds for rebalance check",
          "_vault": "Underlying Alpha Vault"
        }
      },
      "getTick()": {
        "details": "Fetches current price in ticks from Uniswap pool."
      },
      "getTwap()": {
        "details": "Fetches time-weighted average price in ticks from Uniswap pool."
      },
      "rebalance()": {
        "notice": "Calculates new ranges for orders and calls `vault.rebalance()` so that vault can update its positions. Can only be called by keeper."
      }
    },
    "notice": "Rebalancing strategy for Alpha Vault that maintains the two          following range orders:          1. Base order is placed between X - B and X + B + TS.          2. Limit order is placed between X - L and X, or between X + TS             and X + L + TS, depending on which token it holds more of.          where:              X = current tick rounded down to multiple of tick spacing              TS = tick spacing              B = base threshold              L = limit threshold          Note that after these two orders, the vault should have deposited          all its tokens and should only have a few wei left.          Because the limit order tries to sell whichever token the vault          holds more of, the vault's holdings will have a tendency to get          closer to a 1:1 balance. This enables it to continue providing          liquidity without running out of inventory of either token, and          achieves this without the need to swap directly on Uniswap and pay          fees.",
    "title": "Alpha Strategy",
    "version": 1
  },
  "offset": [
    1333,
    6822
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6329355 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC433C80A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC433C80A EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDF8AD814 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE7C7CB91 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x284 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xA6329355 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xA87BAB9C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xAF794480 EQ PUSH2 0x229 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x3CBFF3FE GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3CBFF3FE EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3DFA5D87 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x5D752A9A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x1F1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x106B9CA1 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x16C3E29D EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x26D89545 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0x2D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x420 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0xADA JUMP JUMPDEST PUSH2 0x13D PUSH2 0xBF1 JUMP JUMPDEST PUSH2 0x15C PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xE6D JUMP JUMPDEST PUSH2 0x13D PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x15C PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x3F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x36B0BC2A3BB0B82232BB34B0BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH7 0x1000000000000 MUL PUSH9 0xFFFFFF000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP5 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x493 JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x883BDBFD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 PUSH4 0x883BDBFD SWAP4 DUP8 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 DUP6 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x50C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x603 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5EB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x68B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x673 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x6D7 JUMPI INVALID JUMPDEST SDIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x818 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x35B2B2B832B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP3 PUSH4 0x1000000 SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SWAP1 PUSH2 0x835 PUSH2 0xE91 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP5 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x84C JUMPI DUP3 PUSH2 0x84E JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH3 0xD89E7 NOT ADD ADD PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x8C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x7469636B20746F6F206C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH3 0xD89E7 NOT PUSH1 0x0 SUB SUB SUB PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x936 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xE8D2C6D640E8DEDE40D0D2CED PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x940 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP5 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x959 JUMPI DUP4 DUP3 SUB PUSH2 0x95D JUMP JUMPDEST DUP2 DUP5 SUB JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x36B0BC2A3BB0B82232BB34B0BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9C7 DUP6 PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x87E5E083 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE DUP11 DUP5 SUB PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND PUSH1 0x44 DUP5 ADD MSTORE PUSH32 0x0 DUP6 ADD DUP13 DUP2 ADD DUP3 SIGNEXTEND PUSH1 0x64 DUP6 ADD MSTORE DUP12 DUP7 SUB DUP3 SIGNEXTEND PUSH1 0x84 DUP6 ADD MSTORE DUP6 DUP3 SIGNEXTEND PUSH1 0xA4 DUP6 ADD MSTORE DUP1 DUP3 SIGNEXTEND PUSH1 0xC4 DUP6 ADD MSTORE DUP12 DUP2 ADD SWAP1 SWAP2 SIGNEXTEND PUSH1 0xE4 DUP5 ADD MSTORE SWAP3 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 PUSH4 0x87E5E083 SWAP3 PUSH2 0x104 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x2 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0xFFFFFF SWAP11 SWAP1 SWAP3 SIGNEXTEND SWAP10 SWAP1 SWAP10 AND OR SWAP1 SWAP8 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBD2 DUP2 PUSH32 0x0 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xD01 DUP2 PUSH32 0x0 PUSH2 0x1002 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH4 0x1000000 MUL PUSH6 0xFFFFFF000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDF7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xE41 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x3A3BB0B8223AB930BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH13 0xFFFFFFFF000000000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xF89 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0xFD0 JUMPI POP PUSH32 0x0 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xFC9 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xFDA JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH32 0x0 MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x104A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x7468726573686F6C64203E203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x109B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xE8D0E4CAE6D0DED8C840E8DEDE40D0D2CED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x10AA JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0x1100 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468726573686F6C642025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA DUP12 CREATE 0xBB SAR CALLCODE 0x29 0xA7 PUSH13 0xC053E8D5B9B0E308D090CD08A SWAP13 0x28 PUSH3 0x69D6BE COINBASE LOG3 0x2C 0xAA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6329355"
    },
    "38": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC433C80A"
    },
    "49": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC433C80A"
    },
    "60": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x249"
    },
    "64": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xD0C93A7C"
    },
    "71": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C"
    },
    "75": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDF8AD814"
    },
    "82": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x274"
    },
    "86": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xE7C7CB91"
    },
    "93": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27C"
    },
    "97": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFBFA77CF"
    },
    "104": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x284"
    },
    "108": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMP",
      "path": "22"
    },
    "113": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "115": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA6329355"
    },
    "120": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F9"
    },
    "124": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA87BAB9C"
    },
    "131": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x219"
    },
    "135": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xACED1661"
    },
    "142": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x221"
    },
    "146": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xAF794480"
    },
    "153": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x229"
    },
    "157": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMP",
      "path": "22"
    },
    "162": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "163": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3CBFF3FE"
    },
    "169": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "GT",
      "path": "22"
    },
    "170": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3CBFF3FE"
    },
    "180": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x199"
    },
    "184": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3DFA5D87"
    },
    "191": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1BB"
    },
    "195": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5D752A9A"
    },
    "202": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1C3"
    },
    "206": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x748747E6"
    },
    "213": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CB"
    },
    "217": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "219": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x7D7C2A1C"
    },
    "224": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "225": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1F1"
    },
    "228": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "229": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMP",
      "path": "22"
    },
    "233": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "234": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "235": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x106B9CA1"
    },
    "240": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "241": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16C3E29D"
    },
    "251": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x135"
    },
    "255": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "257": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x16F0115B"
    },
    "262": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "263": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x154"
    },
    "266": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "267": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x26D89545"
    },
    "273": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "EQ",
      "path": "22"
    },
    "274": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x178"
    },
    "277": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "278": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "DUP1",
      "path": "22"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1333,
        6822
      ],
      "op": "REVERT",
      "path": "22"
    },
    "283": {
      "offset": [
        1644,
        1672
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "284": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x123"
    },
    "287": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28C"
    },
    "290": {
      "fn": null,
      "jump": "i",
      "offset": [
        1644,
        1672
      ],
      "op": "JUMP",
      "path": "22"
    },
    "291": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "292": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "294": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "296": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "297": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "DUP3",
      "path": "22"
    },
    "298": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "299": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "300": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "DUP2",
      "path": "22"
    },
    "302": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "303": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "SUB",
      "path": "22"
    },
    "304": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "306": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "ADD",
      "path": "22"
    },
    "307": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "308": {
      "fn": null,
      "offset": [
        1644,
        1672
      ],
      "op": "RETURN",
      "path": "22"
    },
    "309": {
      "offset": [
        1516,
        1543
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "310": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "313": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x292"
    },
    "316": {
      "fn": null,
      "jump": "i",
      "offset": [
        1516,
        1543
      ],
      "op": "JUMP",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "318": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "320": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "DUP1",
      "path": "22"
    },
    "321": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "322": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "324": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "325": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "326": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "328": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "DUP3",
      "path": "22"
    },
    "329": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "330": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "331": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "332": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "DUP2",
      "path": "22"
    },
    "333": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "334": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SUB",
      "path": "22"
    },
    "335": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "337": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "ADD",
      "path": "22"
    },
    "338": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        1516,
        1543
      ],
      "op": "RETURN",
      "path": "22"
    },
    "340": {
      "offset": [
        1401,
        1437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "341": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C"
    },
    "344": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A2"
    },
    "347": {
      "fn": null,
      "jump": "i",
      "offset": [
        1401,
        1437
      ],
      "op": "JUMP",
      "path": "22"
    },
    "348": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "349": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "351": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "DUP1",
      "path": "22"
    },
    "352": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "offset": [
        1401,
        1437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "362": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "363": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "AND",
      "path": "22"
    },
    "364": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "DUP3",
      "path": "22"
    },
    "365": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "366": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "367": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "368": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "DUP2",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "370": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "SUB",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "373": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "ADD",
      "path": "22"
    },
    "374": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "375": {
      "fn": null,
      "offset": [
        1401,
        1437
      ],
      "op": "RETURN",
      "path": "22"
    },
    "376": {
      "offset": [
        1584,
        1610
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x180"
    },
    "380": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C6"
    },
    "383": {
      "fn": null,
      "jump": "i",
      "offset": [
        1584,
        1610
      ],
      "op": "JUMP",
      "path": "22"
    },
    "384": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "385": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "387": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "DUP1",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "389": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "394": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "395": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "396": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "AND",
      "path": "22"
    },
    "397": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "DUP3",
      "path": "22"
    },
    "398": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "400": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "401": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "DUP2",
      "path": "22"
    },
    "402": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "403": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "SUB",
      "path": "22"
    },
    "404": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "406": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "ADD",
      "path": "22"
    },
    "407": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "408": {
      "fn": null,
      "offset": [
        1584,
        1610
      ],
      "op": "RETURN",
      "path": "22"
    },
    "409": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "410": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "413": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "415": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "DUP1",
      "path": "22"
    },
    "416": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "417": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "SUB",
      "path": "22"
    },
    "418": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "420": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "DUP2",
      "path": "22"
    },
    "421": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "LT",
      "path": "22"
    },
    "422": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "423": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AF"
    },
    "426": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "427": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "429": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "DUP1",
      "path": "22"
    },
    "430": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "REVERT",
      "path": "22"
    },
    "431": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "434": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "436": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "437": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2D9"
    },
    "440": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "i",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMP",
      "path": "22"
    },
    "441": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "442": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "STOP",
      "path": "22"
    },
    "443": {
      "offset": [
        1678,
        1699
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "444": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "447": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x420"
    },
    "450": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "i",
      "offset": [
        1678,
        1699
      ],
      "op": "JUMP",
      "path": "22"
    },
    "451": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4835,
        5207
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "452": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4835,
        5207
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "455": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4835,
        5207
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x429"
    },
    "458": {
      "fn": "AlphaStrategy.getTwap",
      "jump": "i",
      "offset": [
        4835,
        5207
      ],
      "op": "JUMP",
      "path": "22"
    },
    "459": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "460": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "463": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "465": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "DUP1",
      "path": "22"
    },
    "466": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "467": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "SUB",
      "path": "22"
    },
    "468": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "470": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "DUP2",
      "path": "22"
    },
    "471": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "LT",
      "path": "22"
    },
    "472": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "473": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E1"
    },
    "476": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "477": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "479": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "DUP1",
      "path": "22"
    },
    "480": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "REVERT",
      "path": "22"
    },
    "481": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "SUB"
    },
    "492": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "AND",
      "path": "22"
    },
    "493": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6E0"
    },
    "496": {
      "fn": "AlphaStrategy.setKeeper",
      "jump": "i",
      "offset": [
        5825,
        5918
      ],
      "op": "JUMP",
      "path": "22"
    },
    "497": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3144,
        4581
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "498": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3144,
        4581
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "501": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3144,
        4581
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7D0"
    },
    "504": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        3144,
        4581
      ],
      "op": "JUMP",
      "path": "22"
    },
    "505": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "506": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "509": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "511": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "DUP1",
      "path": "22"
    },
    "512": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "513": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "SUB",
      "path": "22"
    },
    "514": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "516": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "DUP2",
      "path": "22"
    },
    "517": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "LT",
      "path": "22"
    },
    "518": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "519": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x20F"
    },
    "522": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "523": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "525": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "DUP1",
      "path": "22"
    },
    "526": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "REVERT",
      "path": "22"
    },
    "527": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "530": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "532": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "533": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xADA"
    },
    "536": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        5924,
        6097
      ],
      "op": "JUMP",
      "path": "22"
    },
    "537": {
      "offset": [
        1484,
        1510
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "538": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "541": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBF1"
    },
    "544": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        1484,
        1510
      ],
      "op": "JUMP",
      "path": "22"
    },
    "545": {
      "offset": [
        1616,
        1637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "546": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1616,
        1637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C"
    },
    "549": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1616,
        1637
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "552": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        1616,
        1637
      ],
      "op": "JUMP",
      "path": "22"
    },
    "553": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "554": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "557": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "559": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "DUP1",
      "path": "22"
    },
    "560": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "561": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "SUB",
      "path": "22"
    },
    "562": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "564": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "DUP2",
      "path": "22"
    },
    "565": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "LT",
      "path": "22"
    },
    "566": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "567": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x23F"
    },
    "570": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "571": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "573": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "DUP1",
      "path": "22"
    },
    "574": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "REVERT",
      "path": "22"
    },
    "575": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "576": {
      "op": "POP"
    },
    "577": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "578": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "580": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "581": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC09"
    },
    "584": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "jump": "i",
      "offset": [
        6103,
        6281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "585": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "586": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1B9"
    },
    "589": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "591": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "DUP1",
      "path": "22"
    },
    "592": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "593": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "SUB",
      "path": "22"
    },
    "594": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "596": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "DUP2",
      "path": "22"
    },
    "597": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "LT",
      "path": "22"
    },
    "598": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "599": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25F"
    },
    "602": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "603": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "605": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "DUP1",
      "path": "22"
    },
    "606": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "REVERT",
      "path": "22"
    },
    "607": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "610": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "615": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "AND",
      "path": "22"
    },
    "616": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD29"
    },
    "619": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "i",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "620": {
      "offset": [
        1443,
        1477
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "621": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1443,
        1477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "624": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1443,
        1477
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE6D"
    },
    "627": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "i",
      "offset": [
        1443,
        1477
      ],
      "op": "JUMP",
      "path": "22"
    },
    "628": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4650,
        4752
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "629": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4650,
        4752
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "632": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4650,
        4752
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE91"
    },
    "635": {
      "fn": "AlphaStrategy.getTick",
      "jump": "i",
      "offset": [
        4650,
        4752
      ],
      "op": "JUMP",
      "path": "22"
    },
    "636": {
      "offset": [
        1549,
        1578
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "637": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x13D"
    },
    "640": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF20"
    },
    "643": {
      "fn": "AlphaStrategy.getTick",
      "jump": "i",
      "offset": [
        1549,
        1578
      ],
      "op": "JUMP",
      "path": "22"
    },
    "644": {
      "offset": [
        1362,
        1395
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "645": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1395
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x15C"
    },
    "648": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1395
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF33"
    },
    "651": {
      "fn": "AlphaStrategy.getTick",
      "jump": "i",
      "offset": [
        1362,
        1395
      ],
      "op": "JUMP",
      "path": "22"
    },
    "652": {
      "offset": [
        1644,
        1672
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "653": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1644,
        1672
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "655": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1644,
        1672
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "656": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1644,
        1672
      ],
      "op": "DUP2",
      "path": "22"
    },
    "657": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1644,
        1672
      ],
      "op": "JUMP",
      "path": "22"
    },
    "658": {
      "offset": [
        1516,
        1543
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "659": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "661": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "662": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1000000"
    },
    "667": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "668": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "DIV",
      "path": "22"
    },
    "669": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "671": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "672": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1516,
        1543
      ],
      "op": "DUP2",
      "path": "22"
    },
    "673": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1516,
        1543
      ],
      "op": "JUMP",
      "path": "22"
    },
    "674": {
      "offset": [
        1401,
        1437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "675": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1401,
        1437
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "708": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1401,
        1437
      ],
      "op": "DUP2",
      "path": "22"
    },
    "709": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1401,
        1437
      ],
      "op": "JUMP",
      "path": "22"
    },
    "710": {
      "offset": [
        1584,
        1610
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "711": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "713": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1584,
        1610
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "offset": [
        1584,
        1610
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "720": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1584,
        1610
      ],
      "op": "DIV",
      "path": "22"
    },
    "721": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1584,
        1610
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "726": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1584,
        1610
      ],
      "op": "AND",
      "path": "22"
    },
    "727": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1584,
        1610
      ],
      "op": "DUP2",
      "path": "22"
    },
    "728": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1584,
        1610
      ],
      "op": "JUMP",
      "path": "22"
    },
    "729": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "730": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "22"
    },
    "772": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "777": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "779": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "780": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "781": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "786": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "787": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "789": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "22"
    },
    "790": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "791": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "792": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "794": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "22"
    },
    "795": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "797": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "799": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "800": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "801": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "22"
    },
    "802": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "22"
    },
    "803": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "804": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "22"
    },
    "805": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "806": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "807": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "808": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "809": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "810": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x332"
    },
    "813": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "814": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "816": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "817": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "818": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "819": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "820": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "22"
    },
    "821": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "822": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "823": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "824": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "825": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x346"
    },
    "828": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "829": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "830": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "832": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "833": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "834": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "835": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "837": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "838": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "839": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "840": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "841": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "842": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "843": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "845": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "846": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "847": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "849": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "850": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "22"
    },
    "851": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "852": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x35C"
    },
    "855": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "856": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "858": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "859": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "860": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "869": {
      "op": "SHL"
    },
    "870": {
      "op": "SUB"
    },
    "871": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "872": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "22"
    },
    "873": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "22"
    },
    "874": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A7"
    },
    "877": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "878": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "880": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "22"
    },
    "881": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "890": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "891": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "893": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "895": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "896": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "897": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "898": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "900": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "902": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "903": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "904": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "905": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "921": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "922": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "923": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "924": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "925": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "926": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "927": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "928": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "929": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "22"
    },
    "930": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "932": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "933": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "934": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "22"
    },
    "935": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "936": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6403,
        6404
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 0,
      "value": "0x0"
    },
    "938": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6400
      ],
      "op": "DUP2",
      "path": "22"
    },
    "939": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6404
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "941": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6404
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "942": {
      "branch": 25,
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6404
      ],
      "op": "SGT",
      "path": "22"
    },
    "943": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3F2"
    },
    "946": {
      "branch": 25,
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "947": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "949": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP1",
      "path": "22"
    },
    "950": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP2",
      "path": "22"
    },
    "959": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "960": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "962": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "964": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP3",
      "path": "22"
    },
    "965": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "22"
    },
    "966": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "967": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "969": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "971": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP3",
      "path": "22"
    },
    "972": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "22"
    },
    "973": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "974": {
      "op": "PUSH16",
      "value": "0x36B0BC2A3BB0B82232BB34B0BA34B7B7"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "996": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP3",
      "path": "22"
    },
    "997": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "22"
    },
    "998": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "999": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1000": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1001": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1002": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1003": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1004": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SUB",
      "path": "22"
    },
    "1005": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1007": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "22"
    },
    "1008": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1009": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1010": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1011": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6451
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x0"
    },
    "1013": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1014": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1015": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1017": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1018": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1019": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1020": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "1021": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "1025": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "AND",
      "path": "22"
    },
    "1026": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "PUSH7",
      "path": "22",
      "value": "0x1000000000000"
    },
    "1034": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "MUL",
      "path": "22"
    },
    "1035": {
      "op": "PUSH9",
      "value": "0xFFFFFF000000000000"
    },
    "1045": {
      "op": "NOT"
    },
    "1046": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1047": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1048": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "AND",
      "path": "22"
    },
    "1049": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1050": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1051": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1052": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "OR",
      "path": "22"
    },
    "1053": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1054": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1055": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "o",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1056": {
      "offset": [
        1678,
        1699
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1057": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x3"
    },
    "1059": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1060": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1062": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "1063": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "offset": [
        1678,
        1699
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1064": {
      "fn": "AlphaStrategy.setMaxTwapDeviation",
      "jump": "o",
      "offset": [
        1678,
        1699
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1065": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4835,
        5207
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1066": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4875,
        4880
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1068": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1069": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1070": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1072": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1073": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1074": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4979,
        4980
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1076": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1077": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1078": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1079": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1081": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1082": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "ADD",
      "path": "22"
    },
    "1083": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1084": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1091": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1092": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "DIV",
      "path": "22"
    },
    "1093": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1098": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "AND",
      "path": "22"
    },
    "1099": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4915,
        4927
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1100": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4875,
        4880
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1101": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4875,
        4880
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1102": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1104": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1105": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "ADD",
      "path": "22"
    },
    "1106": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1107": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1108": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1109": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1110": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "CALLDATACOPY",
      "path": "22"
    },
    "1111": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "ADD",
      "path": "22"
    },
    "1112": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4966,
        4981
      ],
      "op": "POP",
      "path": "22"
    },
    "1115": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4937,
        4981
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1116": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4937,
        4981
      ],
      "op": "POP",
      "path": "22"
    },
    "1117": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5007,
        5020
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 2
    },
    "1118": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5001
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1119": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5002,
        5003
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1121": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1122": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1123": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1124": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "LT",
      "path": "22"
    },
    "1125": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x46A"
    },
    "1128": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1129": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1130": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1131": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1133": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "MUL",
      "path": "22"
    },
    "1134": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1136": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "ADD",
      "path": "22"
    },
    "1137": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5004
      ],
      "op": "ADD",
      "path": "22"
    },
    "1138": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1139": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1144": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "AND",
      "path": "22"
    },
    "1145": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1146": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1147": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1152": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "AND",
      "path": "22"
    },
    "1153": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1154": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1155": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "POP",
      "path": "22"
    },
    "1156": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4991,
        5020
      ],
      "op": "POP",
      "path": "22"
    },
    "1157": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5046,
        5047
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 3,
      "value": "0x0"
    },
    "1159": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5040
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1160": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5041,
        5042
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1162": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1163": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1164": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1165": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "LT",
      "path": "22"
    },
    "1166": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x493"
    },
    "1169": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1170": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1171": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1172": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5047
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1177": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5047
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1178": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5047
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1179": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5047
      ],
      "op": "AND",
      "path": "22"
    },
    "1180": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1182": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1183": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1184": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "MUL",
      "path": "22"
    },
    "1185": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1186": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1187": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1188": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "ADD",
      "path": "22"
    },
    "1189": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1190": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5043
      ],
      "op": "ADD",
      "path": "22"
    },
    "1191": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5030,
        5047
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1192": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1194": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1195": {
      "op": "PUSH4",
      "value": "0x883BDBFD"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1204": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1205": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1207": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1208": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1209": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1210": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1211": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1212": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1213": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1214": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1216": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1217": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1218": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1219": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1220": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1221": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5059,
        5089
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1223": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5059,
        5089
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1230": {
      "op": "SHL"
    },
    "1231": {
      "op": "SUB"
    },
    "1232": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5099
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "1265": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5107
      ],
      "op": "AND",
      "path": "22"
    },
    "1266": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5107
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1267": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5107
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x883BDBFD"
    },
    "1272": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5107
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1273": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5108,
        5118
      ],
      "op": "DUP8",
      "path": "22"
    },
    "1274": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5108,
        5118
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1275": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1276": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1277": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1278": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1279": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1281": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1282": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1283": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1284": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1285": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1286": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1287": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MUL",
      "path": "22"
    },
    "1288": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1289": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1290": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1291": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5059,
        5089
      ],
      "op": "DUP12",
      "path": "22"
    },
    "1292": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1293": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1294": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1295": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "LT",
      "path": "22"
    },
    "1296": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1297": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x524"
    },
    "1300": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1301": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1302": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1303": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1304": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1305": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1306": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1307": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1308": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1309": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1311": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1312": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x50C"
    },
    "1315": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1316": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1317": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1318": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1319": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1320": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1321": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1322": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1323": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1324": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1325": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1326": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1327": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1328": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1330": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1332": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1333": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1334": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1335": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SUB",
      "path": "22"
    },
    "1336": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1337": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1338": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1339": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1340": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1341": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1342": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1343": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x547"
    },
    "1346": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1347": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1349": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1350": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1351": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1352": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1353": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GAS",
      "path": "22"
    },
    "1354": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1355": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1356": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1357": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1358": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x55B"
    },
    "1361": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1362": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1363": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1365": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1366": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1367": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1368": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1370": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1371": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1372": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1373": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1374": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1375": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1376": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1378": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1379": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1380": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1382": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1383": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1384": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1386": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1387": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1388": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1389": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1392": {
      "op": "NOT"
    },
    "1393": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "AND",
      "path": "22"
    },
    "1394": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1395": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1396": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1398": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1399": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1400": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1401": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1402": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "LT",
      "path": "22"
    },
    "1403": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1404": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x584"
    },
    "1407": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1408": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1410": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1411": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1412": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1413": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1414": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1415": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1416": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1417": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1418": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1419": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1421": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1422": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1423": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1424": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1425": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1426": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1427": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "1433": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1434": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1435": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1436": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5A4"
    },
    "1439": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1440": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1442": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1443": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1444": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1445": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1446": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1447": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1448": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1449": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1451": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1452": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1453": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1454": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1455": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1456": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1457": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5B9"
    },
    "1460": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1461": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1463": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1464": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1465": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1466": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1467": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1468": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1469": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1471": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1472": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MUL",
      "path": "22"
    },
    "1473": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1474": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1475": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1476": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "1482": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1483": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1484": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "OR",
      "path": "22"
    },
    "1485": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1486": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5D6"
    },
    "1489": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1490": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1492": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1493": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1494": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1495": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1496": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1499": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1500": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1502": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1503": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1504": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1505": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1506": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1507": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1508": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1509": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MUL",
      "path": "22"
    },
    "1510": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1511": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1512": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1513": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1515": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1516": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1517": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1518": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "LT",
      "path": "22"
    },
    "1519": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1520": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x603"
    },
    "1523": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1524": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1525": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1526": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1527": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1528": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1529": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1530": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1531": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1532": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1534": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1535": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5EB"
    },
    "1538": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1539": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1540": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1541": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1542": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1543": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1544": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1545": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1546": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1547": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1549": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1550": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1552": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1553": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1554": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1555": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1557": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1558": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1559": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1560": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1561": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1562": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1563": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "1569": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1570": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1571": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1572": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x62C"
    },
    "1575": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1576": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1578": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1579": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1580": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1581": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1582": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1583": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1584": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1585": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1587": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1588": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1589": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1590": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1591": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1592": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1593": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x641"
    },
    "1596": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1597": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1599": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1600": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1601": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1602": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1603": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1604": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1605": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1607": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1608": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MUL",
      "path": "22"
    },
    "1609": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1610": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1611": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1612": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH5",
      "path": "22",
      "value": "0x100000000"
    },
    "1618": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1619": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "GT",
      "path": "22"
    },
    "1620": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "OR",
      "path": "22"
    },
    "1621": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1622": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x65E"
    },
    "1625": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1626": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1628": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1629": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1630": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1631": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1632": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1635": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1636": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1638": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1639": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1640": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1641": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1642": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1643": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1644": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1645": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MUL",
      "path": "22"
    },
    "1646": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1647": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1648": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1649": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1651": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1652": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1653": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1654": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "LT",
      "path": "22"
    },
    "1655": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1656": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x68B"
    },
    "1659": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1660": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1661": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1662": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1663": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1664": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1665": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1666": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1667": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1668": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1670": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1671": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x673"
    },
    "1674": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1675": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1676": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1677": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1678": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1679": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1680": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1681": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1682": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "ADD",
      "path": "22"
    },
    "1683": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1685": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1686": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1687": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1688": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5095,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1689": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5058,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1690": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5058,
        5119
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1691": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5058,
        5119
      ],
      "op": "POP",
      "path": "22"
    },
    "1692": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5186,
        5199
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 4
    },
    "1693": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1698": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "AND",
      "path": "22"
    },
    "1699": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5179
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1700": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5180,
        5181
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1702": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1703": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1704": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1705": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "LT",
      "path": "22"
    },
    "1706": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6AF"
    },
    "1709": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1710": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1711": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1712": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1714": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "MUL",
      "path": "22"
    },
    "1715": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1717": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "ADD",
      "path": "22"
    },
    "1718": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "ADD",
      "path": "22"
    },
    "1719": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5164,
        5182
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1720": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5158
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1721": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5159,
        5160
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1723": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1724": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1725": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1726": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "LT",
      "path": "22"
    },
    "1727": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6C4"
    },
    "1730": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1731": {
      "dev": "Index out of range",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1732": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1733": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1735": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "MUL",
      "path": "22"
    },
    "1736": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1738": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "ADD",
      "path": "22"
    },
    "1739": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "ADD",
      "path": "22"
    },
    "1740": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5161
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1741": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5143,
        5182
      ],
      "op": "SUB",
      "path": "22"
    },
    "1742": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1744": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "1745": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1746": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6D7"
    },
    "1749": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1750": {
      "dev": "Division by zero",
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "INVALID",
      "path": "22"
    },
    "1751": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1752": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5142,
        5199
      ],
      "op": "SDIV",
      "path": "22"
    },
    "1753": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5129,
        5200
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "1754": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5129,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "1755": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5129,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "1756": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5129,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "1757": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        5129,
        5200
      ],
      "op": "POP",
      "path": "22"
    },
    "1758": {
      "fn": "AlphaStrategy.getTwap",
      "offset": [
        4835,
        5207
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1759": {
      "fn": "AlphaStrategy.getTwap",
      "jump": "o",
      "offset": [
        4835,
        5207
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1760": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5825,
        5918
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1761": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "op": "SUB"
    },
    "1802": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "22"
    },
    "1803": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "1808": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1810": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1811": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1812": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "1817": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "1818": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "1820": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "22"
    },
    "1821": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1822": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1823": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1825": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "22"
    },
    "1826": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1828": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1830": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1831": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1832": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1833": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "22"
    },
    "1834": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1835": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "22"
    },
    "1836": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1837": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "1838": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1839": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1840": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1841": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x739"
    },
    "1844": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1845": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1847": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1848": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1849": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1850": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "1851": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "22"
    },
    "1852": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "1853": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1854": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1855": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1856": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x74D"
    },
    "1859": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1860": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1861": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1863": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1864": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "1865": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1866": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1868": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1869": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1870": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "1871": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "1872": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "1873": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "1874": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1876": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1877": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "1878": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1880": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1881": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "22"
    },
    "1882": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1883": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x763"
    },
    "1886": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1887": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1889": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1890": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1891": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "1903": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1904": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "22"
    },
    "1905": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7AE"
    },
    "1908": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1909": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1911": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1912": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1921": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1922": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1924": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1926": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1927": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "1928": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1929": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "1931": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "1933": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1934": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "1935": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1936": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "1952": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1953": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "1954": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1955": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1956": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1957": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1958": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1959": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1960": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "22"
    },
    "1961": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "1963": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "1964": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1965": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1966": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1967": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5901
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 5,
      "value": "0x1"
    },
    "1969": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1970": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "op": "NOT"
    },
    "1980": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "AND",
      "path": "22"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1990": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1991": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1992": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "AND",
      "path": "22"
    },
    "1993": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1994": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1995": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1996": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "OR",
      "path": "22"
    },
    "1997": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1998": {
      "fn": "AlphaStrategy.setKeeper",
      "offset": [
        5895,
        5911
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1999": {
      "fn": "AlphaStrategy.setKeeper",
      "jump": "o",
      "offset": [
        5825,
        5918
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2000": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3144,
        4581
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2001": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3206,
        3212
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 6,
      "value": "0x1"
    },
    "2003": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3206,
        3212
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3206,
        3212
      ],
      "op": "AND",
      "path": "22"
    },
    "2013": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3192,
        3202
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2014": {
      "branch": 26,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3192,
        3212
      ],
      "op": "EQ",
      "path": "22"
    },
    "2015": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x818"
    },
    "2018": {
      "branch": 26,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2019": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2021": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2022": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2031": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2032": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2034": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2036": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2037": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "ADD",
      "path": "22"
    },
    "2038": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2039": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "2041": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2043": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2044": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "ADD",
      "path": "22"
    },
    "2045": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2046": {
      "op": "PUSH6",
      "value": "0x35B2B2B832B9"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2058": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2059": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "ADD",
      "path": "22"
    },
    "2060": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2061": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2062": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2063": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2064": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2065": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2066": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "SUB",
      "path": "22"
    },
    "2067": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2069": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "ADD",
      "path": "22"
    },
    "2070": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2071": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2072": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3184,
        3223
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2073": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3234,
        3254
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2075": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2076": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2077": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2079": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2080": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2081": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2082": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3257,
        3270
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2083": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1000000"
    },
    "2088": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2089": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2090": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "DIV",
      "path": "22"
    },
    "2091": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2092": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2093": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3304,
        3318
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2094": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3498,
        3507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x835"
    },
    "2097": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3498,
        3505
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE91"
    },
    "2100": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        3498,
        3507
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2101": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3498,
        3507
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2102": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3485,
        3507
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2103": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3485,
        3507
      ],
      "op": "POP",
      "path": "22"
    },
    "2104": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3517,
        3535
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2106": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3567,
        3582
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2107": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3582
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2109": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3582
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2110": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3564
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2111": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3582
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2113": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3582
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2114": {
      "branch": 27,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3582
      ],
      "op": "SGT",
      "path": "22"
    },
    "2115": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3617
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x84C"
    },
    "2118": {
      "branch": 27,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3617
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2119": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3602,
        3617
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2120": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3617
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x84E"
    },
    "2123": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3617
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2124": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3617
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2125": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3585,
        3599
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2126": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3550,
        3617
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2127": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3517,
        3617
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2128": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3517,
        3617
      ],
      "op": "POP",
      "path": "22"
    },
    "2129": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3677,
        3688
      ],
      "op": "PUSH32",
      "path": "22",
      "statement": 7,
      "value": "0x0"
    },
    "2162": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3662,
        3674
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2163": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "2167": {
      "op": "NOT"
    },
    "2168": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3642,
        3674
      ],
      "op": "ADD",
      "path": "22"
    },
    "2169": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3642,
        3688
      ],
      "op": "ADD",
      "path": "22"
    },
    "2170": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3635,
        3688
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2172": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3635,
        3688
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2173": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3635,
        3639
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2174": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3635,
        3688
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2176": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3635,
        3688
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2177": {
      "branch": 28,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3635,
        3688
      ],
      "op": "SGT",
      "path": "22"
    },
    "2178": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x8C1"
    },
    "2181": {
      "branch": 28,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2182": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2184": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2185": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2194": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2195": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2197": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2199": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2200": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2201": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2202": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "2204": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2206": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2207": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2208": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2209": {
      "op": "PUSH12",
      "value": "0x7469636B20746F6F206C6F77"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2227": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2228": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2229": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2230": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2231": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2232": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2233": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2234": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2235": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "SUB",
      "path": "22"
    },
    "2236": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2238": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "ADD",
      "path": "22"
    },
    "2239": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2240": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2241": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3627,
        3705
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2242": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3765,
        3776
      ],
      "op": "PUSH32",
      "path": "22",
      "statement": 8,
      "value": "0x0"
    },
    "2275": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3750,
        3762
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2276": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "2280": {
      "op": "NOT"
    },
    "2281": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2283": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        637,
        646
      ],
      "op": "SUB",
      "path": "19"
    },
    "2284": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3730,
        3762
      ],
      "op": "SUB",
      "path": "22"
    },
    "2285": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3730,
        3776
      ],
      "op": "SUB",
      "path": "22"
    },
    "2286": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3776
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2288": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3776
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2289": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3727
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2290": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3776
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2292": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3776
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2293": {
      "branch": 29,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3723,
        3776
      ],
      "op": "SLT",
      "path": "22"
    },
    "2294": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x936"
    },
    "2297": {
      "branch": 29,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2298": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2300": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2301": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2310": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2311": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2313": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2315": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2316": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "ADD",
      "path": "22"
    },
    "2317": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2318": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "2320": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2322": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2323": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "ADD",
      "path": "22"
    },
    "2324": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2325": {
      "op": "PUSH13",
      "value": "0xE8D2C6D640E8DEDE40D0D2CED"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x9B"
    },
    "2341": {
      "op": "SHL"
    },
    "2342": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2344": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2345": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "ADD",
      "path": "22"
    },
    "2346": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2347": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2348": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2349": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2350": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2351": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2352": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "SUB",
      "path": "22"
    },
    "2353": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2355": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "ADD",
      "path": "22"
    },
    "2356": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2357": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2358": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3715,
        3794
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2359": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3988,
        3998
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2361": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4001,
        4010
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x940"
    },
    "2364": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4001,
        4008
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x429"
    },
    "2367": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        4001,
        4010
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2368": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4001,
        4010
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2369": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3988,
        4010
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2370": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        3988,
        4010
      ],
      "op": "POP",
      "path": "22"
    },
    "2371": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4020,
        4035
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2373": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4045,
        4049
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2374": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4049
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2376": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4049
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2377": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4042
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2378": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4049
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2380": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4049
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2381": {
      "branch": 30,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4049
      ],
      "op": "SGT",
      "path": "22"
    },
    "2382": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4077
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x959"
    },
    "2385": {
      "branch": 30,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4077
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2386": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4073,
        4077
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2387": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4066,
        4070
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2388": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4066,
        4077
      ],
      "op": "SUB",
      "path": "22"
    },
    "2389": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4077
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x95D"
    },
    "2392": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4077
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2393": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4077
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2394": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4059,
        4063
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2395": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4052,
        4056
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2396": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4052,
        4063
      ],
      "op": "SUB",
      "path": "22"
    },
    "2397": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4038,
        4077
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2398": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4020,
        4077
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2399": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4020,
        4077
      ],
      "op": "POP",
      "path": "22"
    },
    "2400": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 9,
      "value": "0x0"
    },
    "2402": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "2404": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2405": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2406": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2407": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2410": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "EXP",
      "path": "22"
    },
    "2411": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2412": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "DIV",
      "path": "22"
    },
    "2413": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2415": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4108,
        4124
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2416": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2418": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4124
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2419": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4104
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2420": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2422": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4124
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2423": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4124
      ],
      "op": "SGT",
      "path": "22"
    },
    "2424": {
      "branch": 31,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4095,
        4124
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2425": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9BC"
    },
    "2428": {
      "branch": 31,
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2429": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2431": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2432": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2441": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2442": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2444": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2446": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2447": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "ADD",
      "path": "22"
    },
    "2448": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2449": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "2451": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2453": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2454": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "ADD",
      "path": "22"
    },
    "2455": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2456": {
      "op": "PUSH16",
      "value": "0x36B0BC2A3BB0B82232BB34B0BA34B7B7"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2478": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2479": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "ADD",
      "path": "22"
    },
    "2480": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2481": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2482": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2483": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2484": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2485": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2486": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "SUB",
      "path": "22"
    },
    "2487": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2489": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "ADD",
      "path": "22"
    },
    "2490": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2491": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2492": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4087,
        4145
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2493": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4156,
        4171
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2495": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4174,
        4186
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9C7"
    },
    "2498": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4181,
        4185
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2499": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4174,
        4180
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF57"
    },
    "2502": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "i",
      "offset": [
        4174,
        4186
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2503": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4174,
        4186
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2504": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 10,
      "value": "0x40"
    },
    "2506": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2507": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2508": {
      "op": "PUSH4",
      "value": "0x87E5E083"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2517": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2518": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4196,
        4210
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2520": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2522": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2523": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2524": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2525": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2526": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2527": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2529": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2530": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2531": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2532": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2533": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2534": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4306,
        4332
      ],
      "op": "DUP11",
      "path": "22"
    },
    "2535": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4306,
        4332
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2536": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4306,
        4332
      ],
      "op": "SUB",
      "path": "22"
    },
    "2537": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2539": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2540": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2541": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2542": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2544": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2545": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2546": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2547": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4225,
        4236
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "2580": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4213,
        4236
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2581": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4213,
        4236
      ],
      "op": "ADD",
      "path": "22"
    },
    "2582": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4346,
        4371
      ],
      "op": "DUP13",
      "path": "22"
    },
    "2583": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4346,
        4371
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2584": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4346,
        4371
      ],
      "op": "ADD",
      "path": "22"
    },
    "2585": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2586": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2587": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2589": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2590": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2591": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2592": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4385,
        4412
      ],
      "op": "DUP12",
      "path": "22"
    },
    "2593": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4385,
        4412
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2594": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4385,
        4412
      ],
      "op": "SUB",
      "path": "22"
    },
    "2595": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2596": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2597": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x84"
    },
    "2599": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2600": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2601": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2602": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2603": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2604": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2605": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA4"
    },
    "2607": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2608": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2609": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2610": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2611": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2612": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2613": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC4"
    },
    "2615": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2616": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2617": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2618": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4471,
        4497
      ],
      "op": "DUP12",
      "path": "22"
    },
    "2619": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4471,
        4497
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2620": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4471,
        4497
      ],
      "op": "ADD",
      "path": "22"
    },
    "2621": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2622": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2623": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2624": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE4"
    },
    "2626": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2627": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2628": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2629": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2630": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2631": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4156,
        4186
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2632": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4156,
        4186
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2633": {
      "op": "POP"
    },
    "2634": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4213,
        4236
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2635": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4213,
        4236
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "op": "SUB"
    },
    "2644": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4252
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "2677": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4262
      ],
      "op": "AND",
      "path": "22"
    },
    "2678": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4262
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2679": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4262
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x87E5E083"
    },
    "2684": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4262
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2685": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104"
    },
    "2688": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2689": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2690": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2691": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2692": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2693": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2694": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2695": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "SUB",
      "path": "22"
    },
    "2696": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ADD",
      "path": "22"
    },
    "2697": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2698": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4196,
        4210
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2699": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4262
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2700": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2701": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2702": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2703": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2704": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2705": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA99"
    },
    "2708": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2709": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2711": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2712": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2713": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2714": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "POP",
      "path": "22"
    },
    "2715": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "GAS",
      "path": "22"
    },
    "2716": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "CALL",
      "path": "22"
    },
    "2717": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2718": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2719": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2720": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAAD"
    },
    "2723": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2724": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2725": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2727": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2728": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2729": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2730": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2732": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2733": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4247,
        4507
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4534,
        4549
      ],
      "op": "TIMESTAMP",
      "path": "22",
      "statement": 11
    },
    "2737": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4518,
        4531
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2739": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4518,
        4549
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2740": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4518,
        4549
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2741": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4518,
        4549
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2742": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4567
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 12,
      "value": "0x3"
    },
    "2744": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2745": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2746": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "2750": {
      "op": "NOT"
    },
    "2751": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "AND",
      "path": "22"
    },
    "2752": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "2756": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP11",
      "path": "22"
    },
    "2757": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2758": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2759": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "2760": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "2761": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2762": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP10",
      "path": "22"
    },
    "2763": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "AND",
      "path": "22"
    },
    "2764": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "OR",
      "path": "22"
    },
    "2765": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2766": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SWAP8",
      "path": "22"
    },
    "2767": {
      "fn": "AlphaStrategy.rebalance",
      "offset": [
        4559,
        4574
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "POP"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "op": "POP"
    },
    "2777": {
      "fn": "AlphaStrategy.rebalance",
      "jump": "o",
      "offset": [
        3144,
        4581
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2778": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        5924,
        6097
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2779": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "SUB"
    },
    "2820": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "22"
    },
    "2821": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "2826": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2828": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2829": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2830": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "2835": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "2836": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "2838": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "22"
    },
    "2839": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2840": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2841": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2843": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "22"
    },
    "2844": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2846": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2848": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2849": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2850": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2851": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "22"
    },
    "2852": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2853": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2854": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2855": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2856": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2857": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2858": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2859": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB33"
    },
    "2862": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2863": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2865": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2866": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2867": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2868": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "2869": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "22"
    },
    "2870": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "2871": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2872": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2873": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2874": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB47"
    },
    "2877": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2878": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2879": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2881": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2882": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2883": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2884": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2886": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2887": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2888": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "2889": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "2890": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "2891": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "2892": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2894": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2895": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2896": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2898": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2899": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "22"
    },
    "2900": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2901": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB5D"
    },
    "2904": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2905": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2907": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2908": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2909": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2918": {
      "op": "SHL"
    },
    "2919": {
      "op": "SUB"
    },
    "2920": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "2921": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2922": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "22"
    },
    "2923": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBA8"
    },
    "2926": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2927": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2929": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2930": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2939": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2940": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2942": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2944": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2945": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "2946": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2947": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "2949": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "2951": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2952": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "2953": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2954": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "2967": {
      "op": "SHL"
    },
    "2968": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "2970": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2971": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "2972": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2973": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2974": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2975": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2976": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2977": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2978": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "22"
    },
    "2979": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "2981": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "2982": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2983": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2984": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2985": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6006,
        6050
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 13,
      "value": "0xBD2"
    },
    "2988": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6022,
        6036
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2989": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6038,
        6049
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3022": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6006,
        6021
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1002"
    },
    "3025": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        6006,
        6050
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3026": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6006,
        6050
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3027": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6073
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 14,
      "value": "0x0"
    },
    "3029": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3030": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3031": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3033": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3034": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3035": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3036": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3037": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "3041": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "AND",
      "path": "22"
    },
    "3042": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "3046": {
      "op": "NOT"
    },
    "3047": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3048": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3049": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "AND",
      "path": "22"
    },
    "3050": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3051": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3052": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3053": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "OR",
      "path": "22"
    },
    "3054": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3055": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        6060,
        6090
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3056": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        5924,
        6097
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3057": {
      "offset": [
        1484,
        1510
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3058": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3060": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3061": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3063": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3064": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1484,
        1510
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3065": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        1484,
        1510
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3066": {
      "offset": [
        1616,
        1637
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3067": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1616,
        1637
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3069": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1616,
        1637
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "op": "SUB"
    },
    "3078": {
      "offset": [
        1616,
        1637
      ],
      "op": "AND",
      "path": "22"
    },
    "3079": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "offset": [
        1616,
        1637
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3080": {
      "fn": "AlphaStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        1616,
        1637
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3081": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6103,
        6281
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3082": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3121": {
      "op": "SHL"
    },
    "3122": {
      "op": "SUB"
    },
    "3123": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "22"
    },
    "3124": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "3129": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3131": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3132": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3133": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3138": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "3139": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3141": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "22"
    },
    "3142": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3143": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3144": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3146": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "22"
    },
    "3147": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3149": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3151": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3152": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3153": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3154": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "22"
    },
    "3155": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3156": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3157": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3158": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3159": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3160": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3161": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3162": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC62"
    },
    "3165": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3166": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3168": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3169": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3170": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3171": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3172": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "22"
    },
    "3173": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3174": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3175": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3176": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3177": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC76"
    },
    "3180": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3181": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3182": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3184": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3185": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3186": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3187": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3189": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3190": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3191": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3192": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3193": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3194": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3195": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3197": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3198": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3199": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3201": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3202": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "22"
    },
    "3203": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3204": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC8C"
    },
    "3207": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3208": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3210": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3211": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3212": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3221": {
      "op": "SHL"
    },
    "3222": {
      "op": "SUB"
    },
    "3223": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "3224": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3225": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "22"
    },
    "3226": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCD7"
    },
    "3229": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3230": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3232": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3233": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3234": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3242": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3243": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3245": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3247": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3248": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3249": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3250": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3252": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3254": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3255": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3256": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3257": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3270": {
      "op": "SHL"
    },
    "3271": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3273": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3274": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3275": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3276": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3277": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3278": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3279": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3280": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3281": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "22"
    },
    "3282": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3284": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3285": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3286": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3287": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3288": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6187,
        6232
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 15,
      "value": "0xD01"
    },
    "3291": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6203,
        6218
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3292": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6220,
        6231
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3325": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6187,
        6202
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1002"
    },
    "3328": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "jump": "i",
      "offset": [
        6187,
        6232
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3329": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6187,
        6232
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3330": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6256
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 16,
      "value": "0x0"
    },
    "3332": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3333": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3334": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3336": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3337": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3338": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3339": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3340": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0xFFFFFF"
    },
    "3344": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "AND",
      "path": "22"
    },
    "3345": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x1000000"
    },
    "3350": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "MUL",
      "path": "22"
    },
    "3351": {
      "op": "PUSH6",
      "value": "0xFFFFFF000000"
    },
    "3358": {
      "op": "NOT"
    },
    "3359": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3360": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3361": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "AND",
      "path": "22"
    },
    "3362": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3363": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3364": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3365": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "OR",
      "path": "22"
    },
    "3366": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3367": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3368": {
      "fn": "AlphaStrategy.setLimitThreshold",
      "jump": "o",
      "offset": [
        6103,
        6281
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3369": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3370": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3409": {
      "op": "SHL"
    },
    "3410": {
      "op": "SUB"
    },
    "3411": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "22"
    },
    "3412": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5AA6E675"
    },
    "3417": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3419": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3420": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3421": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3426": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "3427": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3429": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "22"
    },
    "3430": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3431": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3432": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3434": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "22"
    },
    "3435": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3437": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3439": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3440": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3441": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3442": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "22"
    },
    "3443": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3444": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3445": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3446": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3447": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3448": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3449": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3450": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD82"
    },
    "3453": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3454": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3456": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3457": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3458": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3459": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3460": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "22"
    },
    "3461": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3462": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3463": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3464": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3465": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD96"
    },
    "3468": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3469": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3470": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3472": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3473": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3474": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3475": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3477": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3478": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3479": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3480": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3481": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3482": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "22"
    },
    "3483": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3485": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3486": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3487": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3489": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3490": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "22"
    },
    "3491": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3492": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDAC"
    },
    "3495": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3496": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3498": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3499": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3500": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3501": {
      "op": "POP"
    },
    "3502": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3509": {
      "op": "SHL"
    },
    "3510": {
      "op": "SUB"
    },
    "3511": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "22"
    },
    "3512": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3513": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "22"
    },
    "3514": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDF7"
    },
    "3517": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3518": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3520": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3521": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3528": {
      "op": "SHL"
    },
    "3529": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3530": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3531": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3533": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3535": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3536": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3537": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3538": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3540": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3542": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3543": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3544": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3545": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3561": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3562": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3563": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3564": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3565": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3566": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3567": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3568": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3569": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "22"
    },
    "3570": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3572": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "22"
    },
    "3573": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3574": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3575": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3576": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6589,
        6590
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x0"
    },
    "3578": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6573,
        6586
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3579": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6573,
        6590
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3584": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6573,
        6590
      ],
      "op": "AND",
      "path": "22"
    },
    "3585": {
      "branch": 32,
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6573,
        6590
      ],
      "op": "GT",
      "path": "22"
    },
    "3586": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE41"
    },
    "3589": {
      "branch": 32,
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3590": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3592": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3593": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3602": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3603": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3605": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3607": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3608": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "22"
    },
    "3609": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3610": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "3612": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "3614": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3615": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "22"
    },
    "3616": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3617": {
      "op": "PUSH12",
      "value": "0x3A3BB0B8223AB930BA34B7B7"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3632": {
      "op": "SHL"
    },
    "3633": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "3635": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3636": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "22"
    },
    "3637": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3638": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3639": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3640": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3641": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3642": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3643": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SUB",
      "path": "22"
    },
    "3644": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3646": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "22"
    },
    "3647": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3648": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3649": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3650": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6629
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0x0"
    },
    "3652": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3653": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3654": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3659": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3660": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3661": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "AND",
      "path": "22"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "MUL",
      "path": "22"
    },
    "3668": {
      "op": "PUSH13",
      "value": "0xFFFFFFFF000000000000000000"
    },
    "3682": {
      "op": "NOT"
    },
    "3683": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3684": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3685": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "AND",
      "path": "22"
    },
    "3686": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3687": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3688": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3689": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "OR",
      "path": "22"
    },
    "3690": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3691": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3692": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "o",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3693": {
      "offset": [
        1443,
        1477
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3694": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1443,
        1477
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3727": {
      "fn": "AlphaStrategy.setTwapDuration",
      "offset": [
        1443,
        1477
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3728": {
      "fn": "AlphaStrategy.setTwapDuration",
      "jump": "o",
      "offset": [
        1443,
        1477
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3729": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4650,
        4752
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3730": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4690,
        4700
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3732": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4737
      ],
      "op": "PUSH32",
      "path": "22",
      "statement": 19,
      "value": "0x0"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3771": {
      "op": "SHL"
    },
    "3772": {
      "op": "SUB"
    },
    "3773": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4743
      ],
      "op": "AND",
      "path": "22"
    },
    "3774": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4743
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3850C7BD"
    },
    "3779": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3781": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3782": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3783": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFFFFFFFF"
    },
    "3788": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "AND",
      "path": "22"
    },
    "3789": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3791": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "SHL",
      "path": "22"
    },
    "3792": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3793": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3794": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3796": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ADD",
      "path": "22"
    },
    "3797": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3799": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3801": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3802": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3803": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3804": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "SUB",
      "path": "22"
    },
    "3805": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3806": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3807": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3808": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "3809": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3810": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3811": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3812": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xEEC"
    },
    "3815": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3816": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3818": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3819": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3820": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3821": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "POP",
      "path": "22"
    },
    "3822": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "GAS",
      "path": "22"
    },
    "3823": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "STATICCALL",
      "path": "22"
    },
    "3824": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3825": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3826": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3827": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF00"
    },
    "3830": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3831": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3832": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3834": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3835": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3836": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3837": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3839": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3840": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3841": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "POP",
      "path": "22"
    },
    "3842": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "POP",
      "path": "22"
    },
    "3843": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "POP",
      "path": "22"
    },
    "3844": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "POP",
      "path": "22"
    },
    "3845": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3847": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3848": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3849": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "3851": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3852": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "LT",
      "path": "22"
    },
    "3853": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3854": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF16"
    },
    "3857": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3858": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3860": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3861": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3862": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3863": {
      "op": "POP"
    },
    "3864": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3866": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "ADD",
      "path": "22"
    },
    "3867": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3868": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4733,
        4745
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3869": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        4650,
        4752
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3870": {
      "op": "POP"
    },
    "3871": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        4650,
        4752
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3872": {
      "offset": [
        1549,
        1578
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3873": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3875": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3876": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "PUSH7",
      "path": "22",
      "value": "0x1000000000000"
    },
    "3884": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3885": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "DIV",
      "path": "22"
    },
    "3886": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3888": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3889": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1549,
        1578
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3890": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1549,
        1578
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3891": {
      "offset": [
        1362,
        1395
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3892": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1395
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3925": {
      "fn": "AlphaStrategy.getTick",
      "offset": [
        1362,
        1395
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3926": {
      "fn": "AlphaStrategy.getTick",
      "jump": "o",
      "offset": [
        1362,
        1395
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3927": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5319,
        5535
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3928": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5370,
        5375
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3930": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5387,
        5403
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3931": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5413,
        5424
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "3964": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3966": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3967": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5410
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3968": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3970": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3971": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3972": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xF89"
    },
    "3975": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3976": {
      "dev": "Division by zero",
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "INVALID",
      "path": "22"
    },
    "3977": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3978": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5406,
        5424
      ],
      "op": "SDIV",
      "path": "22"
    },
    "3979": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5387,
        5424
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3980": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5387,
        5424
      ],
      "op": "POP",
      "path": "22"
    },
    "3981": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5445,
        5446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3983": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5442
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3984": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5446
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3986": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5446
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "3987": {
      "branch": 33,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5446
      ],
      "op": "SLT",
      "path": "22"
    },
    "3988": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5473
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3989": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5473
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3990": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5473
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFD0"
    },
    "3993": {
      "branch": 33,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5473
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3994": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5473
      ],
      "op": "POP",
      "path": "22"
    },
    "3995": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5457,
        5468
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x0"
    },
    "4028": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4030": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4031": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5454
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4032": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4034": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4035": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4036": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFC9"
    },
    "4039": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4040": {
      "dev": "Modulus by zero",
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "INVALID",
      "path": "22"
    },
    "4041": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4042": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5468
      ],
      "op": "SMOD",
      "path": "22"
    },
    "4043": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5473
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4045": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5473
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4046": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5473
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4047": {
      "branch": 34,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5450,
        5473
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4048": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5438,
        5473
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4049": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5434,
        5487
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4050": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5434,
        5487
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xFDA"
    },
    "4053": {
      "branch": 34,
      "fn": "AlphaStrategy._floor",
      "offset": [
        5434,
        5487
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4056": {
      "op": "NOT"
    },
    "4057": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5475,
        5487
      ],
      "op": "ADD",
      "path": "22",
      "statement": 20
    },
    "4058": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5434,
        5487
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4059": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5517,
        5528
      ],
      "op": "PUSH32",
      "path": "22",
      "statement": 21,
      "value": "0x0"
    },
    "4092": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5504,
        5528
      ],
      "op": "MUL",
      "path": "22"
    },
    "4093": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5504,
        5528
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "4094": {
      "fn": "AlphaStrategy._floor",
      "offset": [
        5319,
        5535
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "4095": {
      "op": "POP"
    },
    "4096": {
      "op": "POP"
    },
    "4097": {
      "fn": "AlphaStrategy._floor",
      "jump": "o",
      "offset": [
        5319,
        5535
      ],
      "op": "JUMP",
      "path": "22"
    },
    "4098": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5541,
        5819
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4099": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5647,
        5648
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 22,
      "value": "0x0"
    },
    "4101": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5635,
        5644
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4102": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5635,
        5648
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4104": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5635,
        5648
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4105": {
      "branch": 35,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5635,
        5648
      ],
      "op": "SGT",
      "path": "22"
    },
    "4106": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104A"
    },
    "4109": {
      "branch": 35,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4110": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4112": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4113": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4120": {
      "op": "SHL"
    },
    "4121": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4122": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4123": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4125": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4127": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4128": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "ADD",
      "path": "22"
    },
    "4129": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4130": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "4132": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4134": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4135": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "ADD",
      "path": "22"
    },
    "4136": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4137": {
      "op": "PUSH13",
      "value": "0x7468726573686F6C64203E203"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "4153": {
      "op": "SHL"
    },
    "4154": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4156": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4157": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "ADD",
      "path": "22"
    },
    "4158": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4159": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4160": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4161": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4162": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4163": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4164": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "SUB",
      "path": "22"
    },
    "4165": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4167": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "ADD",
      "path": "22"
    },
    "4168": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4169": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4170": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5627,
        5666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4171": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "4175": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5684,
        5714
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 23,
      "value": "0x2"
    },
    "4177": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5684,
        5714
      ],
      "op": "DUP4",
      "path": "22"
    },
    "4178": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5684,
        5714
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4179": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5684,
        5714
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4180": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5684,
        5714
      ],
      "op": "SGT",
      "path": "22"
    },
    "4181": {
      "branch": 36,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5684,
        5714
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4182": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x109B"
    },
    "4185": {
      "branch": 36,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4186": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4188": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4189": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4190": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4196": {
      "op": "SHL"
    },
    "4197": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4198": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4199": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4201": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4203": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4204": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "ADD",
      "path": "22"
    },
    "4205": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4206": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "4208": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4210": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4211": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "ADD",
      "path": "22"
    },
    "4212": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4213": {
      "op": "PUSH18",
      "value": "0xE8D0E4CAE6D0DED8C840E8DEDE40D0D2CED"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "4234": {
      "op": "SHL"
    },
    "4235": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4237": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4238": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "ADD",
      "path": "22"
    },
    "4239": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4240": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4241": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4242": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4243": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4244": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4245": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "SUB",
      "path": "22"
    },
    "4246": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4248": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "ADD",
      "path": "22"
    },
    "4249": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4250": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4251": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5676,
        5737
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4252": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5767,
        5779
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 24
    },
    "4253": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4255": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4256": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5764
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4257": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4259": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4260": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4261": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10AA"
    },
    "4264": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4265": {
      "dev": "Modulus by zero",
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "INVALID",
      "path": "22"
    },
    "4266": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4267": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5779
      ],
      "op": "SMOD",
      "path": "22"
    },
    "4268": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5784
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "4270": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5784
      ],
      "op": "SIGNEXTEND",
      "path": "22"
    },
    "4271": {
      "branch": 37,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5755,
        5784
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "4272": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1100"
    },
    "4275": {
      "branch": 37,
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "4276": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4278": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "DUP1",
      "path": "22"
    },
    "4279": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4286": {
      "op": "SHL"
    },
    "4287": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4288": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4289": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "4291": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "4293": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4294": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "ADD",
      "path": "22"
    },
    "4295": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4296": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x17"
    },
    "4298": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x24"
    },
    "4300": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4301": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "ADD",
      "path": "22"
    },
    "4302": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4303": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x7468726573686F6C642025207469636B53706163696E67000000000000000000"
    },
    "4336": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x44"
    },
    "4338": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "DUP3",
      "path": "22"
    },
    "4339": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "ADD",
      "path": "22"
    },
    "4340": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "4341": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4342": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "4343": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4344": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "DUP2",
      "path": "22"
    },
    "4345": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4346": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "SUB",
      "path": "22"
    },
    "4347": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "4349": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "ADD",
      "path": "22"
    },
    "4350": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "4351": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "REVERT",
      "path": "22"
    },
    "4352": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5747,
        5812
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "4353": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5541,
        5819
      ],
      "op": "POP",
      "path": "22"
    },
    "4354": {
      "fn": "AlphaStrategy._checkThreshold",
      "offset": [
        5541,
        5819
      ],
      "op": "POP",
      "path": "22"
    },
    "4355": {
      "fn": "AlphaStrategy._checkThreshold",
      "jump": "o",
      "offset": [
        5541,
        5819
      ],
      "op": "JUMP",
      "path": "22"
    }
  },
  "sha1": "668b3af8bbe958984930589776a152a28052c510",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.7.6;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\n\nimport \"./AlphaVault.sol\";\n\n/**\n * @title   Alpha Strategy\n * @notice  Rebalancing strategy for Alpha Vault that maintains the two\n *          following range orders:\n *\n *          1. Base order is placed between X - B and X + B + TS.\n *          2. Limit order is placed between X - L and X, or between X + TS\n *             and X + L + TS, depending on which token it holds more of.\n *\n *          where:\n *\n *              X = current tick rounded down to multiple of tick spacing\n *              TS = tick spacing\n *              B = base threshold\n *              L = limit threshold\n *\n *          Note that after these two orders, the vault should have deposited\n *          all its tokens and should only have a few wei left.\n *\n *          Because the limit order tries to sell whichever token the vault\n *          holds more of, the vault's holdings will have a tendency to get\n *          closer to a 1:1 balance. This enables it to continue providing\n *          liquidity without running out of inventory of either token, and\n *          achieves this without the need to swap directly on Uniswap and pay\n *          fees.\n */\ncontract AlphaStrategy {\n    AlphaVault public immutable vault;\n    IUniswapV3Pool public immutable pool;\n    int24 public immutable tickSpacing;\n\n    int24 public baseThreshold;\n    int24 public limitThreshold;\n    int24 public maxTwapDeviation;\n    uint32 public twapDuration;\n    address public keeper;\n\n    uint256 public lastRebalance;\n    int24 public lastTick;\n\n    /**\n     * @param _vault Underlying Alpha Vault\n     * @param _baseThreshold Used to determine base order range\n     * @param _limitThreshold Used to determine limit order range\n     * @param _maxTwapDeviation Max deviation from TWAP during rebalance\n     * @param _twapDuration TWAP duration in seconds for rebalance check\n     * @param _keeper Account that can call `rebalance()`\n     */\n    constructor(\n        address _vault,\n        int24 _baseThreshold,\n        int24 _limitThreshold,\n        int24 _maxTwapDeviation,\n        uint32 _twapDuration,\n        address _keeper\n    ) {\n        IUniswapV3Pool _pool = AlphaVault(_vault).pool();\n        int24 _tickSpacing = _pool.tickSpacing();\n\n        vault = AlphaVault(_vault);\n        pool = _pool;\n        tickSpacing = _tickSpacing;\n\n        baseThreshold = _baseThreshold;\n        limitThreshold = _limitThreshold;\n        maxTwapDeviation = _maxTwapDeviation;\n        twapDuration = _twapDuration;\n        keeper = _keeper;\n\n        _checkThreshold(_baseThreshold, _tickSpacing);\n        _checkThreshold(_limitThreshold, _tickSpacing);\n        require(_maxTwapDeviation > 0, \"maxTwapDeviation\");\n        require(_twapDuration > 0, \"twapDuration\");\n\n        (, lastTick, , , , , ) = _pool.slot0();\n    }\n\n    /**\n     * @notice Calculates new ranges for orders and calls `vault.rebalance()`\n     * so that vault can update its positions. Can only be called by keeper.\n     */\n    function rebalance() external {\n        require(msg.sender == keeper, \"keeper\");\n\n        int24 _baseThreshold = baseThreshold;\n        int24 _limitThreshold = limitThreshold;\n\n        // Check price is not too close to min/max allowed by Uniswap. Price\n        // shouldn't be this extreme unless something was wrong with the pool.\n        int24 tick = getTick();\n        int24 maxThreshold =\n            _baseThreshold > _limitThreshold ? _baseThreshold : _limitThreshold;\n        require(tick > TickMath.MIN_TICK + maxThreshold + tickSpacing, \"tick too low\");\n        require(tick < TickMath.MAX_TICK - maxThreshold - tickSpacing, \"tick too high\");\n\n        // Check price has not moved a lot recently. This mitigates price\n        // manipulation during rebalance and also prevents placing orders\n        // when it's too volatile.\n        int24 twap = getTwap();\n        int24 deviation = tick > twap ? tick - twap : twap - tick;\n        require(deviation <= maxTwapDeviation, \"maxTwapDeviation\");\n\n        int24 tickFloor = _floor(tick);\n        int24 tickCeil = tickFloor + tickSpacing;\n\n        vault.rebalance(\n            0,\n            0,\n            tickFloor - _baseThreshold,\n            tickCeil + _baseThreshold,\n            tickFloor - _limitThreshold,\n            tickFloor,\n            tickCeil,\n            tickCeil + _limitThreshold\n        );\n\n        lastRebalance = block.timestamp;\n        lastTick = tick;\n    }\n\n    /// @dev Fetches current price in ticks from Uniswap pool.\n    function getTick() public view returns (int24 tick) {\n        (, tick, , , , , ) = pool.slot0();\n    }\n\n    /// @dev Fetches time-weighted average price in ticks from Uniswap pool.\n    function getTwap() public view returns (int24) {\n        uint32 _twapDuration = twapDuration;\n        uint32[] memory secondsAgo = new uint32[](2);\n        secondsAgo[0] = _twapDuration;\n        secondsAgo[1] = 0;\n\n        (int56[] memory tickCumulatives, ) = pool.observe(secondsAgo);\n        return int24((tickCumulatives[1] - tickCumulatives[0]) / _twapDuration);\n    }\n\n    /// @dev Rounds tick down towards negative infinity so that it's a multiple\n    /// of `tickSpacing`.\n    function _floor(int24 tick) internal view returns (int24) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--;\n        return compressed * tickSpacing;\n    }\n\n    function _checkThreshold(int24 threshold, int24 _tickSpacing) internal pure {\n        require(threshold > 0, \"threshold > 0\");\n        require(threshold <= TickMath.MAX_TICK, \"threshold too high\");\n        require(threshold % _tickSpacing == 0, \"threshold % tickSpacing\");\n    }\n\n    function setKeeper(address _keeper) external onlyGovernance {\n        keeper = _keeper;\n    }\n\n    function setBaseThreshold(int24 _baseThreshold) external onlyGovernance {\n        _checkThreshold(_baseThreshold, tickSpacing);\n        baseThreshold = _baseThreshold;\n    }\n\n    function setLimitThreshold(int24 _limitThreshold) external onlyGovernance {\n        _checkThreshold(_limitThreshold, tickSpacing);\n        limitThreshold = _limitThreshold;\n    }\n\n    function setMaxTwapDeviation(int24 _maxTwapDeviation) external onlyGovernance {\n        require(_maxTwapDeviation > 0, \"maxTwapDeviation\");\n        maxTwapDeviation = _maxTwapDeviation;\n    }\n\n    function setTwapDuration(uint32 _twapDuration) external onlyGovernance {\n        require(_twapDuration > 0, \"twapDuration\");\n        twapDuration = _twapDuration;\n    }\n\n    /// @dev Uses same governance as underlying vault.\n    modifier onlyGovernance {\n        require(msg.sender == vault.governance(), \"governance\");\n        _;\n    }\n}\n",
  "sourceMap": "1333:5489:22:-:0;;;2100:867;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2100:867:22;;;;;;;;;;;;;;;;;;;;;;;;;2324:25;;-1:-1:-1;;;2324:25:22;;;;2100:867;;;;;;;;;;;2301:20;;-1:-1:-1;;;;;2324:23:22;;;;;:25;;;;;2100:867;2324:25;;;;;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2324:25:22;2380:19;;;-1:-1:-1;;;2380:19:22;;;;2324:25;;-1:-1:-1;2359:18:22;;-1:-1:-1;;;;;2380:17:22;;;;;:19;;;;;2324:25;;2380:19;;;;;;;:17;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:40;;2429:6;-1:-1:-1;;;;;2410:26:22;;;-1:-1:-1;;;;;2410:26:22;;;;;;;2453:5;-1:-1:-1;;;;;2446:12:22;;;-1:-1:-1;;;;;2446:12:22;;;;;;;2482;2468:26;;;;;;;;;;;;2521:14;2505:13;;:30;;;;;;;;;;;;;;;;;;;;2562:15;2545:14;;:32;;;;;;;;;;;;;;;;;;;;2606:17;2587:16;;:36;;;;;;;;;;;;;;;;;;;;2648:13;2633:12;;:28;;;;;;;;;;;;;;;;;;2680:7;2671:6;;:16;;;;;-1:-1:-1;;;;;2671:16:22;;;;;-1:-1:-1;;;;;2671:16:22;;;;;;2698:45;2714:14;2730:12;2698:15;;;:45;;:::i;:::-;2753:46;2769:15;2786:12;2753:15;:46::i;:::-;2837:1;2817:17;:21;;;2809:50;;;;;-1:-1:-1;;;2809:50:22;;;;;;;;;;;;-1:-1:-1;;;2809:50:22;;;;;;;;;;;;;;;2893:1;2877:13;:17;;;2869:42;;;;;-1:-1:-1;;;2869:42:22;;;;;;;;;;;;-1:-1:-1;;;2869:42:22;;;;;;;;;;;;;;;2947:5;-1:-1:-1;;;;;2947:11:22;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2947:13:22;;;2925:8;2922:38;;;;;;;;;-1:-1:-1;;2922:38:22;;;;;;;;;-1:-1:-1;1333:5489:22;;-1:-1:-1;;;;;;;1333:5489:22;5541:278;5647:1;5635:9;:13;;;5627:39;;;;;-1:-1:-1;;;5627:39:22;;;;;;;;;;;;-1:-1:-1;;;5627:39:22;;;;;;;;;;;;;;;637:9:19;5684:30:22;;;;;;5676:61;;;;;-1:-1:-1;;;5676:61:22;;;;;;;;;;;;-1:-1:-1;;;5676:61:22;;;;;;;;;;;;;;;5767:12;5755:24;;:9;:24;;;;;;;;:29;;;5747:65;;;;;-1:-1:-1;;;5747:65:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;5541:278;;:::o;1333:5489::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/AlphaStrategy.sol",
  "type": "contract"
}